user root;
worker_processes  1;

error_log  /usr/local/openresty/nginx/logs/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;

    default_type  application/octet-stream;

    log_format json_combined escape=json
      '{'
        '"time_local":"$time_local",'
        '"msec":"$msec",'
        '"remote_addr":"$remote_addr",'
        '"request_method":"$request_method",'
        '"request":"$request",'
        '"status": "$status",'
        '"request_time":"$request_time",'
        '"request_length":"$request_length",'
        '"bytes_sent":"$bytes_sent",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"http_user_agent":"$http_user_agent",'
        '"http_referrer":"$http_referer",'
        '"remote_user":"$remote_user",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_status":"$upstream_status",'
        '"upstream_response_time":"$upstream_response_time",'
        '"upstream_connect_time":"$upstream_connect_time",'
        '"upstream_header_time":"$upstream_header_time"'
      '}';

    map $request_uri $loggable {
        default   1;
        /_ping    0;
    }

    access_log  /usr/local/openresty/nginx/logs/access.log  json_combined if=$loggable;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  75s;

    #gzip  on;

    lua_package_path "/usr/local/openresty/nginx/lua/?.lua;;";
    lua_shared_dict  discovery 1m;
    lua_shared_dict  jwks 1m;
    lua_shared_dict introspection 10m;

    lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;         #TEMPLATE_MARK_SSL
    lua_ssl_verify_depth 5;                                                 #TEMPLATE_MARK_SSL

    client_body_buffer_size 64K;
    client_header_buffer_size 64k;
    client_max_body_size 4M;

    absolute_redirect off;

    limit_req_zone $binary_remote_addr zone=healthcheck:1m rate=3r/s;
    # TODO: rate limiting for payment api requests
    # limit_req_zone $binary_remote_addr zone=payments:10m rate=3r/s;
    # TODO: Proxy cache
    #proxy_cache_path /tmp/nginx-cache levels=1:2 keys_zone=vault_short_term_cache:1m max_size=5m inactive=1s use_temp_path=off;

    server {
      listen 80;
      listen 443 ssl;                                                       #TEMPLATE_MARK_SSL

      ssl_certificate    /etc/ssl/certs/server.<SSL_CERT_FILE_TYPE>;        #TEMPLATE_MARK_SSL
      ssl_certificate_key  /etc/ssl/private/server.key;                     #TEMPLATE_MARK_SSL
                                                                            #TEMPLATE_MARK_SSL
      # Restrict older SSL and TLS versions for better security             #TEMPLATE_MARK_SSL
      ssl_protocols TLSv1.2 TLSv1.3;                                        #TEMPLATE_MARK_SSL
                                                                            #TEMPLATE_MARK_SSL
      # Redirect all non-SSL traffic to SSL.                                #TEMPLATE_MARK_SSL
      if ($ssl_protocol = "") {                                             #TEMPLATE_MARK_SSL
        rewrite ^ https://$host$request_uri? permanent;                     #TEMPLATE_MARK_SSL
      }                                                                     #TEMPLATE_MARK_SSL

      #set $session_name   strato_stripeps_session;
      ##set $session_secret <SESSION_SECRET>; # for lua_code_cache=off only

      resolver 127.0.0.11 8.8.8.8 ipv6=off;

      large_client_header_buffers 4 32k;

      location /_ping {
        return 200 'pong';
      }

      location /ping {
        limit_req zone=healthcheck;
        proxy_read_timeout 1s;
        proxy_pass http://__STRIPE_PS_HOST__/ping;
      }

      location / {
        proxy_read_timeout 65s;
        proxy_pass http://__STRIPE_PS_HOST__/;
      }

      # A workaround for pulling the Oracle healthcheck on the same host. Because oracle does not have nginx or ssl, that's the easiest way to do it given the cloudflare ssl full mode.
      location /ping_oracle {
        limit_req zone=healthcheck;
        proxy_read_timeout 1s;
        proxy_pass http://172.17.0.1:8080/ping;
      }
    }
}
