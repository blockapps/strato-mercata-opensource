// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BlockTable: index form required 1`] = `
Object {
  "registeredFields": Object {
    "query": Object {
      "count": 1,
      "name": "query",
      "type": "Field",
    },
    "value": Object {
      "count": 1,
      "name": "value",
      "type": "Field",
    },
  },
  "syncErrors": Object {
    "query": "Required",
    "value": "Required",
  },
}
`;

exports[`BlockTable: index form with values 1`] = `
Object {
  "registeredFields": Object {
    "query": Object {
      "count": 1,
      "name": "query",
      "type": "Field",
    },
    "value": Object {
      "count": 1,
      "name": "value",
      "type": "Field",
    },
  },
  "values": Object {
    "query": "maxnumber",
    "value": 1522,
  },
}
`;

exports[`BlockTable: index mapStateToProps 1`] = `
Object {
  "query": Object {
    "last": 15,
  },
  "queryResult": Array [
    Object {
      "blockData": Object {
        "coinbase": "a1021e62fbb7fe282b7e2bd1ca26325af02bb43e",
        "difficulty": 143854,
        "extraData": "",
        "gasLimit": 2.7640800523559524e+31,
        "gasUsed": 0,
        "kind": "BlockData",
        "mixHash": "0000000000000000000000000000000000000000000000000000000000000000",
        "nonce": 6,
        "number": 210,
        "parentHash": "868f0fc14a4388e1652ffcf9910ee5f8656d9c0002407800a1f55d3606069803",
        "receiptsRoot": "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
        "stateRoot": "ad16f12eb1249d92fb95823dcd015dfb03e4628c7a36f1dfb787c01910e59dca",
        "timestamp": "2017-12-26T06:32:44Z",
        "transactionsRoot": "64f030ddfb2341468a9d4e4712eabf77f7712afc465a0a048f43c87fa7522b9d",
        "unclesHash": "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
      },
      "blockUncles": Array [],
      "kind": "Block",
      "next": "",
      "receiptTransactions": Array [
        Object {
          "from": "7241e4db9c40568b889277e152a08a956cfaa60f",
          "gasLimit": 100000000,
          "gasPrice": 1,
          "hash": "503007d37d1e39a42bd6d009ec2a4efe6b9b6c6a7b1ce892e8621eca48e77156",
          "kind": "Transaction",
          "nonce": 0,
          "r": "724b4be0569bd52aa7704fa24e3ff9ec96b1a604438b4883f3c63d0446c650e7",
          "s": "7c44e50b354da261d288b84c5a6d24dfe173d8cb664d87c1ed9599ebd5989770",
          "transactionType": "Contract",
          "v": "1c",
          "value": 0,
        },
      ],
    },
    Object {
      "blockData": Object {
        "coinbase": "a1021e62fbb7fe282b7e2bd1ca26325af02bb43e",
        "difficulty": 143784,
        "extraData": "",
        "gasLimit": 2.7613833888902394e+31,
        "gasUsed": 0,
        "kind": "BlockData",
        "mixHash": "0000000000000000000000000000000000000000000000000000000000000000",
        "nonce": 6,
        "number": 209,
        "parentHash": "c2d8889c7b1093390499f45b7f4998cf02af8ebc38f5fbec715be18088128194",
        "receiptsRoot": "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
        "stateRoot": "8e466fe301a12e8634f4fb43c4822b8893fd4f610e9f5da65299565c3ceeed04",
        "timestamp": "2017-12-26T06:32:39Z",
        "transactionsRoot": "5735d7671ba1dd48bdfc7c3a759e8965e7633674a845908b466dc6f0d2c8ee39",
        "unclesHash": "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
      },
      "blockUncles": Array [],
      "kind": "Block",
      "next": "",
      "receiptTransactions": Array [
        Object {
          "data": "",
          "from": "e1fd0d4a52b75a694de8b55528ad48e2e2cf7859",
          "gasLimit": 100000,
          "gasPrice": 50000000000,
          "hash": "80018d1ea04907a61b3769312f4a85f4be8454e5e866c7dc06f6f68880de01c4",
          "kind": "Transaction",
          "nonce": 31,
          "r": "3c758951da4d22f5e965765c52b2bf810bfa5e707b218a91b0f9ed05efcbfc2f",
          "s": "31c4ceb7aa06828416e6bb8d291fe4922f31e2c3e1e1634bc3f44520d6d99882",
          "to": "7241e4db9c40568b889277e152a08a956cfaa60f",
          "transactionType": "Transfer",
          "v": "1c",
          "value": 1e+21,
        },
      ],
    },
    Object {
      "blockData": Object {
        "coinbase": "a1021e62fbb7fe282b7e2bd1ca26325af02bb43e",
        "difficulty": 143854,
        "extraData": "",
        "gasLimit": 2.7586893563157125e+31,
        "gasUsed": 0,
        "kind": "BlockData",
        "mixHash": "0000000000000000000000000000000000000000000000000000000000000000",
        "nonce": 6,
        "number": 208,
        "parentHash": "567ea7f1d69aa7d787912e9b226a234f5d85364f78efde70fb084b2671a78d5c",
        "receiptsRoot": "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
        "stateRoot": "23cb94f057429a4bc45f99785db3fa600175305e3268b07804e07414682ac52e",
        "timestamp": "2017-12-25T11:12:05Z",
        "transactionsRoot": "e35d30e9836294aa909cecfdc59a97cc3cc5b13ccbfe201cc7b9dadeda835eb0",
        "unclesHash": "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
      },
      "blockUncles": Array [],
      "kind": "Block",
      "next": "",
      "receiptTransactions": Array [
        Object {
          "data": "",
          "from": "e1fd0d4a52b75a694de8b55528ad48e2e2cf7859",
          "gasLimit": 100000,
          "gasPrice": 50000000000,
          "hash": "6f48f716b78b73c9600607787871252978ae7d606cea91bed3ad401846e5466a",
          "kind": "Transaction",
          "nonce": 30,
          "r": "3784e3d8708f564dd2f7c5435e918c809f89e645fd4eb98cf09182cc89ba5ac6",
          "s": "49aef7743eff03734ecca0f73ae2985cfef6e0582bdc2b6a4f85c3cfb393cd61",
          "to": "7241e4db9c40568b889277e152a08a956cfaa60f",
          "transactionType": "Transfer",
          "v": "1b",
          "value": 1e+21,
        },
      ],
    },
    Object {
      "blockData": Object {
        "coinbase": "a1021e62fbb7fe282b7e2bd1ca26325af02bb43e",
        "difficulty": 143784,
        "extraData": "",
        "gasLimit": 2.755997952065648e+31,
        "gasUsed": 0,
        "kind": "BlockData",
        "mixHash": "0000000000000000000000000000000000000000000000000000000000000000",
        "nonce": 6,
        "number": 207,
        "parentHash": "480c6b2d2dcfa8946f07be11794e874da44fcc0e217ae4b301fcd069af055f8f",
        "receiptsRoot": "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
        "stateRoot": "2591fe8fa3d28f62b6e32bc83ebd67f5eb2cc491bc7eb406a1f3e0ef7813625b",
        "timestamp": "2017-12-25T11:11:59Z",
        "transactionsRoot": "a30d5a69f3aab95b35a86bd37830ca71474980fd01c79c6bd4b9255b1327bc9f",
        "unclesHash": "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
      },
      "blockUncles": Array [],
      "kind": "Block",
      "next": "",
      "receiptTransactions": Array [
        Object {
          "data": "",
          "from": "e1fd0d4a52b75a694de8b55528ad48e2e2cf7859",
          "gasLimit": 100000,
          "gasPrice": 50000000000,
          "hash": "05bf38c5a70be7b5fdcddb39ddea98d66a270d8cf802795cb8d40084cf554773",
          "kind": "Transaction",
          "nonce": 29,
          "r": "1dbae9c947748dcc4f69b02c54ee1c2233a70dcc50c3344becbe90364b0997c2",
          "s": "6fc56b05cf4a7a3c56f20f46fd66023bd9f7e4e8863f80ac6ddea089b0cf53d9",
          "to": "d2263b71c14010ff03d8f786670aba691b22b158",
          "transactionType": "Transfer",
          "v": "1b",
          "value": 1e+21,
        },
      ],
    },
    Object {
      "blockData": Object {
        "coinbase": "a1021e62fbb7fe282b7e2bd1ca26325af02bb43e",
        "difficulty": 143854,
        "extraData": "",
        "gasLimit": 2.753309173575828e+31,
        "gasUsed": 0,
        "kind": "BlockData",
        "mixHash": "0000000000000000000000000000000000000000000000000000000000000000",
        "nonce": 6,
        "number": 206,
        "parentHash": "f3a70b32445b96005b83875d757180167ad93d767b025b684c036f278a84da9a",
        "receiptsRoot": "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
        "stateRoot": "f099efd49939767cd403c49787d98249833fde8119bec366422b837f6ed58fb0",
        "timestamp": "2017-12-22T09:53:45Z",
        "transactionsRoot": "e23264e3b1a95a40f1ff121460eaf6d7e0e29c0deb78d9ca8536450c4fc517d3",
        "unclesHash": "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
      },
      "blockUncles": Array [],
      "kind": "Block",
      "next": "",
      "receiptTransactions": Array [
        Object {
          "data": "",
          "from": "e1fd0d4a52b75a694de8b55528ad48e2e2cf7859",
          "gasLimit": 100000,
          "gasPrice": 50000000000,
          "hash": "1d8987cd32ba900a7fec7a13bfbb12c006920cf3333a2b3410bb8cc3fc395f25",
          "kind": "Transaction",
          "nonce": 28,
          "r": "f3e497a889f45c9cfadc41cd8fe8e17099c55416bf5730f3658fadc744631d16",
          "s": "3cce58933f7cee768829bf36c6cccefa080fda662fc628ab99c0ff3d5a6999bf",
          "to": "d2263b71c14010ff03d8f786670aba691b22b158",
          "transactionType": "Transfer",
          "v": "1b",
          "value": 1e+21,
        },
      ],
    },
  ],
  "selectedChain": "airline cartel 1",
}
`;

exports[`BlockTable: index render component with values 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BlockTable
    anyTouched={false}
    array={
      Object {
        "insert": [Function],
        "move": [Function],
        "pop": [Function],
        "push": [Function],
        "remove": [Function],
        "removeAll": [Function],
        "shift": [Function],
        "splice": [Function],
        "swap": [Function],
        "unshift": [Function],
      }
    }
    asyncValidate={[Function]}
    asyncValidating={false}
    autofill={[Function]}
    blur={[Function]}
    change={[Function]}
    clearAsyncError={[Function]}
    clearQuery={[Function]}
    clearSubmit={[Function]}
    clearSubmitErrors={[Function]}
    destroy={[Function]}
    dirty={false}
    dispatch={[Function]}
    error={undefined}
    executeQuery={[Function]}
    fetchBlockData={[Function]}
    form="block-query"
    handleSubmit={[Function]}
    history={Object {}}
    initialValues={undefined}
    initialize={[Function]}
    initialized={false}
    invalid={false}
    pristine={true}
    pure={true}
    query={
      Object {
        "last": 15,
      }
    }
    queryResult={
      Array [
        Object {
          "blockData": Object {
            "coinbase": "a1021e62fbb7fe282b7e2bd1ca26325af02bb43e",
            "difficulty": 143854,
            "extraData": "",
            "gasLimit": 2.7640800523559524e+31,
            "gasUsed": 0,
            "kind": "BlockData",
            "mixHash": "0000000000000000000000000000000000000000000000000000000000000000",
            "nonce": 6,
            "number": 210,
            "parentHash": "868f0fc14a4388e1652ffcf9910ee5f8656d9c0002407800a1f55d3606069803",
            "receiptsRoot": "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
            "stateRoot": "ad16f12eb1249d92fb95823dcd015dfb03e4628c7a36f1dfb787c01910e59dca",
            "timestamp": "2017-12-26T06:32:44Z",
            "transactionsRoot": "64f030ddfb2341468a9d4e4712eabf77f7712afc465a0a048f43c87fa7522b9d",
            "unclesHash": "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
          },
          "blockUncles": Array [],
          "kind": "Block",
          "next": "",
          "receiptTransactions": Array [
            Object {
              "from": "7241e4db9c40568b889277e152a08a956cfaa60f",
              "gasLimit": 100000000,
              "gasPrice": 1,
              "hash": "503007d37d1e39a42bd6d009ec2a4efe6b9b6c6a7b1ce892e8621eca48e77156",
              "kind": "Transaction",
              "nonce": 0,
              "r": "724b4be0569bd52aa7704fa24e3ff9ec96b1a604438b4883f3c63d0446c650e7",
              "s": "7c44e50b354da261d288b84c5a6d24dfe173d8cb664d87c1ed9599ebd5989770",
              "transactionType": "Contract",
              "v": "1c",
              "value": 0,
            },
          ],
        },
        Object {
          "blockData": Object {
            "coinbase": "a1021e62fbb7fe282b7e2bd1ca26325af02bb43e",
            "difficulty": 143784,
            "extraData": "",
            "gasLimit": 2.7613833888902394e+31,
            "gasUsed": 0,
            "kind": "BlockData",
            "mixHash": "0000000000000000000000000000000000000000000000000000000000000000",
            "nonce": 6,
            "number": 209,
            "parentHash": "c2d8889c7b1093390499f45b7f4998cf02af8ebc38f5fbec715be18088128194",
            "receiptsRoot": "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
            "stateRoot": "8e466fe301a12e8634f4fb43c4822b8893fd4f610e9f5da65299565c3ceeed04",
            "timestamp": "2017-12-26T06:32:39Z",
            "transactionsRoot": "5735d7671ba1dd48bdfc7c3a759e8965e7633674a845908b466dc6f0d2c8ee39",
            "unclesHash": "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
          },
          "blockUncles": Array [],
          "kind": "Block",
          "next": "",
          "receiptTransactions": Array [
            Object {
              "data": "",
              "from": "e1fd0d4a52b75a694de8b55528ad48e2e2cf7859",
              "gasLimit": 100000,
              "gasPrice": 50000000000,
              "hash": "80018d1ea04907a61b3769312f4a85f4be8454e5e866c7dc06f6f68880de01c4",
              "kind": "Transaction",
              "nonce": 31,
              "r": "3c758951da4d22f5e965765c52b2bf810bfa5e707b218a91b0f9ed05efcbfc2f",
              "s": "31c4ceb7aa06828416e6bb8d291fe4922f31e2c3e1e1634bc3f44520d6d99882",
              "to": "7241e4db9c40568b889277e152a08a956cfaa60f",
              "transactionType": "Transfer",
              "v": "1c",
              "value": 1e+21,
            },
          ],
        },
        Object {
          "blockData": Object {
            "coinbase": "a1021e62fbb7fe282b7e2bd1ca26325af02bb43e",
            "difficulty": 143854,
            "extraData": "",
            "gasLimit": 2.7586893563157125e+31,
            "gasUsed": 0,
            "kind": "BlockData",
            "mixHash": "0000000000000000000000000000000000000000000000000000000000000000",
            "nonce": 6,
            "number": 208,
            "parentHash": "567ea7f1d69aa7d787912e9b226a234f5d85364f78efde70fb084b2671a78d5c",
            "receiptsRoot": "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
            "stateRoot": "23cb94f057429a4bc45f99785db3fa600175305e3268b07804e07414682ac52e",
            "timestamp": "2017-12-25T11:12:05Z",
            "transactionsRoot": "e35d30e9836294aa909cecfdc59a97cc3cc5b13ccbfe201cc7b9dadeda835eb0",
            "unclesHash": "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
          },
          "blockUncles": Array [],
          "kind": "Block",
          "next": "",
          "receiptTransactions": Array [
            Object {
              "data": "",
              "from": "e1fd0d4a52b75a694de8b55528ad48e2e2cf7859",
              "gasLimit": 100000,
              "gasPrice": 50000000000,
              "hash": "6f48f716b78b73c9600607787871252978ae7d606cea91bed3ad401846e5466a",
              "kind": "Transaction",
              "nonce": 30,
              "r": "3784e3d8708f564dd2f7c5435e918c809f89e645fd4eb98cf09182cc89ba5ac6",
              "s": "49aef7743eff03734ecca0f73ae2985cfef6e0582bdc2b6a4f85c3cfb393cd61",
              "to": "7241e4db9c40568b889277e152a08a956cfaa60f",
              "transactionType": "Transfer",
              "v": "1b",
              "value": 1e+21,
            },
          ],
        },
        Object {
          "blockData": Object {
            "coinbase": "a1021e62fbb7fe282b7e2bd1ca26325af02bb43e",
            "difficulty": 143784,
            "extraData": "",
            "gasLimit": 2.755997952065648e+31,
            "gasUsed": 0,
            "kind": "BlockData",
            "mixHash": "0000000000000000000000000000000000000000000000000000000000000000",
            "nonce": 6,
            "number": 207,
            "parentHash": "480c6b2d2dcfa8946f07be11794e874da44fcc0e217ae4b301fcd069af055f8f",
            "receiptsRoot": "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
            "stateRoot": "2591fe8fa3d28f62b6e32bc83ebd67f5eb2cc491bc7eb406a1f3e0ef7813625b",
            "timestamp": "2017-12-25T11:11:59Z",
            "transactionsRoot": "a30d5a69f3aab95b35a86bd37830ca71474980fd01c79c6bd4b9255b1327bc9f",
            "unclesHash": "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
          },
          "blockUncles": Array [],
          "kind": "Block",
          "next": "",
          "receiptTransactions": Array [
            Object {
              "data": "",
              "from": "e1fd0d4a52b75a694de8b55528ad48e2e2cf7859",
              "gasLimit": 100000,
              "gasPrice": 50000000000,
              "hash": "05bf38c5a70be7b5fdcddb39ddea98d66a270d8cf802795cb8d40084cf554773",
              "kind": "Transaction",
              "nonce": 29,
              "r": "1dbae9c947748dcc4f69b02c54ee1c2233a70dcc50c3344becbe90364b0997c2",
              "s": "6fc56b05cf4a7a3c56f20f46fd66023bd9f7e4e8863f80ac6ddea089b0cf53d9",
              "to": "d2263b71c14010ff03d8f786670aba691b22b158",
              "transactionType": "Transfer",
              "v": "1b",
              "value": 1e+21,
            },
          ],
        },
        Object {
          "blockData": Object {
            "coinbase": "a1021e62fbb7fe282b7e2bd1ca26325af02bb43e",
            "difficulty": 143854,
            "extraData": "",
            "gasLimit": 2.753309173575828e+31,
            "gasUsed": 0,
            "kind": "BlockData",
            "mixHash": "0000000000000000000000000000000000000000000000000000000000000000",
            "nonce": 6,
            "number": 206,
            "parentHash": "f3a70b32445b96005b83875d757180167ad93d767b025b684c036f278a84da9a",
            "receiptsRoot": "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
            "stateRoot": "f099efd49939767cd403c49787d98249833fde8119bec366422b837f6ed58fb0",
            "timestamp": "2017-12-22T09:53:45Z",
            "transactionsRoot": "e23264e3b1a95a40f1ff121460eaf6d7e0e29c0deb78d9ca8536450c4fc517d3",
            "unclesHash": "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
          },
          "blockUncles": Array [],
          "kind": "Block",
          "next": "",
          "receiptTransactions": Array [
            Object {
              "data": "",
              "from": "e1fd0d4a52b75a694de8b55528ad48e2e2cf7859",
              "gasLimit": 100000,
              "gasPrice": 50000000000,
              "hash": "1d8987cd32ba900a7fec7a13bfbb12c006920cf3333a2b3410bb8cc3fc395f25",
              "kind": "Transaction",
              "nonce": 28,
              "r": "f3e497a889f45c9cfadc41cd8fe8e17099c55416bf5730f3658fadc744631d16",
              "s": "3cce58933f7cee768829bf36c6cccefa080fda662fc628ab99c0ff3d5a6999bf",
              "to": "d2263b71c14010ff03d8f786670aba691b22b158",
              "transactionType": "Transfer",
              "v": "1b",
              "value": 1e+21,
            },
          ],
        },
      ]
    }
    removeQuery={[Function]}
    reset={[Function]}
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      }
    }
    submit={[Function]}
    submitFailed={false}
    submitSucceeded={false}
    submitting={false}
    touch={[Function]}
    triggerSubmit={undefined}
    untouch={[Function]}
    updateQuery={[Function]}
    valid={true}
    warning={undefined}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="row smd-pad-4"
        >
          <div
            className="col-sm-11 text-left"
          >
            <span
              className="h3"
            >
              Query Builder
            </span>
          </div>
          <div
            className="col-sm-1 text-right"
          >
            <Blueprint.Button
              className="pt-intent-primary pt-icon-refresh"
              onClick={[Function]}
            />
          </div>
        </div>,
        <div>
          <div
            className="row smd-pad-4"
          >
            <div
              className="col-sm-12"
            >
              <Form
                onSubmit={[Function]}
              >
                <div
                  className="pt-control-group smd-full-width"
                >
                  <div
                    className="pt-select"
                  >
                    <Field
                      component="select"
                      name="query"
                      placeholder="Query Type"
                      required={true}
                      type="select"
                      validate={[Function]}
                    >
                      <option
                        value="default"
                      >
                        Query Type
                      </option>
                      <option
                        value="number"
                      >
                        Block Number
                      </option>
                      <option
                        value="id"
                      >
                        Block Id
                      </option>
                      <option
                        value="maxnumber"
                      >
                        Max Block Number
                      </option>
                      <option
                        value="minnumber"
                      >
                        Min Block Number
                      </option>
                      <option
                        value="gaslim"
                      >
                        Gas Limit
                      </option>
                      <option
                        value="mingaslim"
                      >
                        Min Gas Limit
                      </option>
                      <option
                        value="maxgaslim"
                      >
                        Max Gas Limit
                      </option>
                      <option
                        value="gasused"
                      >
                        Gas Used
                      </option>
                      <option
                        value="mingasused"
                      >
                        Min Gas Used
                      </option>
                      <option
                        value="maxgasused"
                      >
                        Max Gas Used
                      </option>
                      <option
                        value="diff"
                      >
                        Difficulty
                      </option>
                      <option
                        value="maxdiff"
                      >
                        Max Difficulty
                      </option>
                      <option
                        value="mindiff"
                      >
                        Min Difficulty
                      </option>
                      <option
                        value="txaddress"
                      >
                        Contained Transaction Address
                      </option>
                      <option
                        value="coinbase"
                      >
                        Coinbase
                      </option>
                      <option
                        value="address"
                      >
                        Address
                      </option>
                      <option
                        value="hash"
                      >
                        Hash
                      </option>
                      <option
                        value="last"
                      >
                        Last
                      </option>
                    </Field>
                  </div>
                  <div
                    className="smd-input-width"
                  >
                    <Field
                      className="pt-input pt-fill"
                      component="input"
                      dir="auto"
                      name="value"
                      onKeyPress={[Function]}
                      placeholder="Query Term"
                      type="text"
                      validate={[Function]}
                    />
                  </div>
                  <Blueprint.Button
                    className="pt-intent-primary pt-icon-arrow-right"
                    onClick={[Function]}
                    type="submit"
                  />
                </div>
              </Form>
            </div>
          </div>
          <div
            className="row smd-pad-4"
          >
            <div
              className="col-sm-12"
            >
              <span
                className="pt-tag pt-tag-removable smd-margin-right-4"
              >
                last: 15
                <button
                  className="pt-tag-remove"
                  onClick={[Function]}
                />
              </span>
            </div>
          </div>
        </div>,
        <div
          className="row"
        >
          <div
            className="col-sm-12"
          >
            <table
              className="pt-table pt-interactive pt-condensed pt-striped"
              style={
                Object {
                  "tableLayout": "fixed",
                  "width": "100%",
                }
              }
            >
              <thead>
                <tr>
                  <th
                    width="10%"
                  >
                    <h5>
                      Block Number
                    </h5>
                  </th>
                  <th
                    width="45%"
                  >
                    <h5>
                      Parent Hash
                    </h5>
                  </th>
                  <th
                    width="15%"
                  >
                    <h5>
                      Difficulty
                    </h5>
                  </th>
                  <th
                    width="10%"
                  >
                    <h5>
                      Nonce
                    </h5>
                  </th>
                  <th
                    width="20%"
                  >
                    <h5>
                      Timestamp
                    </h5>
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr
                  onClick={[Function]}
                >
                  <td
                    width="10%"
                  >
                    <small>
                      210
                    </small>
                  </td>
                  <td
                    width="22.5%"
                  >
                    <HexText
                      classes="small smd-pad-4"
                      value="868f0fc14a4388e1652ffcf9910ee5f8656d9c0002407800a1f55d3606069803"
                    />
                  </td>
                  <td
                    width="15%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        143854
                      </small>
                    </Text>
                  </td>
                  <td
                    width="10%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        6
                      </small>
                    </Text>
                  </td>
                  <td
                    width="20%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        2017-12-26 01:32:44 AM
                      </small>
                    </Text>
                  </td>
                </tr>
                <tr
                  onClick={[Function]}
                >
                  <td
                    width="10%"
                  >
                    <small>
                      209
                    </small>
                  </td>
                  <td
                    width="22.5%"
                  >
                    <HexText
                      classes="small smd-pad-4"
                      value="c2d8889c7b1093390499f45b7f4998cf02af8ebc38f5fbec715be18088128194"
                    />
                  </td>
                  <td
                    width="15%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        143784
                      </small>
                    </Text>
                  </td>
                  <td
                    width="10%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        6
                      </small>
                    </Text>
                  </td>
                  <td
                    width="20%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        2017-12-26 01:32:39 AM
                      </small>
                    </Text>
                  </td>
                </tr>
                <tr
                  onClick={[Function]}
                >
                  <td
                    width="10%"
                  >
                    <small>
                      208
                    </small>
                  </td>
                  <td
                    width="22.5%"
                  >
                    <HexText
                      classes="small smd-pad-4"
                      value="567ea7f1d69aa7d787912e9b226a234f5d85364f78efde70fb084b2671a78d5c"
                    />
                  </td>
                  <td
                    width="15%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        143854
                      </small>
                    </Text>
                  </td>
                  <td
                    width="10%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        6
                      </small>
                    </Text>
                  </td>
                  <td
                    width="20%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        2017-12-25 06:12:05 AM
                      </small>
                    </Text>
                  </td>
                </tr>
                <tr
                  onClick={[Function]}
                >
                  <td
                    width="10%"
                  >
                    <small>
                      207
                    </small>
                  </td>
                  <td
                    width="22.5%"
                  >
                    <HexText
                      classes="small smd-pad-4"
                      value="480c6b2d2dcfa8946f07be11794e874da44fcc0e217ae4b301fcd069af055f8f"
                    />
                  </td>
                  <td
                    width="15%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        143784
                      </small>
                    </Text>
                  </td>
                  <td
                    width="10%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        6
                      </small>
                    </Text>
                  </td>
                  <td
                    width="20%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        2017-12-25 06:11:59 AM
                      </small>
                    </Text>
                  </td>
                </tr>
                <tr
                  onClick={[Function]}
                >
                  <td
                    width="10%"
                  >
                    <small>
                      206
                    </small>
                  </td>
                  <td
                    width="22.5%"
                  >
                    <HexText
                      classes="small smd-pad-4"
                      value="f3a70b32445b96005b83875d757180167ad93d767b025b684c036f278a84da9a"
                    />
                  </td>
                  <td
                    width="15%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        143854
                      </small>
                    </Text>
                  </td>
                  <td
                    width="10%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        6
                      </small>
                    </Text>
                  </td>
                  <td
                    width="20%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        2017-12-22 04:53:45 AM
                      </small>
                    </Text>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>,
      ],
      "className": "pt-card pt-dark pt-elevation-2",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="col-sm-11 text-left"
            >
              <span
                className="h3"
              >
                Query Builder
              </span>
            </div>,
            <div
              className="col-sm-1 text-right"
            >
              <Blueprint.Button
                className="pt-intent-primary pt-icon-refresh"
                onClick={[Function]}
              />
            </div>,
          ],
          "className": "row smd-pad-4",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span
                className="h3"
              >
                Query Builder
              </span>,
              "className": "col-sm-11 text-left",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Query Builder",
                "className": "h3",
              },
              "ref": null,
              "rendered": "Query Builder",
              "type": "span",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Blueprint.Button
                className="pt-intent-primary pt-icon-refresh"
                onClick={[Function]}
              />,
              "className": "col-sm-1 text-right",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "pt-intent-primary pt-icon-refresh",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="row smd-pad-4"
            >
              <div
                className="col-sm-12"
              >
                <Form
                  onSubmit={[Function]}
                >
                  <div
                    className="pt-control-group smd-full-width"
                  >
                    <div
                      className="pt-select"
                    >
                      <Field
                        component="select"
                        name="query"
                        placeholder="Query Type"
                        required={true}
                        type="select"
                        validate={[Function]}
                      >
                        <option
                          value="default"
                        >
                          Query Type
                        </option>
                        <option
                          value="number"
                        >
                          Block Number
                        </option>
                        <option
                          value="id"
                        >
                          Block Id
                        </option>
                        <option
                          value="maxnumber"
                        >
                          Max Block Number
                        </option>
                        <option
                          value="minnumber"
                        >
                          Min Block Number
                        </option>
                        <option
                          value="gaslim"
                        >
                          Gas Limit
                        </option>
                        <option
                          value="mingaslim"
                        >
                          Min Gas Limit
                        </option>
                        <option
                          value="maxgaslim"
                        >
                          Max Gas Limit
                        </option>
                        <option
                          value="gasused"
                        >
                          Gas Used
                        </option>
                        <option
                          value="mingasused"
                        >
                          Min Gas Used
                        </option>
                        <option
                          value="maxgasused"
                        >
                          Max Gas Used
                        </option>
                        <option
                          value="diff"
                        >
                          Difficulty
                        </option>
                        <option
                          value="maxdiff"
                        >
                          Max Difficulty
                        </option>
                        <option
                          value="mindiff"
                        >
                          Min Difficulty
                        </option>
                        <option
                          value="txaddress"
                        >
                          Contained Transaction Address
                        </option>
                        <option
                          value="coinbase"
                        >
                          Coinbase
                        </option>
                        <option
                          value="address"
                        >
                          Address
                        </option>
                        <option
                          value="hash"
                        >
                          Hash
                        </option>
                        <option
                          value="last"
                        >
                          Last
                        </option>
                      </Field>
                    </div>
                    <div
                      className="smd-input-width"
                    >
                      <Field
                        className="pt-input pt-fill"
                        component="input"
                        dir="auto"
                        name="value"
                        onKeyPress={[Function]}
                        placeholder="Query Term"
                        type="text"
                        validate={[Function]}
                      />
                    </div>
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-arrow-right"
                      onClick={[Function]}
                      type="submit"
                    />
                  </div>
                </Form>
              </div>
            </div>,
            <div
              className="row smd-pad-4"
            >
              <div
                className="col-sm-12"
              >
                <span
                  className="pt-tag pt-tag-removable smd-margin-right-4"
                >
                  last: 15
                  <button
                    className="pt-tag-remove"
                    onClick={[Function]}
                  />
                </span>
              </div>
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-sm-12"
              >
                <Form
                  onSubmit={[Function]}
                >
                  <div
                    className="pt-control-group smd-full-width"
                  >
                    <div
                      className="pt-select"
                    >
                      <Field
                        component="select"
                        name="query"
                        placeholder="Query Type"
                        required={true}
                        type="select"
                        validate={[Function]}
                      >
                        <option
                          value="default"
                        >
                          Query Type
                        </option>
                        <option
                          value="number"
                        >
                          Block Number
                        </option>
                        <option
                          value="id"
                        >
                          Block Id
                        </option>
                        <option
                          value="maxnumber"
                        >
                          Max Block Number
                        </option>
                        <option
                          value="minnumber"
                        >
                          Min Block Number
                        </option>
                        <option
                          value="gaslim"
                        >
                          Gas Limit
                        </option>
                        <option
                          value="mingaslim"
                        >
                          Min Gas Limit
                        </option>
                        <option
                          value="maxgaslim"
                        >
                          Max Gas Limit
                        </option>
                        <option
                          value="gasused"
                        >
                          Gas Used
                        </option>
                        <option
                          value="mingasused"
                        >
                          Min Gas Used
                        </option>
                        <option
                          value="maxgasused"
                        >
                          Max Gas Used
                        </option>
                        <option
                          value="diff"
                        >
                          Difficulty
                        </option>
                        <option
                          value="maxdiff"
                        >
                          Max Difficulty
                        </option>
                        <option
                          value="mindiff"
                        >
                          Min Difficulty
                        </option>
                        <option
                          value="txaddress"
                        >
                          Contained Transaction Address
                        </option>
                        <option
                          value="coinbase"
                        >
                          Coinbase
                        </option>
                        <option
                          value="address"
                        >
                          Address
                        </option>
                        <option
                          value="hash"
                        >
                          Hash
                        </option>
                        <option
                          value="last"
                        >
                          Last
                        </option>
                      </Field>
                    </div>
                    <div
                      className="smd-input-width"
                    >
                      <Field
                        className="pt-input pt-fill"
                        component="input"
                        dir="auto"
                        name="value"
                        onKeyPress={[Function]}
                        placeholder="Query Term"
                        type="text"
                        validate={[Function]}
                      />
                    </div>
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-arrow-right"
                      onClick={[Function]}
                      type="submit"
                    />
                  </div>
                </Form>
              </div>,
              "className": "row smd-pad-4",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Form
                  onSubmit={[Function]}
                >
                  <div
                    className="pt-control-group smd-full-width"
                  >
                    <div
                      className="pt-select"
                    >
                      <Field
                        component="select"
                        name="query"
                        placeholder="Query Type"
                        required={true}
                        type="select"
                        validate={[Function]}
                      >
                        <option
                          value="default"
                        >
                          Query Type
                        </option>
                        <option
                          value="number"
                        >
                          Block Number
                        </option>
                        <option
                          value="id"
                        >
                          Block Id
                        </option>
                        <option
                          value="maxnumber"
                        >
                          Max Block Number
                        </option>
                        <option
                          value="minnumber"
                        >
                          Min Block Number
                        </option>
                        <option
                          value="gaslim"
                        >
                          Gas Limit
                        </option>
                        <option
                          value="mingaslim"
                        >
                          Min Gas Limit
                        </option>
                        <option
                          value="maxgaslim"
                        >
                          Max Gas Limit
                        </option>
                        <option
                          value="gasused"
                        >
                          Gas Used
                        </option>
                        <option
                          value="mingasused"
                        >
                          Min Gas Used
                        </option>
                        <option
                          value="maxgasused"
                        >
                          Max Gas Used
                        </option>
                        <option
                          value="diff"
                        >
                          Difficulty
                        </option>
                        <option
                          value="maxdiff"
                        >
                          Max Difficulty
                        </option>
                        <option
                          value="mindiff"
                        >
                          Min Difficulty
                        </option>
                        <option
                          value="txaddress"
                        >
                          Contained Transaction Address
                        </option>
                        <option
                          value="coinbase"
                        >
                          Coinbase
                        </option>
                        <option
                          value="address"
                        >
                          Address
                        </option>
                        <option
                          value="hash"
                        >
                          Hash
                        </option>
                        <option
                          value="last"
                        >
                          Last
                        </option>
                      </Field>
                    </div>
                    <div
                      className="smd-input-width"
                    >
                      <Field
                        className="pt-input pt-fill"
                        component="input"
                        dir="auto"
                        name="value"
                        onKeyPress={[Function]}
                        placeholder="Query Term"
                        type="text"
                        validate={[Function]}
                      />
                    </div>
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-arrow-right"
                      onClick={[Function]}
                      type="submit"
                    />
                  </div>
                </Form>,
                "className": "col-sm-12",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <div
                    className="pt-control-group smd-full-width"
                  >
                    <div
                      className="pt-select"
                    >
                      <Field
                        component="select"
                        name="query"
                        placeholder="Query Type"
                        required={true}
                        type="select"
                        validate={[Function]}
                      >
                        <option
                          value="default"
                        >
                          Query Type
                        </option>
                        <option
                          value="number"
                        >
                          Block Number
                        </option>
                        <option
                          value="id"
                        >
                          Block Id
                        </option>
                        <option
                          value="maxnumber"
                        >
                          Max Block Number
                        </option>
                        <option
                          value="minnumber"
                        >
                          Min Block Number
                        </option>
                        <option
                          value="gaslim"
                        >
                          Gas Limit
                        </option>
                        <option
                          value="mingaslim"
                        >
                          Min Gas Limit
                        </option>
                        <option
                          value="maxgaslim"
                        >
                          Max Gas Limit
                        </option>
                        <option
                          value="gasused"
                        >
                          Gas Used
                        </option>
                        <option
                          value="mingasused"
                        >
                          Min Gas Used
                        </option>
                        <option
                          value="maxgasused"
                        >
                          Max Gas Used
                        </option>
                        <option
                          value="diff"
                        >
                          Difficulty
                        </option>
                        <option
                          value="maxdiff"
                        >
                          Max Difficulty
                        </option>
                        <option
                          value="mindiff"
                        >
                          Min Difficulty
                        </option>
                        <option
                          value="txaddress"
                        >
                          Contained Transaction Address
                        </option>
                        <option
                          value="coinbase"
                        >
                          Coinbase
                        </option>
                        <option
                          value="address"
                        >
                          Address
                        </option>
                        <option
                          value="hash"
                        >
                          Hash
                        </option>
                        <option
                          value="last"
                        >
                          Last
                        </option>
                      </Field>
                    </div>
                    <div
                      className="smd-input-width"
                    >
                      <Field
                        className="pt-input pt-fill"
                        component="input"
                        dir="auto"
                        name="value"
                        onKeyPress={[Function]}
                        placeholder="Query Term"
                        type="text"
                        validate={[Function]}
                      />
                    </div>
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-arrow-right"
                      onClick={[Function]}
                      type="submit"
                    />
                  </div>,
                  "onSubmit": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="pt-select"
                      >
                        <Field
                          component="select"
                          name="query"
                          placeholder="Query Type"
                          required={true}
                          type="select"
                          validate={[Function]}
                        >
                          <option
                            value="default"
                          >
                            Query Type
                          </option>
                          <option
                            value="number"
                          >
                            Block Number
                          </option>
                          <option
                            value="id"
                          >
                            Block Id
                          </option>
                          <option
                            value="maxnumber"
                          >
                            Max Block Number
                          </option>
                          <option
                            value="minnumber"
                          >
                            Min Block Number
                          </option>
                          <option
                            value="gaslim"
                          >
                            Gas Limit
                          </option>
                          <option
                            value="mingaslim"
                          >
                            Min Gas Limit
                          </option>
                          <option
                            value="maxgaslim"
                          >
                            Max Gas Limit
                          </option>
                          <option
                            value="gasused"
                          >
                            Gas Used
                          </option>
                          <option
                            value="mingasused"
                          >
                            Min Gas Used
                          </option>
                          <option
                            value="maxgasused"
                          >
                            Max Gas Used
                          </option>
                          <option
                            value="diff"
                          >
                            Difficulty
                          </option>
                          <option
                            value="maxdiff"
                          >
                            Max Difficulty
                          </option>
                          <option
                            value="mindiff"
                          >
                            Min Difficulty
                          </option>
                          <option
                            value="txaddress"
                          >
                            Contained Transaction Address
                          </option>
                          <option
                            value="coinbase"
                          >
                            Coinbase
                          </option>
                          <option
                            value="address"
                          >
                            Address
                          </option>
                          <option
                            value="hash"
                          >
                            Hash
                          </option>
                          <option
                            value="last"
                          >
                            Last
                          </option>
                        </Field>
                      </div>,
                      <div
                        className="smd-input-width"
                      >
                        <Field
                          className="pt-input pt-fill"
                          component="input"
                          dir="auto"
                          name="value"
                          onKeyPress={[Function]}
                          placeholder="Query Term"
                          type="text"
                          validate={[Function]}
                        />
                      </div>,
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-arrow-right"
                        onClick={[Function]}
                        type="submit"
                      />,
                    ],
                    "className": "pt-control-group smd-full-width",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Field
                          component="select"
                          name="query"
                          placeholder="Query Type"
                          required={true}
                          type="select"
                          validate={[Function]}
                        >
                          <option
                            value="default"
                          >
                            Query Type
                          </option>
                          <option
                            value="number"
                          >
                            Block Number
                          </option>
                          <option
                            value="id"
                          >
                            Block Id
                          </option>
                          <option
                            value="maxnumber"
                          >
                            Max Block Number
                          </option>
                          <option
                            value="minnumber"
                          >
                            Min Block Number
                          </option>
                          <option
                            value="gaslim"
                          >
                            Gas Limit
                          </option>
                          <option
                            value="mingaslim"
                          >
                            Min Gas Limit
                          </option>
                          <option
                            value="maxgaslim"
                          >
                            Max Gas Limit
                          </option>
                          <option
                            value="gasused"
                          >
                            Gas Used
                          </option>
                          <option
                            value="mingasused"
                          >
                            Min Gas Used
                          </option>
                          <option
                            value="maxgasused"
                          >
                            Max Gas Used
                          </option>
                          <option
                            value="diff"
                          >
                            Difficulty
                          </option>
                          <option
                            value="maxdiff"
                          >
                            Max Difficulty
                          </option>
                          <option
                            value="mindiff"
                          >
                            Min Difficulty
                          </option>
                          <option
                            value="txaddress"
                          >
                            Contained Transaction Address
                          </option>
                          <option
                            value="coinbase"
                          >
                            Coinbase
                          </option>
                          <option
                            value="address"
                          >
                            Address
                          </option>
                          <option
                            value="hash"
                          >
                            Hash
                          </option>
                          <option
                            value="last"
                          >
                            Last
                          </option>
                        </Field>,
                        "className": "pt-select",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            <option
                              value="default"
                            >
                              Query Type
                            </option>,
                            <option
                              value="number"
                            >
                              Block Number
                            </option>,
                            <option
                              value="id"
                            >
                              Block Id
                            </option>,
                            <option
                              value="maxnumber"
                            >
                              Max Block Number
                            </option>,
                            <option
                              value="minnumber"
                            >
                              Min Block Number
                            </option>,
                            <option
                              value="gaslim"
                            >
                              Gas Limit
                            </option>,
                            <option
                              value="mingaslim"
                            >
                              Min Gas Limit
                            </option>,
                            <option
                              value="maxgaslim"
                            >
                              Max Gas Limit
                            </option>,
                            <option
                              value="gasused"
                            >
                              Gas Used
                            </option>,
                            <option
                              value="mingasused"
                            >
                              Min Gas Used
                            </option>,
                            <option
                              value="maxgasused"
                            >
                              Max Gas Used
                            </option>,
                            <option
                              value="diff"
                            >
                              Difficulty
                            </option>,
                            <option
                              value="maxdiff"
                            >
                              Max Difficulty
                            </option>,
                            <option
                              value="mindiff"
                            >
                              Min Difficulty
                            </option>,
                            <option
                              value="txaddress"
                            >
                              Contained Transaction Address
                            </option>,
                            <option
                              value="coinbase"
                            >
                              Coinbase
                            </option>,
                            <option
                              value="address"
                            >
                              Address
                            </option>,
                            <option
                              value="hash"
                            >
                              Hash
                            </option>,
                            <option
                              value="last"
                            >
                              Last
                            </option>,
                          ],
                          "component": "select",
                          "name": "query",
                          "placeholder": "Query Type",
                          "required": true,
                          "type": "select",
                          "validate": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": "default",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Query Type",
                              "value": "default",
                            },
                            "ref": null,
                            "rendered": "Query Type",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "number",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Block Number",
                              "value": "number",
                            },
                            "ref": null,
                            "rendered": "Block Number",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "id",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Block Id",
                              "value": "id",
                            },
                            "ref": null,
                            "rendered": "Block Id",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "maxnumber",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Max Block Number",
                              "value": "maxnumber",
                            },
                            "ref": null,
                            "rendered": "Max Block Number",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "minnumber",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Min Block Number",
                              "value": "minnumber",
                            },
                            "ref": null,
                            "rendered": "Min Block Number",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "gaslim",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Gas Limit",
                              "value": "gaslim",
                            },
                            "ref": null,
                            "rendered": "Gas Limit",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "mingaslim",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Min Gas Limit",
                              "value": "mingaslim",
                            },
                            "ref": null,
                            "rendered": "Min Gas Limit",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "maxgaslim",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Max Gas Limit",
                              "value": "maxgaslim",
                            },
                            "ref": null,
                            "rendered": "Max Gas Limit",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "gasused",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Gas Used",
                              "value": "gasused",
                            },
                            "ref": null,
                            "rendered": "Gas Used",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "mingasused",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Min Gas Used",
                              "value": "mingasused",
                            },
                            "ref": null,
                            "rendered": "Min Gas Used",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "maxgasused",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Max Gas Used",
                              "value": "maxgasused",
                            },
                            "ref": null,
                            "rendered": "Max Gas Used",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "diff",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Difficulty",
                              "value": "diff",
                            },
                            "ref": null,
                            "rendered": "Difficulty",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "maxdiff",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Max Difficulty",
                              "value": "maxdiff",
                            },
                            "ref": null,
                            "rendered": "Max Difficulty",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "mindiff",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Min Difficulty",
                              "value": "mindiff",
                            },
                            "ref": null,
                            "rendered": "Min Difficulty",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "txaddress",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Contained Transaction Address",
                              "value": "txaddress",
                            },
                            "ref": null,
                            "rendered": "Contained Transaction Address",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "coinbase",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Coinbase",
                              "value": "coinbase",
                            },
                            "ref": null,
                            "rendered": "Coinbase",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "address",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Address",
                              "value": "address",
                            },
                            "ref": null,
                            "rendered": "Address",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "hash",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Hash",
                              "value": "hash",
                            },
                            "ref": null,
                            "rendered": "Hash",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "last",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Last",
                              "value": "last",
                            },
                            "ref": null,
                            "rendered": "Last",
                            "type": "option",
                          },
                        ],
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Field
                          className="pt-input pt-fill"
                          component="input"
                          dir="auto"
                          name="value"
                          onKeyPress={[Function]}
                          placeholder="Query Term"
                          type="text"
                          validate={[Function]}
                        />,
                        "className": "smd-input-width",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "className": "pt-input pt-fill",
                          "component": "input",
                          "dir": "auto",
                          "name": "value",
                          "onKeyPress": [Function],
                          "placeholder": "Query Term",
                          "type": "text",
                          "validate": [Function],
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": "pt-intent-primary pt-icon-arrow-right",
                        "onClick": [Function],
                        "type": "submit",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                "type": [Function],
              },
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-sm-12"
              >
                <span
                  className="pt-tag pt-tag-removable smd-margin-right-4"
                >
                  last: 15
                  <button
                    className="pt-tag-remove"
                    onClick={[Function]}
                  />
                </span>
              </div>,
              "className": "row smd-pad-4",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className="pt-tag pt-tag-removable smd-margin-right-4"
                  >
                    last: 15
                    <button
                      className="pt-tag-remove"
                      onClick={[Function]}
                    />
                  </span>,
                ],
                "className": "col-sm-12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "tag-last-0",
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "last: 15",
                      <button
                        className="pt-tag-remove"
                        onClick={[Function]}
                      />,
                    ],
                    "className": "pt-tag pt-tag-removable smd-margin-right-4",
                  },
                  "ref": null,
                  "rendered": Array [
                    "last: 15",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "pt-tag-remove",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "button",
                    },
                  ],
                  "type": "span",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="col-sm-12"
          >
            <table
              className="pt-table pt-interactive pt-condensed pt-striped"
              style={
                Object {
                  "tableLayout": "fixed",
                  "width": "100%",
                }
              }
            >
              <thead>
                <tr>
                  <th
                    width="10%"
                  >
                    <h5>
                      Block Number
                    </h5>
                  </th>
                  <th
                    width="45%"
                  >
                    <h5>
                      Parent Hash
                    </h5>
                  </th>
                  <th
                    width="15%"
                  >
                    <h5>
                      Difficulty
                    </h5>
                  </th>
                  <th
                    width="10%"
                  >
                    <h5>
                      Nonce
                    </h5>
                  </th>
                  <th
                    width="20%"
                  >
                    <h5>
                      Timestamp
                    </h5>
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr
                  onClick={[Function]}
                >
                  <td
                    width="10%"
                  >
                    <small>
                      210
                    </small>
                  </td>
                  <td
                    width="22.5%"
                  >
                    <HexText
                      classes="small smd-pad-4"
                      value="868f0fc14a4388e1652ffcf9910ee5f8656d9c0002407800a1f55d3606069803"
                    />
                  </td>
                  <td
                    width="15%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        143854
                      </small>
                    </Text>
                  </td>
                  <td
                    width="10%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        6
                      </small>
                    </Text>
                  </td>
                  <td
                    width="20%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        2017-12-26 01:32:44 AM
                      </small>
                    </Text>
                  </td>
                </tr>
                <tr
                  onClick={[Function]}
                >
                  <td
                    width="10%"
                  >
                    <small>
                      209
                    </small>
                  </td>
                  <td
                    width="22.5%"
                  >
                    <HexText
                      classes="small smd-pad-4"
                      value="c2d8889c7b1093390499f45b7f4998cf02af8ebc38f5fbec715be18088128194"
                    />
                  </td>
                  <td
                    width="15%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        143784
                      </small>
                    </Text>
                  </td>
                  <td
                    width="10%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        6
                      </small>
                    </Text>
                  </td>
                  <td
                    width="20%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        2017-12-26 01:32:39 AM
                      </small>
                    </Text>
                  </td>
                </tr>
                <tr
                  onClick={[Function]}
                >
                  <td
                    width="10%"
                  >
                    <small>
                      208
                    </small>
                  </td>
                  <td
                    width="22.5%"
                  >
                    <HexText
                      classes="small smd-pad-4"
                      value="567ea7f1d69aa7d787912e9b226a234f5d85364f78efde70fb084b2671a78d5c"
                    />
                  </td>
                  <td
                    width="15%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        143854
                      </small>
                    </Text>
                  </td>
                  <td
                    width="10%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        6
                      </small>
                    </Text>
                  </td>
                  <td
                    width="20%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        2017-12-25 06:12:05 AM
                      </small>
                    </Text>
                  </td>
                </tr>
                <tr
                  onClick={[Function]}
                >
                  <td
                    width="10%"
                  >
                    <small>
                      207
                    </small>
                  </td>
                  <td
                    width="22.5%"
                  >
                    <HexText
                      classes="small smd-pad-4"
                      value="480c6b2d2dcfa8946f07be11794e874da44fcc0e217ae4b301fcd069af055f8f"
                    />
                  </td>
                  <td
                    width="15%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        143784
                      </small>
                    </Text>
                  </td>
                  <td
                    width="10%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        6
                      </small>
                    </Text>
                  </td>
                  <td
                    width="20%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        2017-12-25 06:11:59 AM
                      </small>
                    </Text>
                  </td>
                </tr>
                <tr
                  onClick={[Function]}
                >
                  <td
                    width="10%"
                  >
                    <small>
                      206
                    </small>
                  </td>
                  <td
                    width="22.5%"
                  >
                    <HexText
                      classes="small smd-pad-4"
                      value="f3a70b32445b96005b83875d757180167ad93d767b025b684c036f278a84da9a"
                    />
                  </td>
                  <td
                    width="15%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        143854
                      </small>
                    </Text>
                  </td>
                  <td
                    width="10%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        6
                      </small>
                    </Text>
                  </td>
                  <td
                    width="20%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        2017-12-22 04:53:45 AM
                      </small>
                    </Text>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>,
          "className": "row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <table
              className="pt-table pt-interactive pt-condensed pt-striped"
              style={
                Object {
                  "tableLayout": "fixed",
                  "width": "100%",
                }
              }
            >
              <thead>
                <tr>
                  <th
                    width="10%"
                  >
                    <h5>
                      Block Number
                    </h5>
                  </th>
                  <th
                    width="45%"
                  >
                    <h5>
                      Parent Hash
                    </h5>
                  </th>
                  <th
                    width="15%"
                  >
                    <h5>
                      Difficulty
                    </h5>
                  </th>
                  <th
                    width="10%"
                  >
                    <h5>
                      Nonce
                    </h5>
                  </th>
                  <th
                    width="20%"
                  >
                    <h5>
                      Timestamp
                    </h5>
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr
                  onClick={[Function]}
                >
                  <td
                    width="10%"
                  >
                    <small>
                      210
                    </small>
                  </td>
                  <td
                    width="22.5%"
                  >
                    <HexText
                      classes="small smd-pad-4"
                      value="868f0fc14a4388e1652ffcf9910ee5f8656d9c0002407800a1f55d3606069803"
                    />
                  </td>
                  <td
                    width="15%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        143854
                      </small>
                    </Text>
                  </td>
                  <td
                    width="10%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        6
                      </small>
                    </Text>
                  </td>
                  <td
                    width="20%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        2017-12-26 01:32:44 AM
                      </small>
                    </Text>
                  </td>
                </tr>
                <tr
                  onClick={[Function]}
                >
                  <td
                    width="10%"
                  >
                    <small>
                      209
                    </small>
                  </td>
                  <td
                    width="22.5%"
                  >
                    <HexText
                      classes="small smd-pad-4"
                      value="c2d8889c7b1093390499f45b7f4998cf02af8ebc38f5fbec715be18088128194"
                    />
                  </td>
                  <td
                    width="15%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        143784
                      </small>
                    </Text>
                  </td>
                  <td
                    width="10%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        6
                      </small>
                    </Text>
                  </td>
                  <td
                    width="20%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        2017-12-26 01:32:39 AM
                      </small>
                    </Text>
                  </td>
                </tr>
                <tr
                  onClick={[Function]}
                >
                  <td
                    width="10%"
                  >
                    <small>
                      208
                    </small>
                  </td>
                  <td
                    width="22.5%"
                  >
                    <HexText
                      classes="small smd-pad-4"
                      value="567ea7f1d69aa7d787912e9b226a234f5d85364f78efde70fb084b2671a78d5c"
                    />
                  </td>
                  <td
                    width="15%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        143854
                      </small>
                    </Text>
                  </td>
                  <td
                    width="10%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        6
                      </small>
                    </Text>
                  </td>
                  <td
                    width="20%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        2017-12-25 06:12:05 AM
                      </small>
                    </Text>
                  </td>
                </tr>
                <tr
                  onClick={[Function]}
                >
                  <td
                    width="10%"
                  >
                    <small>
                      207
                    </small>
                  </td>
                  <td
                    width="22.5%"
                  >
                    <HexText
                      classes="small smd-pad-4"
                      value="480c6b2d2dcfa8946f07be11794e874da44fcc0e217ae4b301fcd069af055f8f"
                    />
                  </td>
                  <td
                    width="15%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        143784
                      </small>
                    </Text>
                  </td>
                  <td
                    width="10%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        6
                      </small>
                    </Text>
                  </td>
                  <td
                    width="20%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        2017-12-25 06:11:59 AM
                      </small>
                    </Text>
                  </td>
                </tr>
                <tr
                  onClick={[Function]}
                >
                  <td
                    width="10%"
                  >
                    <small>
                      206
                    </small>
                  </td>
                  <td
                    width="22.5%"
                  >
                    <HexText
                      classes="small smd-pad-4"
                      value="f3a70b32445b96005b83875d757180167ad93d767b025b684c036f278a84da9a"
                    />
                  </td>
                  <td
                    width="15%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        143854
                      </small>
                    </Text>
                  </td>
                  <td
                    width="10%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        6
                      </small>
                    </Text>
                  </td>
                  <td
                    width="20%"
                  >
                    <Text
                      ellipsize={true}
                    >
                      <small>
                        2017-12-22 04:53:45 AM
                      </small>
                    </Text>
                  </td>
                </tr>
              </tbody>
            </table>,
            "className": "col-sm-12",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <thead>
                  <tr>
                    <th
                      width="10%"
                    >
                      <h5>
                        Block Number
                      </h5>
                    </th>
                    <th
                      width="45%"
                    >
                      <h5>
                        Parent Hash
                      </h5>
                    </th>
                    <th
                      width="15%"
                    >
                      <h5>
                        Difficulty
                      </h5>
                    </th>
                    <th
                      width="10%"
                    >
                      <h5>
                        Nonce
                      </h5>
                    </th>
                    <th
                      width="20%"
                    >
                      <h5>
                        Timestamp
                      </h5>
                    </th>
                  </tr>
                </thead>,
                <tbody>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        210
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="868f0fc14a4388e1652ffcf9910ee5f8656d9c0002407800a1f55d3606069803"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143854
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-26 01:32:44 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        209
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="c2d8889c7b1093390499f45b7f4998cf02af8ebc38f5fbec715be18088128194"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143784
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-26 01:32:39 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        208
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="567ea7f1d69aa7d787912e9b226a234f5d85364f78efde70fb084b2671a78d5c"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143854
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-25 06:12:05 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        207
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="480c6b2d2dcfa8946f07be11794e874da44fcc0e217ae4b301fcd069af055f8f"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143784
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-25 06:11:59 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        206
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="f3a70b32445b96005b83875d757180167ad93d767b025b684c036f278a84da9a"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143854
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-22 04:53:45 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                </tbody>,
              ],
              "className": "pt-table pt-interactive pt-condensed pt-striped",
              "style": Object {
                "tableLayout": "fixed",
                "width": "100%",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <tr>
                    <th
                      width="10%"
                    >
                      <h5>
                        Block Number
                      </h5>
                    </th>
                    <th
                      width="45%"
                    >
                      <h5>
                        Parent Hash
                      </h5>
                    </th>
                    <th
                      width="15%"
                    >
                      <h5>
                        Difficulty
                      </h5>
                    </th>
                    <th
                      width="10%"
                    >
                      <h5>
                        Nonce
                      </h5>
                    </th>
                    <th
                      width="20%"
                    >
                      <h5>
                        Timestamp
                      </h5>
                    </th>
                  </tr>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <th
                        width="10%"
                      >
                        <h5>
                          Block Number
                        </h5>
                      </th>,
                      <th
                        width="45%"
                      >
                        <h5>
                          Parent Hash
                        </h5>
                      </th>,
                      <th
                        width="15%"
                      >
                        <h5>
                          Difficulty
                        </h5>
                      </th>,
                      <th
                        width="10%"
                      >
                        <h5>
                          Nonce
                        </h5>
                      </th>,
                      <th
                        width="20%"
                      >
                        <h5>
                          Timestamp
                        </h5>
                      </th>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <h5>
                          Block Number
                        </h5>,
                        "width": "10%",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Block Number",
                        },
                        "ref": null,
                        "rendered": "Block Number",
                        "type": "h5",
                      },
                      "type": "th",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <h5>
                          Parent Hash
                        </h5>,
                        "width": "45%",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Parent Hash",
                        },
                        "ref": null,
                        "rendered": "Parent Hash",
                        "type": "h5",
                      },
                      "type": "th",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <h5>
                          Difficulty
                        </h5>,
                        "width": "15%",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Difficulty",
                        },
                        "ref": null,
                        "rendered": "Difficulty",
                        "type": "h5",
                      },
                      "type": "th",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <h5>
                          Nonce
                        </h5>,
                        "width": "10%",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Nonce",
                        },
                        "ref": null,
                        "rendered": "Nonce",
                        "type": "h5",
                      },
                      "type": "th",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <h5>
                          Timestamp
                        </h5>,
                        "width": "20%",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Timestamp",
                        },
                        "ref": null,
                        "rendered": "Timestamp",
                        "type": "h5",
                      },
                      "type": "th",
                    },
                  ],
                  "type": "tr",
                },
                "type": "thead",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <tr
                      onClick={[Function]}
                    >
                      <td
                        width="10%"
                      >
                        <small>
                          210
                        </small>
                      </td>
                      <td
                        width="22.5%"
                      >
                        <HexText
                          classes="small smd-pad-4"
                          value="868f0fc14a4388e1652ffcf9910ee5f8656d9c0002407800a1f55d3606069803"
                        />
                      </td>
                      <td
                        width="15%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            143854
                          </small>
                        </Text>
                      </td>
                      <td
                        width="10%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            6
                          </small>
                        </Text>
                      </td>
                      <td
                        width="20%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            2017-12-26 01:32:44 AM
                          </small>
                        </Text>
                      </td>
                    </tr>,
                    <tr
                      onClick={[Function]}
                    >
                      <td
                        width="10%"
                      >
                        <small>
                          209
                        </small>
                      </td>
                      <td
                        width="22.5%"
                      >
                        <HexText
                          classes="small smd-pad-4"
                          value="c2d8889c7b1093390499f45b7f4998cf02af8ebc38f5fbec715be18088128194"
                        />
                      </td>
                      <td
                        width="15%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            143784
                          </small>
                        </Text>
                      </td>
                      <td
                        width="10%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            6
                          </small>
                        </Text>
                      </td>
                      <td
                        width="20%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            2017-12-26 01:32:39 AM
                          </small>
                        </Text>
                      </td>
                    </tr>,
                    <tr
                      onClick={[Function]}
                    >
                      <td
                        width="10%"
                      >
                        <small>
                          208
                        </small>
                      </td>
                      <td
                        width="22.5%"
                      >
                        <HexText
                          classes="small smd-pad-4"
                          value="567ea7f1d69aa7d787912e9b226a234f5d85364f78efde70fb084b2671a78d5c"
                        />
                      </td>
                      <td
                        width="15%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            143854
                          </small>
                        </Text>
                      </td>
                      <td
                        width="10%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            6
                          </small>
                        </Text>
                      </td>
                      <td
                        width="20%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            2017-12-25 06:12:05 AM
                          </small>
                        </Text>
                      </td>
                    </tr>,
                    <tr
                      onClick={[Function]}
                    >
                      <td
                        width="10%"
                      >
                        <small>
                          207
                        </small>
                      </td>
                      <td
                        width="22.5%"
                      >
                        <HexText
                          classes="small smd-pad-4"
                          value="480c6b2d2dcfa8946f07be11794e874da44fcc0e217ae4b301fcd069af055f8f"
                        />
                      </td>
                      <td
                        width="15%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            143784
                          </small>
                        </Text>
                      </td>
                      <td
                        width="10%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            6
                          </small>
                        </Text>
                      </td>
                      <td
                        width="20%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            2017-12-25 06:11:59 AM
                          </small>
                        </Text>
                      </td>
                    </tr>,
                    <tr
                      onClick={[Function]}
                    >
                      <td
                        width="10%"
                      >
                        <small>
                          206
                        </small>
                      </td>
                      <td
                        width="22.5%"
                      >
                        <HexText
                          classes="small smd-pad-4"
                          value="f3a70b32445b96005b83875d757180167ad93d767b025b684c036f278a84da9a"
                        />
                      </td>
                      <td
                        width="15%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            143854
                          </small>
                        </Text>
                      </td>
                      <td
                        width="10%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            6
                          </small>
                        </Text>
                      </td>
                      <td
                        width="20%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            2017-12-22 04:53:45 AM
                          </small>
                        </Text>
                      </td>
                    </tr>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "210",
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <td
                          width="10%"
                        >
                          <small>
                            210
                          </small>
                        </td>,
                        <td
                          width="22.5%"
                        >
                          <HexText
                            classes="small smd-pad-4"
                            value="868f0fc14a4388e1652ffcf9910ee5f8656d9c0002407800a1f55d3606069803"
                          />
                        </td>,
                        <td
                          width="15%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              143854
                            </small>
                          </Text>
                        </td>,
                        <td
                          width="10%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              6
                            </small>
                          </Text>
                        </td>,
                        <td
                          width="20%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              2017-12-26 01:32:44 AM
                            </small>
                          </Text>
                        </td>,
                      ],
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <small>
                            210
                          </small>,
                          "width": "10%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": 210,
                          },
                          "ref": null,
                          "rendered": 210,
                          "type": "small",
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <HexText
                            classes="small smd-pad-4"
                            value="868f0fc14a4388e1652ffcf9910ee5f8656d9c0002407800a1f55d3606069803"
                          />,
                          "width": "22.5%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "classes": "small smd-pad-4",
                            "value": "868f0fc14a4388e1652ffcf9910ee5f8656d9c0002407800a1f55d3606069803",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Text
                            ellipsize={true}
                          >
                            <small>
                              143854
                            </small>
                          </Text>,
                          "width": "15%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <small>
                              143854
                            </small>,
                            "ellipsize": true,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": 143854,
                            },
                            "ref": null,
                            "rendered": 143854,
                            "type": "small",
                          },
                          "type": [Function],
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Text
                            ellipsize={true}
                          >
                            <small>
                              6
                            </small>
                          </Text>,
                          "width": "10%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <small>
                              6
                            </small>,
                            "ellipsize": true,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": 6,
                            },
                            "ref": null,
                            "rendered": 6,
                            "type": "small",
                          },
                          "type": [Function],
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Text
                            ellipsize={true}
                          >
                            <small>
                              2017-12-26 01:32:44 AM
                            </small>
                          </Text>,
                          "width": "20%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <small>
                              2017-12-26 01:32:44 AM
                            </small>,
                            "ellipsize": true,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "2017-12-26 01:32:44 AM",
                            },
                            "ref": null,
                            "rendered": "2017-12-26 01:32:44 AM",
                            "type": "small",
                          },
                          "type": [Function],
                        },
                        "type": "td",
                      },
                    ],
                    "type": "tr",
                  },
                  Object {
                    "instance": null,
                    "key": "209",
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <td
                          width="10%"
                        >
                          <small>
                            209
                          </small>
                        </td>,
                        <td
                          width="22.5%"
                        >
                          <HexText
                            classes="small smd-pad-4"
                            value="c2d8889c7b1093390499f45b7f4998cf02af8ebc38f5fbec715be18088128194"
                          />
                        </td>,
                        <td
                          width="15%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              143784
                            </small>
                          </Text>
                        </td>,
                        <td
                          width="10%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              6
                            </small>
                          </Text>
                        </td>,
                        <td
                          width="20%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              2017-12-26 01:32:39 AM
                            </small>
                          </Text>
                        </td>,
                      ],
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <small>
                            209
                          </small>,
                          "width": "10%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": 209,
                          },
                          "ref": null,
                          "rendered": 209,
                          "type": "small",
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <HexText
                            classes="small smd-pad-4"
                            value="c2d8889c7b1093390499f45b7f4998cf02af8ebc38f5fbec715be18088128194"
                          />,
                          "width": "22.5%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "classes": "small smd-pad-4",
                            "value": "c2d8889c7b1093390499f45b7f4998cf02af8ebc38f5fbec715be18088128194",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Text
                            ellipsize={true}
                          >
                            <small>
                              143784
                            </small>
                          </Text>,
                          "width": "15%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <small>
                              143784
                            </small>,
                            "ellipsize": true,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": 143784,
                            },
                            "ref": null,
                            "rendered": 143784,
                            "type": "small",
                          },
                          "type": [Function],
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Text
                            ellipsize={true}
                          >
                            <small>
                              6
                            </small>
                          </Text>,
                          "width": "10%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <small>
                              6
                            </small>,
                            "ellipsize": true,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": 6,
                            },
                            "ref": null,
                            "rendered": 6,
                            "type": "small",
                          },
                          "type": [Function],
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Text
                            ellipsize={true}
                          >
                            <small>
                              2017-12-26 01:32:39 AM
                            </small>
                          </Text>,
                          "width": "20%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <small>
                              2017-12-26 01:32:39 AM
                            </small>,
                            "ellipsize": true,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "2017-12-26 01:32:39 AM",
                            },
                            "ref": null,
                            "rendered": "2017-12-26 01:32:39 AM",
                            "type": "small",
                          },
                          "type": [Function],
                        },
                        "type": "td",
                      },
                    ],
                    "type": "tr",
                  },
                  Object {
                    "instance": null,
                    "key": "208",
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <td
                          width="10%"
                        >
                          <small>
                            208
                          </small>
                        </td>,
                        <td
                          width="22.5%"
                        >
                          <HexText
                            classes="small smd-pad-4"
                            value="567ea7f1d69aa7d787912e9b226a234f5d85364f78efde70fb084b2671a78d5c"
                          />
                        </td>,
                        <td
                          width="15%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              143854
                            </small>
                          </Text>
                        </td>,
                        <td
                          width="10%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              6
                            </small>
                          </Text>
                        </td>,
                        <td
                          width="20%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              2017-12-25 06:12:05 AM
                            </small>
                          </Text>
                        </td>,
                      ],
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <small>
                            208
                          </small>,
                          "width": "10%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": 208,
                          },
                          "ref": null,
                          "rendered": 208,
                          "type": "small",
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <HexText
                            classes="small smd-pad-4"
                            value="567ea7f1d69aa7d787912e9b226a234f5d85364f78efde70fb084b2671a78d5c"
                          />,
                          "width": "22.5%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "classes": "small smd-pad-4",
                            "value": "567ea7f1d69aa7d787912e9b226a234f5d85364f78efde70fb084b2671a78d5c",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Text
                            ellipsize={true}
                          >
                            <small>
                              143854
                            </small>
                          </Text>,
                          "width": "15%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <small>
                              143854
                            </small>,
                            "ellipsize": true,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": 143854,
                            },
                            "ref": null,
                            "rendered": 143854,
                            "type": "small",
                          },
                          "type": [Function],
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Text
                            ellipsize={true}
                          >
                            <small>
                              6
                            </small>
                          </Text>,
                          "width": "10%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <small>
                              6
                            </small>,
                            "ellipsize": true,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": 6,
                            },
                            "ref": null,
                            "rendered": 6,
                            "type": "small",
                          },
                          "type": [Function],
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Text
                            ellipsize={true}
                          >
                            <small>
                              2017-12-25 06:12:05 AM
                            </small>
                          </Text>,
                          "width": "20%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <small>
                              2017-12-25 06:12:05 AM
                            </small>,
                            "ellipsize": true,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "2017-12-25 06:12:05 AM",
                            },
                            "ref": null,
                            "rendered": "2017-12-25 06:12:05 AM",
                            "type": "small",
                          },
                          "type": [Function],
                        },
                        "type": "td",
                      },
                    ],
                    "type": "tr",
                  },
                  Object {
                    "instance": null,
                    "key": "207",
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <td
                          width="10%"
                        >
                          <small>
                            207
                          </small>
                        </td>,
                        <td
                          width="22.5%"
                        >
                          <HexText
                            classes="small smd-pad-4"
                            value="480c6b2d2dcfa8946f07be11794e874da44fcc0e217ae4b301fcd069af055f8f"
                          />
                        </td>,
                        <td
                          width="15%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              143784
                            </small>
                          </Text>
                        </td>,
                        <td
                          width="10%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              6
                            </small>
                          </Text>
                        </td>,
                        <td
                          width="20%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              2017-12-25 06:11:59 AM
                            </small>
                          </Text>
                        </td>,
                      ],
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <small>
                            207
                          </small>,
                          "width": "10%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": 207,
                          },
                          "ref": null,
                          "rendered": 207,
                          "type": "small",
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <HexText
                            classes="small smd-pad-4"
                            value="480c6b2d2dcfa8946f07be11794e874da44fcc0e217ae4b301fcd069af055f8f"
                          />,
                          "width": "22.5%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "classes": "small smd-pad-4",
                            "value": "480c6b2d2dcfa8946f07be11794e874da44fcc0e217ae4b301fcd069af055f8f",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Text
                            ellipsize={true}
                          >
                            <small>
                              143784
                            </small>
                          </Text>,
                          "width": "15%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <small>
                              143784
                            </small>,
                            "ellipsize": true,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": 143784,
                            },
                            "ref": null,
                            "rendered": 143784,
                            "type": "small",
                          },
                          "type": [Function],
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Text
                            ellipsize={true}
                          >
                            <small>
                              6
                            </small>
                          </Text>,
                          "width": "10%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <small>
                              6
                            </small>,
                            "ellipsize": true,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": 6,
                            },
                            "ref": null,
                            "rendered": 6,
                            "type": "small",
                          },
                          "type": [Function],
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Text
                            ellipsize={true}
                          >
                            <small>
                              2017-12-25 06:11:59 AM
                            </small>
                          </Text>,
                          "width": "20%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <small>
                              2017-12-25 06:11:59 AM
                            </small>,
                            "ellipsize": true,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "2017-12-25 06:11:59 AM",
                            },
                            "ref": null,
                            "rendered": "2017-12-25 06:11:59 AM",
                            "type": "small",
                          },
                          "type": [Function],
                        },
                        "type": "td",
                      },
                    ],
                    "type": "tr",
                  },
                  Object {
                    "instance": null,
                    "key": "206",
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <td
                          width="10%"
                        >
                          <small>
                            206
                          </small>
                        </td>,
                        <td
                          width="22.5%"
                        >
                          <HexText
                            classes="small smd-pad-4"
                            value="f3a70b32445b96005b83875d757180167ad93d767b025b684c036f278a84da9a"
                          />
                        </td>,
                        <td
                          width="15%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              143854
                            </small>
                          </Text>
                        </td>,
                        <td
                          width="10%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              6
                            </small>
                          </Text>
                        </td>,
                        <td
                          width="20%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              2017-12-22 04:53:45 AM
                            </small>
                          </Text>
                        </td>,
                      ],
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <small>
                            206
                          </small>,
                          "width": "10%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": 206,
                          },
                          "ref": null,
                          "rendered": 206,
                          "type": "small",
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <HexText
                            classes="small smd-pad-4"
                            value="f3a70b32445b96005b83875d757180167ad93d767b025b684c036f278a84da9a"
                          />,
                          "width": "22.5%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "classes": "small smd-pad-4",
                            "value": "f3a70b32445b96005b83875d757180167ad93d767b025b684c036f278a84da9a",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Text
                            ellipsize={true}
                          >
                            <small>
                              143854
                            </small>
                          </Text>,
                          "width": "15%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <small>
                              143854
                            </small>,
                            "ellipsize": true,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": 143854,
                            },
                            "ref": null,
                            "rendered": 143854,
                            "type": "small",
                          },
                          "type": [Function],
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Text
                            ellipsize={true}
                          >
                            <small>
                              6
                            </small>
                          </Text>,
                          "width": "10%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <small>
                              6
                            </small>,
                            "ellipsize": true,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": 6,
                            },
                            "ref": null,
                            "rendered": 6,
                            "type": "small",
                          },
                          "type": [Function],
                        },
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Text
                            ellipsize={true}
                          >
                            <small>
                              2017-12-22 04:53:45 AM
                            </small>
                          </Text>,
                          "width": "20%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <small>
                              2017-12-22 04:53:45 AM
                            </small>,
                            "ellipsize": true,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "2017-12-22 04:53:45 AM",
                            },
                            "ref": null,
                            "rendered": "2017-12-22 04:53:45 AM",
                            "type": "small",
                          },
                          "type": [Function],
                        },
                        "type": "td",
                      },
                    ],
                    "type": "tr",
                  },
                ],
                "type": "tbody",
              },
            ],
            "type": "table",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="row smd-pad-4"
          >
            <div
              className="col-sm-11 text-left"
            >
              <span
                className="h3"
              >
                Query Builder
              </span>
            </div>
            <div
              className="col-sm-1 text-right"
            >
              <Blueprint.Button
                className="pt-intent-primary pt-icon-refresh"
                onClick={[Function]}
              />
            </div>
          </div>,
          <div>
            <div
              className="row smd-pad-4"
            >
              <div
                className="col-sm-12"
              >
                <Form
                  onSubmit={[Function]}
                >
                  <div
                    className="pt-control-group smd-full-width"
                  >
                    <div
                      className="pt-select"
                    >
                      <Field
                        component="select"
                        name="query"
                        placeholder="Query Type"
                        required={true}
                        type="select"
                        validate={[Function]}
                      >
                        <option
                          value="default"
                        >
                          Query Type
                        </option>
                        <option
                          value="number"
                        >
                          Block Number
                        </option>
                        <option
                          value="id"
                        >
                          Block Id
                        </option>
                        <option
                          value="maxnumber"
                        >
                          Max Block Number
                        </option>
                        <option
                          value="minnumber"
                        >
                          Min Block Number
                        </option>
                        <option
                          value="gaslim"
                        >
                          Gas Limit
                        </option>
                        <option
                          value="mingaslim"
                        >
                          Min Gas Limit
                        </option>
                        <option
                          value="maxgaslim"
                        >
                          Max Gas Limit
                        </option>
                        <option
                          value="gasused"
                        >
                          Gas Used
                        </option>
                        <option
                          value="mingasused"
                        >
                          Min Gas Used
                        </option>
                        <option
                          value="maxgasused"
                        >
                          Max Gas Used
                        </option>
                        <option
                          value="diff"
                        >
                          Difficulty
                        </option>
                        <option
                          value="maxdiff"
                        >
                          Max Difficulty
                        </option>
                        <option
                          value="mindiff"
                        >
                          Min Difficulty
                        </option>
                        <option
                          value="txaddress"
                        >
                          Contained Transaction Address
                        </option>
                        <option
                          value="coinbase"
                        >
                          Coinbase
                        </option>
                        <option
                          value="address"
                        >
                          Address
                        </option>
                        <option
                          value="hash"
                        >
                          Hash
                        </option>
                        <option
                          value="last"
                        >
                          Last
                        </option>
                      </Field>
                    </div>
                    <div
                      className="smd-input-width"
                    >
                      <Field
                        className="pt-input pt-fill"
                        component="input"
                        dir="auto"
                        name="value"
                        onKeyPress={[Function]}
                        placeholder="Query Term"
                        type="text"
                        validate={[Function]}
                      />
                    </div>
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-arrow-right"
                      onClick={[Function]}
                      type="submit"
                    />
                  </div>
                </Form>
              </div>
            </div>
            <div
              className="row smd-pad-4"
            >
              <div
                className="col-sm-12"
              >
                <span
                  className="pt-tag pt-tag-removable smd-margin-right-4"
                >
                  last: 15
                  <button
                    className="pt-tag-remove"
                    onClick={[Function]}
                  />
                </span>
              </div>
            </div>
          </div>,
          <div
            className="row"
          >
            <div
              className="col-sm-12"
            >
              <table
                className="pt-table pt-interactive pt-condensed pt-striped"
                style={
                  Object {
                    "tableLayout": "fixed",
                    "width": "100%",
                  }
                }
              >
                <thead>
                  <tr>
                    <th
                      width="10%"
                    >
                      <h5>
                        Block Number
                      </h5>
                    </th>
                    <th
                      width="45%"
                    >
                      <h5>
                        Parent Hash
                      </h5>
                    </th>
                    <th
                      width="15%"
                    >
                      <h5>
                        Difficulty
                      </h5>
                    </th>
                    <th
                      width="10%"
                    >
                      <h5>
                        Nonce
                      </h5>
                    </th>
                    <th
                      width="20%"
                    >
                      <h5>
                        Timestamp
                      </h5>
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        210
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="868f0fc14a4388e1652ffcf9910ee5f8656d9c0002407800a1f55d3606069803"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143854
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-26 01:32:44 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        209
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="c2d8889c7b1093390499f45b7f4998cf02af8ebc38f5fbec715be18088128194"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143784
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-26 01:32:39 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        208
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="567ea7f1d69aa7d787912e9b226a234f5d85364f78efde70fb084b2671a78d5c"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143854
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-25 06:12:05 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        207
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="480c6b2d2dcfa8946f07be11794e874da44fcc0e217ae4b301fcd069af055f8f"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143784
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-25 06:11:59 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        206
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="f3a70b32445b96005b83875d757180167ad93d767b025b684c036f278a84da9a"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143854
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-22 04:53:45 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>,
        ],
        "className": "pt-card pt-dark pt-elevation-2",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="col-sm-11 text-left"
              >
                <span
                  className="h3"
                >
                  Query Builder
                </span>
              </div>,
              <div
                className="col-sm-1 text-right"
              >
                <Blueprint.Button
                  className="pt-intent-primary pt-icon-refresh"
                  onClick={[Function]}
                />
              </div>,
            ],
            "className": "row smd-pad-4",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span
                  className="h3"
                >
                  Query Builder
                </span>,
                "className": "col-sm-11 text-left",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Query Builder",
                  "className": "h3",
                },
                "ref": null,
                "rendered": "Query Builder",
                "type": "span",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Blueprint.Button
                  className="pt-intent-primary pt-icon-refresh"
                  onClick={[Function]}
                />,
                "className": "col-sm-1 text-right",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "pt-intent-primary pt-icon-refresh",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="row smd-pad-4"
              >
                <div
                  className="col-sm-12"
                >
                  <Form
                    onSubmit={[Function]}
                  >
                    <div
                      className="pt-control-group smd-full-width"
                    >
                      <div
                        className="pt-select"
                      >
                        <Field
                          component="select"
                          name="query"
                          placeholder="Query Type"
                          required={true}
                          type="select"
                          validate={[Function]}
                        >
                          <option
                            value="default"
                          >
                            Query Type
                          </option>
                          <option
                            value="number"
                          >
                            Block Number
                          </option>
                          <option
                            value="id"
                          >
                            Block Id
                          </option>
                          <option
                            value="maxnumber"
                          >
                            Max Block Number
                          </option>
                          <option
                            value="minnumber"
                          >
                            Min Block Number
                          </option>
                          <option
                            value="gaslim"
                          >
                            Gas Limit
                          </option>
                          <option
                            value="mingaslim"
                          >
                            Min Gas Limit
                          </option>
                          <option
                            value="maxgaslim"
                          >
                            Max Gas Limit
                          </option>
                          <option
                            value="gasused"
                          >
                            Gas Used
                          </option>
                          <option
                            value="mingasused"
                          >
                            Min Gas Used
                          </option>
                          <option
                            value="maxgasused"
                          >
                            Max Gas Used
                          </option>
                          <option
                            value="diff"
                          >
                            Difficulty
                          </option>
                          <option
                            value="maxdiff"
                          >
                            Max Difficulty
                          </option>
                          <option
                            value="mindiff"
                          >
                            Min Difficulty
                          </option>
                          <option
                            value="txaddress"
                          >
                            Contained Transaction Address
                          </option>
                          <option
                            value="coinbase"
                          >
                            Coinbase
                          </option>
                          <option
                            value="address"
                          >
                            Address
                          </option>
                          <option
                            value="hash"
                          >
                            Hash
                          </option>
                          <option
                            value="last"
                          >
                            Last
                          </option>
                        </Field>
                      </div>
                      <div
                        className="smd-input-width"
                      >
                        <Field
                          className="pt-input pt-fill"
                          component="input"
                          dir="auto"
                          name="value"
                          onKeyPress={[Function]}
                          placeholder="Query Term"
                          type="text"
                          validate={[Function]}
                        />
                      </div>
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-arrow-right"
                        onClick={[Function]}
                        type="submit"
                      />
                    </div>
                  </Form>
                </div>
              </div>,
              <div
                className="row smd-pad-4"
              >
                <div
                  className="col-sm-12"
                >
                  <span
                    className="pt-tag pt-tag-removable smd-margin-right-4"
                  >
                    last: 15
                    <button
                      className="pt-tag-remove"
                      onClick={[Function]}
                    />
                  </span>
                </div>
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="col-sm-12"
                >
                  <Form
                    onSubmit={[Function]}
                  >
                    <div
                      className="pt-control-group smd-full-width"
                    >
                      <div
                        className="pt-select"
                      >
                        <Field
                          component="select"
                          name="query"
                          placeholder="Query Type"
                          required={true}
                          type="select"
                          validate={[Function]}
                        >
                          <option
                            value="default"
                          >
                            Query Type
                          </option>
                          <option
                            value="number"
                          >
                            Block Number
                          </option>
                          <option
                            value="id"
                          >
                            Block Id
                          </option>
                          <option
                            value="maxnumber"
                          >
                            Max Block Number
                          </option>
                          <option
                            value="minnumber"
                          >
                            Min Block Number
                          </option>
                          <option
                            value="gaslim"
                          >
                            Gas Limit
                          </option>
                          <option
                            value="mingaslim"
                          >
                            Min Gas Limit
                          </option>
                          <option
                            value="maxgaslim"
                          >
                            Max Gas Limit
                          </option>
                          <option
                            value="gasused"
                          >
                            Gas Used
                          </option>
                          <option
                            value="mingasused"
                          >
                            Min Gas Used
                          </option>
                          <option
                            value="maxgasused"
                          >
                            Max Gas Used
                          </option>
                          <option
                            value="diff"
                          >
                            Difficulty
                          </option>
                          <option
                            value="maxdiff"
                          >
                            Max Difficulty
                          </option>
                          <option
                            value="mindiff"
                          >
                            Min Difficulty
                          </option>
                          <option
                            value="txaddress"
                          >
                            Contained Transaction Address
                          </option>
                          <option
                            value="coinbase"
                          >
                            Coinbase
                          </option>
                          <option
                            value="address"
                          >
                            Address
                          </option>
                          <option
                            value="hash"
                          >
                            Hash
                          </option>
                          <option
                            value="last"
                          >
                            Last
                          </option>
                        </Field>
                      </div>
                      <div
                        className="smd-input-width"
                      >
                        <Field
                          className="pt-input pt-fill"
                          component="input"
                          dir="auto"
                          name="value"
                          onKeyPress={[Function]}
                          placeholder="Query Term"
                          type="text"
                          validate={[Function]}
                        />
                      </div>
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-arrow-right"
                        onClick={[Function]}
                        type="submit"
                      />
                    </div>
                  </Form>
                </div>,
                "className": "row smd-pad-4",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Form
                    onSubmit={[Function]}
                  >
                    <div
                      className="pt-control-group smd-full-width"
                    >
                      <div
                        className="pt-select"
                      >
                        <Field
                          component="select"
                          name="query"
                          placeholder="Query Type"
                          required={true}
                          type="select"
                          validate={[Function]}
                        >
                          <option
                            value="default"
                          >
                            Query Type
                          </option>
                          <option
                            value="number"
                          >
                            Block Number
                          </option>
                          <option
                            value="id"
                          >
                            Block Id
                          </option>
                          <option
                            value="maxnumber"
                          >
                            Max Block Number
                          </option>
                          <option
                            value="minnumber"
                          >
                            Min Block Number
                          </option>
                          <option
                            value="gaslim"
                          >
                            Gas Limit
                          </option>
                          <option
                            value="mingaslim"
                          >
                            Min Gas Limit
                          </option>
                          <option
                            value="maxgaslim"
                          >
                            Max Gas Limit
                          </option>
                          <option
                            value="gasused"
                          >
                            Gas Used
                          </option>
                          <option
                            value="mingasused"
                          >
                            Min Gas Used
                          </option>
                          <option
                            value="maxgasused"
                          >
                            Max Gas Used
                          </option>
                          <option
                            value="diff"
                          >
                            Difficulty
                          </option>
                          <option
                            value="maxdiff"
                          >
                            Max Difficulty
                          </option>
                          <option
                            value="mindiff"
                          >
                            Min Difficulty
                          </option>
                          <option
                            value="txaddress"
                          >
                            Contained Transaction Address
                          </option>
                          <option
                            value="coinbase"
                          >
                            Coinbase
                          </option>
                          <option
                            value="address"
                          >
                            Address
                          </option>
                          <option
                            value="hash"
                          >
                            Hash
                          </option>
                          <option
                            value="last"
                          >
                            Last
                          </option>
                        </Field>
                      </div>
                      <div
                        className="smd-input-width"
                      >
                        <Field
                          className="pt-input pt-fill"
                          component="input"
                          dir="auto"
                          name="value"
                          onKeyPress={[Function]}
                          placeholder="Query Term"
                          type="text"
                          validate={[Function]}
                        />
                      </div>
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-arrow-right"
                        onClick={[Function]}
                        type="submit"
                      />
                    </div>
                  </Form>,
                  "className": "col-sm-12",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <div
                      className="pt-control-group smd-full-width"
                    >
                      <div
                        className="pt-select"
                      >
                        <Field
                          component="select"
                          name="query"
                          placeholder="Query Type"
                          required={true}
                          type="select"
                          validate={[Function]}
                        >
                          <option
                            value="default"
                          >
                            Query Type
                          </option>
                          <option
                            value="number"
                          >
                            Block Number
                          </option>
                          <option
                            value="id"
                          >
                            Block Id
                          </option>
                          <option
                            value="maxnumber"
                          >
                            Max Block Number
                          </option>
                          <option
                            value="minnumber"
                          >
                            Min Block Number
                          </option>
                          <option
                            value="gaslim"
                          >
                            Gas Limit
                          </option>
                          <option
                            value="mingaslim"
                          >
                            Min Gas Limit
                          </option>
                          <option
                            value="maxgaslim"
                          >
                            Max Gas Limit
                          </option>
                          <option
                            value="gasused"
                          >
                            Gas Used
                          </option>
                          <option
                            value="mingasused"
                          >
                            Min Gas Used
                          </option>
                          <option
                            value="maxgasused"
                          >
                            Max Gas Used
                          </option>
                          <option
                            value="diff"
                          >
                            Difficulty
                          </option>
                          <option
                            value="maxdiff"
                          >
                            Max Difficulty
                          </option>
                          <option
                            value="mindiff"
                          >
                            Min Difficulty
                          </option>
                          <option
                            value="txaddress"
                          >
                            Contained Transaction Address
                          </option>
                          <option
                            value="coinbase"
                          >
                            Coinbase
                          </option>
                          <option
                            value="address"
                          >
                            Address
                          </option>
                          <option
                            value="hash"
                          >
                            Hash
                          </option>
                          <option
                            value="last"
                          >
                            Last
                          </option>
                        </Field>
                      </div>
                      <div
                        className="smd-input-width"
                      >
                        <Field
                          className="pt-input pt-fill"
                          component="input"
                          dir="auto"
                          name="value"
                          onKeyPress={[Function]}
                          placeholder="Query Term"
                          type="text"
                          validate={[Function]}
                        />
                      </div>
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-arrow-right"
                        onClick={[Function]}
                        type="submit"
                      />
                    </div>,
                    "onSubmit": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <div
                          className="pt-select"
                        >
                          <Field
                            component="select"
                            name="query"
                            placeholder="Query Type"
                            required={true}
                            type="select"
                            validate={[Function]}
                          >
                            <option
                              value="default"
                            >
                              Query Type
                            </option>
                            <option
                              value="number"
                            >
                              Block Number
                            </option>
                            <option
                              value="id"
                            >
                              Block Id
                            </option>
                            <option
                              value="maxnumber"
                            >
                              Max Block Number
                            </option>
                            <option
                              value="minnumber"
                            >
                              Min Block Number
                            </option>
                            <option
                              value="gaslim"
                            >
                              Gas Limit
                            </option>
                            <option
                              value="mingaslim"
                            >
                              Min Gas Limit
                            </option>
                            <option
                              value="maxgaslim"
                            >
                              Max Gas Limit
                            </option>
                            <option
                              value="gasused"
                            >
                              Gas Used
                            </option>
                            <option
                              value="mingasused"
                            >
                              Min Gas Used
                            </option>
                            <option
                              value="maxgasused"
                            >
                              Max Gas Used
                            </option>
                            <option
                              value="diff"
                            >
                              Difficulty
                            </option>
                            <option
                              value="maxdiff"
                            >
                              Max Difficulty
                            </option>
                            <option
                              value="mindiff"
                            >
                              Min Difficulty
                            </option>
                            <option
                              value="txaddress"
                            >
                              Contained Transaction Address
                            </option>
                            <option
                              value="coinbase"
                            >
                              Coinbase
                            </option>
                            <option
                              value="address"
                            >
                              Address
                            </option>
                            <option
                              value="hash"
                            >
                              Hash
                            </option>
                            <option
                              value="last"
                            >
                              Last
                            </option>
                          </Field>
                        </div>,
                        <div
                          className="smd-input-width"
                        >
                          <Field
                            className="pt-input pt-fill"
                            component="input"
                            dir="auto"
                            name="value"
                            onKeyPress={[Function]}
                            placeholder="Query Term"
                            type="text"
                            validate={[Function]}
                          />
                        </div>,
                        <Blueprint.Button
                          className="pt-intent-primary pt-icon-arrow-right"
                          onClick={[Function]}
                          type="submit"
                        />,
                      ],
                      "className": "pt-control-group smd-full-width",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Field
                            component="select"
                            name="query"
                            placeholder="Query Type"
                            required={true}
                            type="select"
                            validate={[Function]}
                          >
                            <option
                              value="default"
                            >
                              Query Type
                            </option>
                            <option
                              value="number"
                            >
                              Block Number
                            </option>
                            <option
                              value="id"
                            >
                              Block Id
                            </option>
                            <option
                              value="maxnumber"
                            >
                              Max Block Number
                            </option>
                            <option
                              value="minnumber"
                            >
                              Min Block Number
                            </option>
                            <option
                              value="gaslim"
                            >
                              Gas Limit
                            </option>
                            <option
                              value="mingaslim"
                            >
                              Min Gas Limit
                            </option>
                            <option
                              value="maxgaslim"
                            >
                              Max Gas Limit
                            </option>
                            <option
                              value="gasused"
                            >
                              Gas Used
                            </option>
                            <option
                              value="mingasused"
                            >
                              Min Gas Used
                            </option>
                            <option
                              value="maxgasused"
                            >
                              Max Gas Used
                            </option>
                            <option
                              value="diff"
                            >
                              Difficulty
                            </option>
                            <option
                              value="maxdiff"
                            >
                              Max Difficulty
                            </option>
                            <option
                              value="mindiff"
                            >
                              Min Difficulty
                            </option>
                            <option
                              value="txaddress"
                            >
                              Contained Transaction Address
                            </option>
                            <option
                              value="coinbase"
                            >
                              Coinbase
                            </option>
                            <option
                              value="address"
                            >
                              Address
                            </option>
                            <option
                              value="hash"
                            >
                              Hash
                            </option>
                            <option
                              value="last"
                            >
                              Last
                            </option>
                          </Field>,
                          "className": "pt-select",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": Array [
                              <option
                                value="default"
                              >
                                Query Type
                              </option>,
                              <option
                                value="number"
                              >
                                Block Number
                              </option>,
                              <option
                                value="id"
                              >
                                Block Id
                              </option>,
                              <option
                                value="maxnumber"
                              >
                                Max Block Number
                              </option>,
                              <option
                                value="minnumber"
                              >
                                Min Block Number
                              </option>,
                              <option
                                value="gaslim"
                              >
                                Gas Limit
                              </option>,
                              <option
                                value="mingaslim"
                              >
                                Min Gas Limit
                              </option>,
                              <option
                                value="maxgaslim"
                              >
                                Max Gas Limit
                              </option>,
                              <option
                                value="gasused"
                              >
                                Gas Used
                              </option>,
                              <option
                                value="mingasused"
                              >
                                Min Gas Used
                              </option>,
                              <option
                                value="maxgasused"
                              >
                                Max Gas Used
                              </option>,
                              <option
                                value="diff"
                              >
                                Difficulty
                              </option>,
                              <option
                                value="maxdiff"
                              >
                                Max Difficulty
                              </option>,
                              <option
                                value="mindiff"
                              >
                                Min Difficulty
                              </option>,
                              <option
                                value="txaddress"
                              >
                                Contained Transaction Address
                              </option>,
                              <option
                                value="coinbase"
                              >
                                Coinbase
                              </option>,
                              <option
                                value="address"
                              >
                                Address
                              </option>,
                              <option
                                value="hash"
                              >
                                Hash
                              </option>,
                              <option
                                value="last"
                              >
                                Last
                              </option>,
                            ],
                            "component": "select",
                            "name": "query",
                            "placeholder": "Query Type",
                            "required": true,
                            "type": "select",
                            "validate": [Function],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": "default",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Query Type",
                                "value": "default",
                              },
                              "ref": null,
                              "rendered": "Query Type",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "number",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Block Number",
                                "value": "number",
                              },
                              "ref": null,
                              "rendered": "Block Number",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "id",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Block Id",
                                "value": "id",
                              },
                              "ref": null,
                              "rendered": "Block Id",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "maxnumber",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Max Block Number",
                                "value": "maxnumber",
                              },
                              "ref": null,
                              "rendered": "Max Block Number",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "minnumber",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Min Block Number",
                                "value": "minnumber",
                              },
                              "ref": null,
                              "rendered": "Min Block Number",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "gaslim",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Gas Limit",
                                "value": "gaslim",
                              },
                              "ref": null,
                              "rendered": "Gas Limit",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "mingaslim",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Min Gas Limit",
                                "value": "mingaslim",
                              },
                              "ref": null,
                              "rendered": "Min Gas Limit",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "maxgaslim",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Max Gas Limit",
                                "value": "maxgaslim",
                              },
                              "ref": null,
                              "rendered": "Max Gas Limit",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "gasused",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Gas Used",
                                "value": "gasused",
                              },
                              "ref": null,
                              "rendered": "Gas Used",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "mingasused",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Min Gas Used",
                                "value": "mingasused",
                              },
                              "ref": null,
                              "rendered": "Min Gas Used",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "maxgasused",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Max Gas Used",
                                "value": "maxgasused",
                              },
                              "ref": null,
                              "rendered": "Max Gas Used",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "diff",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Difficulty",
                                "value": "diff",
                              },
                              "ref": null,
                              "rendered": "Difficulty",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "maxdiff",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Max Difficulty",
                                "value": "maxdiff",
                              },
                              "ref": null,
                              "rendered": "Max Difficulty",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "mindiff",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Min Difficulty",
                                "value": "mindiff",
                              },
                              "ref": null,
                              "rendered": "Min Difficulty",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "txaddress",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Contained Transaction Address",
                                "value": "txaddress",
                              },
                              "ref": null,
                              "rendered": "Contained Transaction Address",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "coinbase",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Coinbase",
                                "value": "coinbase",
                              },
                              "ref": null,
                              "rendered": "Coinbase",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "address",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Address",
                                "value": "address",
                              },
                              "ref": null,
                              "rendered": "Address",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "hash",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Hash",
                                "value": "hash",
                              },
                              "ref": null,
                              "rendered": "Hash",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "last",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Last",
                                "value": "last",
                              },
                              "ref": null,
                              "rendered": "Last",
                              "type": "option",
                            },
                          ],
                          "type": [Function],
                        },
                        "type": "div",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Field
                            className="pt-input pt-fill"
                            component="input"
                            dir="auto"
                            name="value"
                            onKeyPress={[Function]}
                            placeholder="Query Term"
                            type="text"
                            validate={[Function]}
                          />,
                          "className": "smd-input-width",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "className": "pt-input pt-fill",
                            "component": "input",
                            "dir": "auto",
                            "name": "value",
                            "onKeyPress": [Function],
                            "placeholder": "Query Term",
                            "type": "text",
                            "validate": [Function],
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": "div",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "className": "pt-intent-primary pt-icon-arrow-right",
                          "onClick": [Function],
                          "type": "submit",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                  "type": [Function],
                },
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="col-sm-12"
                >
                  <span
                    className="pt-tag pt-tag-removable smd-margin-right-4"
                  >
                    last: 15
                    <button
                      className="pt-tag-remove"
                      onClick={[Function]}
                    />
                  </span>
                </div>,
                "className": "row smd-pad-4",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span
                      className="pt-tag pt-tag-removable smd-margin-right-4"
                    >
                      last: 15
                      <button
                        className="pt-tag-remove"
                        onClick={[Function]}
                      />
                    </span>,
                  ],
                  "className": "col-sm-12",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "tag-last-0",
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "last: 15",
                        <button
                          className="pt-tag-remove"
                          onClick={[Function]}
                        />,
                      ],
                      "className": "pt-tag pt-tag-removable smd-margin-right-4",
                    },
                    "ref": null,
                    "rendered": Array [
                      "last: 15",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "className": "pt-tag-remove",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "button",
                      },
                    ],
                    "type": "span",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-sm-12"
            >
              <table
                className="pt-table pt-interactive pt-condensed pt-striped"
                style={
                  Object {
                    "tableLayout": "fixed",
                    "width": "100%",
                  }
                }
              >
                <thead>
                  <tr>
                    <th
                      width="10%"
                    >
                      <h5>
                        Block Number
                      </h5>
                    </th>
                    <th
                      width="45%"
                    >
                      <h5>
                        Parent Hash
                      </h5>
                    </th>
                    <th
                      width="15%"
                    >
                      <h5>
                        Difficulty
                      </h5>
                    </th>
                    <th
                      width="10%"
                    >
                      <h5>
                        Nonce
                      </h5>
                    </th>
                    <th
                      width="20%"
                    >
                      <h5>
                        Timestamp
                      </h5>
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        210
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="868f0fc14a4388e1652ffcf9910ee5f8656d9c0002407800a1f55d3606069803"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143854
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-26 01:32:44 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        209
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="c2d8889c7b1093390499f45b7f4998cf02af8ebc38f5fbec715be18088128194"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143784
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-26 01:32:39 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        208
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="567ea7f1d69aa7d787912e9b226a234f5d85364f78efde70fb084b2671a78d5c"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143854
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-25 06:12:05 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        207
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="480c6b2d2dcfa8946f07be11794e874da44fcc0e217ae4b301fcd069af055f8f"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143784
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-25 06:11:59 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        206
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="f3a70b32445b96005b83875d757180167ad93d767b025b684c036f278a84da9a"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143854
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-22 04:53:45 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>,
            "className": "row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <table
                className="pt-table pt-interactive pt-condensed pt-striped"
                style={
                  Object {
                    "tableLayout": "fixed",
                    "width": "100%",
                  }
                }
              >
                <thead>
                  <tr>
                    <th
                      width="10%"
                    >
                      <h5>
                        Block Number
                      </h5>
                    </th>
                    <th
                      width="45%"
                    >
                      <h5>
                        Parent Hash
                      </h5>
                    </th>
                    <th
                      width="15%"
                    >
                      <h5>
                        Difficulty
                      </h5>
                    </th>
                    <th
                      width="10%"
                    >
                      <h5>
                        Nonce
                      </h5>
                    </th>
                    <th
                      width="20%"
                    >
                      <h5>
                        Timestamp
                      </h5>
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        210
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="868f0fc14a4388e1652ffcf9910ee5f8656d9c0002407800a1f55d3606069803"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143854
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-26 01:32:44 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        209
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="c2d8889c7b1093390499f45b7f4998cf02af8ebc38f5fbec715be18088128194"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143784
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-26 01:32:39 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        208
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="567ea7f1d69aa7d787912e9b226a234f5d85364f78efde70fb084b2671a78d5c"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143854
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-25 06:12:05 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        207
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="480c6b2d2dcfa8946f07be11794e874da44fcc0e217ae4b301fcd069af055f8f"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143784
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-25 06:11:59 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                  <tr
                    onClick={[Function]}
                  >
                    <td
                      width="10%"
                    >
                      <small>
                        206
                      </small>
                    </td>
                    <td
                      width="22.5%"
                    >
                      <HexText
                        classes="small smd-pad-4"
                        value="f3a70b32445b96005b83875d757180167ad93d767b025b684c036f278a84da9a"
                      />
                    </td>
                    <td
                      width="15%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          143854
                        </small>
                      </Text>
                    </td>
                    <td
                      width="10%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          6
                        </small>
                      </Text>
                    </td>
                    <td
                      width="20%"
                    >
                      <Text
                        ellipsize={true}
                      >
                        <small>
                          2017-12-22 04:53:45 AM
                        </small>
                      </Text>
                    </td>
                  </tr>
                </tbody>
              </table>,
              "className": "col-sm-12",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <thead>
                    <tr>
                      <th
                        width="10%"
                      >
                        <h5>
                          Block Number
                        </h5>
                      </th>
                      <th
                        width="45%"
                      >
                        <h5>
                          Parent Hash
                        </h5>
                      </th>
                      <th
                        width="15%"
                      >
                        <h5>
                          Difficulty
                        </h5>
                      </th>
                      <th
                        width="10%"
                      >
                        <h5>
                          Nonce
                        </h5>
                      </th>
                      <th
                        width="20%"
                      >
                        <h5>
                          Timestamp
                        </h5>
                      </th>
                    </tr>
                  </thead>,
                  <tbody>
                    <tr
                      onClick={[Function]}
                    >
                      <td
                        width="10%"
                      >
                        <small>
                          210
                        </small>
                      </td>
                      <td
                        width="22.5%"
                      >
                        <HexText
                          classes="small smd-pad-4"
                          value="868f0fc14a4388e1652ffcf9910ee5f8656d9c0002407800a1f55d3606069803"
                        />
                      </td>
                      <td
                        width="15%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            143854
                          </small>
                        </Text>
                      </td>
                      <td
                        width="10%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            6
                          </small>
                        </Text>
                      </td>
                      <td
                        width="20%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            2017-12-26 01:32:44 AM
                          </small>
                        </Text>
                      </td>
                    </tr>
                    <tr
                      onClick={[Function]}
                    >
                      <td
                        width="10%"
                      >
                        <small>
                          209
                        </small>
                      </td>
                      <td
                        width="22.5%"
                      >
                        <HexText
                          classes="small smd-pad-4"
                          value="c2d8889c7b1093390499f45b7f4998cf02af8ebc38f5fbec715be18088128194"
                        />
                      </td>
                      <td
                        width="15%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            143784
                          </small>
                        </Text>
                      </td>
                      <td
                        width="10%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            6
                          </small>
                        </Text>
                      </td>
                      <td
                        width="20%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            2017-12-26 01:32:39 AM
                          </small>
                        </Text>
                      </td>
                    </tr>
                    <tr
                      onClick={[Function]}
                    >
                      <td
                        width="10%"
                      >
                        <small>
                          208
                        </small>
                      </td>
                      <td
                        width="22.5%"
                      >
                        <HexText
                          classes="small smd-pad-4"
                          value="567ea7f1d69aa7d787912e9b226a234f5d85364f78efde70fb084b2671a78d5c"
                        />
                      </td>
                      <td
                        width="15%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            143854
                          </small>
                        </Text>
                      </td>
                      <td
                        width="10%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            6
                          </small>
                        </Text>
                      </td>
                      <td
                        width="20%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            2017-12-25 06:12:05 AM
                          </small>
                        </Text>
                      </td>
                    </tr>
                    <tr
                      onClick={[Function]}
                    >
                      <td
                        width="10%"
                      >
                        <small>
                          207
                        </small>
                      </td>
                      <td
                        width="22.5%"
                      >
                        <HexText
                          classes="small smd-pad-4"
                          value="480c6b2d2dcfa8946f07be11794e874da44fcc0e217ae4b301fcd069af055f8f"
                        />
                      </td>
                      <td
                        width="15%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            143784
                          </small>
                        </Text>
                      </td>
                      <td
                        width="10%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            6
                          </small>
                        </Text>
                      </td>
                      <td
                        width="20%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            2017-12-25 06:11:59 AM
                          </small>
                        </Text>
                      </td>
                    </tr>
                    <tr
                      onClick={[Function]}
                    >
                      <td
                        width="10%"
                      >
                        <small>
                          206
                        </small>
                      </td>
                      <td
                        width="22.5%"
                      >
                        <HexText
                          classes="small smd-pad-4"
                          value="f3a70b32445b96005b83875d757180167ad93d767b025b684c036f278a84da9a"
                        />
                      </td>
                      <td
                        width="15%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            143854
                          </small>
                        </Text>
                      </td>
                      <td
                        width="10%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            6
                          </small>
                        </Text>
                      </td>
                      <td
                        width="20%"
                      >
                        <Text
                          ellipsize={true}
                        >
                          <small>
                            2017-12-22 04:53:45 AM
                          </small>
                        </Text>
                      </td>
                    </tr>
                  </tbody>,
                ],
                "className": "pt-table pt-interactive pt-condensed pt-striped",
                "style": Object {
                  "tableLayout": "fixed",
                  "width": "100%",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <tr>
                      <th
                        width="10%"
                      >
                        <h5>
                          Block Number
                        </h5>
                      </th>
                      <th
                        width="45%"
                      >
                        <h5>
                          Parent Hash
                        </h5>
                      </th>
                      <th
                        width="15%"
                      >
                        <h5>
                          Difficulty
                        </h5>
                      </th>
                      <th
                        width="10%"
                      >
                        <h5>
                          Nonce
                        </h5>
                      </th>
                      <th
                        width="20%"
                      >
                        <h5>
                          Timestamp
                        </h5>
                      </th>
                    </tr>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <th
                          width="10%"
                        >
                          <h5>
                            Block Number
                          </h5>
                        </th>,
                        <th
                          width="45%"
                        >
                          <h5>
                            Parent Hash
                          </h5>
                        </th>,
                        <th
                          width="15%"
                        >
                          <h5>
                            Difficulty
                          </h5>
                        </th>,
                        <th
                          width="10%"
                        >
                          <h5>
                            Nonce
                          </h5>
                        </th>,
                        <th
                          width="20%"
                        >
                          <h5>
                            Timestamp
                          </h5>
                        </th>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <h5>
                            Block Number
                          </h5>,
                          "width": "10%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Block Number",
                          },
                          "ref": null,
                          "rendered": "Block Number",
                          "type": "h5",
                        },
                        "type": "th",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <h5>
                            Parent Hash
                          </h5>,
                          "width": "45%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Parent Hash",
                          },
                          "ref": null,
                          "rendered": "Parent Hash",
                          "type": "h5",
                        },
                        "type": "th",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <h5>
                            Difficulty
                          </h5>,
                          "width": "15%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Difficulty",
                          },
                          "ref": null,
                          "rendered": "Difficulty",
                          "type": "h5",
                        },
                        "type": "th",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <h5>
                            Nonce
                          </h5>,
                          "width": "10%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Nonce",
                          },
                          "ref": null,
                          "rendered": "Nonce",
                          "type": "h5",
                        },
                        "type": "th",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <h5>
                            Timestamp
                          </h5>,
                          "width": "20%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Timestamp",
                          },
                          "ref": null,
                          "rendered": "Timestamp",
                          "type": "h5",
                        },
                        "type": "th",
                      },
                    ],
                    "type": "tr",
                  },
                  "type": "thead",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <tr
                        onClick={[Function]}
                      >
                        <td
                          width="10%"
                        >
                          <small>
                            210
                          </small>
                        </td>
                        <td
                          width="22.5%"
                        >
                          <HexText
                            classes="small smd-pad-4"
                            value="868f0fc14a4388e1652ffcf9910ee5f8656d9c0002407800a1f55d3606069803"
                          />
                        </td>
                        <td
                          width="15%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              143854
                            </small>
                          </Text>
                        </td>
                        <td
                          width="10%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              6
                            </small>
                          </Text>
                        </td>
                        <td
                          width="20%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              2017-12-26 01:32:44 AM
                            </small>
                          </Text>
                        </td>
                      </tr>,
                      <tr
                        onClick={[Function]}
                      >
                        <td
                          width="10%"
                        >
                          <small>
                            209
                          </small>
                        </td>
                        <td
                          width="22.5%"
                        >
                          <HexText
                            classes="small smd-pad-4"
                            value="c2d8889c7b1093390499f45b7f4998cf02af8ebc38f5fbec715be18088128194"
                          />
                        </td>
                        <td
                          width="15%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              143784
                            </small>
                          </Text>
                        </td>
                        <td
                          width="10%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              6
                            </small>
                          </Text>
                        </td>
                        <td
                          width="20%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              2017-12-26 01:32:39 AM
                            </small>
                          </Text>
                        </td>
                      </tr>,
                      <tr
                        onClick={[Function]}
                      >
                        <td
                          width="10%"
                        >
                          <small>
                            208
                          </small>
                        </td>
                        <td
                          width="22.5%"
                        >
                          <HexText
                            classes="small smd-pad-4"
                            value="567ea7f1d69aa7d787912e9b226a234f5d85364f78efde70fb084b2671a78d5c"
                          />
                        </td>
                        <td
                          width="15%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              143854
                            </small>
                          </Text>
                        </td>
                        <td
                          width="10%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              6
                            </small>
                          </Text>
                        </td>
                        <td
                          width="20%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              2017-12-25 06:12:05 AM
                            </small>
                          </Text>
                        </td>
                      </tr>,
                      <tr
                        onClick={[Function]}
                      >
                        <td
                          width="10%"
                        >
                          <small>
                            207
                          </small>
                        </td>
                        <td
                          width="22.5%"
                        >
                          <HexText
                            classes="small smd-pad-4"
                            value="480c6b2d2dcfa8946f07be11794e874da44fcc0e217ae4b301fcd069af055f8f"
                          />
                        </td>
                        <td
                          width="15%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              143784
                            </small>
                          </Text>
                        </td>
                        <td
                          width="10%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              6
                            </small>
                          </Text>
                        </td>
                        <td
                          width="20%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              2017-12-25 06:11:59 AM
                            </small>
                          </Text>
                        </td>
                      </tr>,
                      <tr
                        onClick={[Function]}
                      >
                        <td
                          width="10%"
                        >
                          <small>
                            206
                          </small>
                        </td>
                        <td
                          width="22.5%"
                        >
                          <HexText
                            classes="small smd-pad-4"
                            value="f3a70b32445b96005b83875d757180167ad93d767b025b684c036f278a84da9a"
                          />
                        </td>
                        <td
                          width="15%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              143854
                            </small>
                          </Text>
                        </td>
                        <td
                          width="10%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              6
                            </small>
                          </Text>
                        </td>
                        <td
                          width="20%"
                        >
                          <Text
                            ellipsize={true}
                          >
                            <small>
                              2017-12-22 04:53:45 AM
                            </small>
                          </Text>
                        </td>
                      </tr>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "210",
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <td
                            width="10%"
                          >
                            <small>
                              210
                            </small>
                          </td>,
                          <td
                            width="22.5%"
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="868f0fc14a4388e1652ffcf9910ee5f8656d9c0002407800a1f55d3606069803"
                            />
                          </td>,
                          <td
                            width="15%"
                          >
                            <Text
                              ellipsize={true}
                            >
                              <small>
                                143854
                              </small>
                            </Text>
                          </td>,
                          <td
                            width="10%"
                          >
                            <Text
                              ellipsize={true}
                            >
                              <small>
                                6
                              </small>
                            </Text>
                          </td>,
                          <td
                            width="20%"
                          >
                            <Text
                              ellipsize={true}
                            >
                              <small>
                                2017-12-26 01:32:44 AM
                              </small>
                            </Text>
                          </td>,
                        ],
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <small>
                              210
                            </small>,
                            "width": "10%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": 210,
                            },
                            "ref": null,
                            "rendered": 210,
                            "type": "small",
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <HexText
                              classes="small smd-pad-4"
                              value="868f0fc14a4388e1652ffcf9910ee5f8656d9c0002407800a1f55d3606069803"
                            />,
                            "width": "22.5%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "classes": "small smd-pad-4",
                              "value": "868f0fc14a4388e1652ffcf9910ee5f8656d9c0002407800a1f55d3606069803",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Text
                              ellipsize={true}
                            >
                              <small>
                                143854
                              </small>
                            </Text>,
                            "width": "15%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": <small>
                                143854
                              </small>,
                              "ellipsize": true,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": 143854,
                              },
                              "ref": null,
                              "rendered": 143854,
                              "type": "small",
                            },
                            "type": [Function],
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Text
                              ellipsize={true}
                            >
                              <small>
                                6
                              </small>
                            </Text>,
                            "width": "10%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": <small>
                                6
                              </small>,
                              "ellipsize": true,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": 6,
                              },
                              "ref": null,
                              "rendered": 6,
                              "type": "small",
                            },
                            "type": [Function],
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Text
                              ellipsize={true}
                            >
                              <small>
                                2017-12-26 01:32:44 AM
                              </small>
                            </Text>,
                            "width": "20%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": <small>
                                2017-12-26 01:32:44 AM
                              </small>,
                              "ellipsize": true,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "2017-12-26 01:32:44 AM",
                              },
                              "ref": null,
                              "rendered": "2017-12-26 01:32:44 AM",
                              "type": "small",
                            },
                            "type": [Function],
                          },
                          "type": "td",
                        },
                      ],
                      "type": "tr",
                    },
                    Object {
                      "instance": null,
                      "key": "209",
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <td
                            width="10%"
                          >
                            <small>
                              209
                            </small>
                          </td>,
                          <td
                            width="22.5%"
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="c2d8889c7b1093390499f45b7f4998cf02af8ebc38f5fbec715be18088128194"
                            />
                          </td>,
                          <td
                            width="15%"
                          >
                            <Text
                              ellipsize={true}
                            >
                              <small>
                                143784
                              </small>
                            </Text>
                          </td>,
                          <td
                            width="10%"
                          >
                            <Text
                              ellipsize={true}
                            >
                              <small>
                                6
                              </small>
                            </Text>
                          </td>,
                          <td
                            width="20%"
                          >
                            <Text
                              ellipsize={true}
                            >
                              <small>
                                2017-12-26 01:32:39 AM
                              </small>
                            </Text>
                          </td>,
                        ],
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <small>
                              209
                            </small>,
                            "width": "10%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": 209,
                            },
                            "ref": null,
                            "rendered": 209,
                            "type": "small",
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <HexText
                              classes="small smd-pad-4"
                              value="c2d8889c7b1093390499f45b7f4998cf02af8ebc38f5fbec715be18088128194"
                            />,
                            "width": "22.5%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "classes": "small smd-pad-4",
                              "value": "c2d8889c7b1093390499f45b7f4998cf02af8ebc38f5fbec715be18088128194",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Text
                              ellipsize={true}
                            >
                              <small>
                                143784
                              </small>
                            </Text>,
                            "width": "15%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": <small>
                                143784
                              </small>,
                              "ellipsize": true,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": 143784,
                              },
                              "ref": null,
                              "rendered": 143784,
                              "type": "small",
                            },
                            "type": [Function],
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Text
                              ellipsize={true}
                            >
                              <small>
                                6
                              </small>
                            </Text>,
                            "width": "10%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": <small>
                                6
                              </small>,
                              "ellipsize": true,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": 6,
                              },
                              "ref": null,
                              "rendered": 6,
                              "type": "small",
                            },
                            "type": [Function],
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Text
                              ellipsize={true}
                            >
                              <small>
                                2017-12-26 01:32:39 AM
                              </small>
                            </Text>,
                            "width": "20%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": <small>
                                2017-12-26 01:32:39 AM
                              </small>,
                              "ellipsize": true,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "2017-12-26 01:32:39 AM",
                              },
                              "ref": null,
                              "rendered": "2017-12-26 01:32:39 AM",
                              "type": "small",
                            },
                            "type": [Function],
                          },
                          "type": "td",
                        },
                      ],
                      "type": "tr",
                    },
                    Object {
                      "instance": null,
                      "key": "208",
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <td
                            width="10%"
                          >
                            <small>
                              208
                            </small>
                          </td>,
                          <td
                            width="22.5%"
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="567ea7f1d69aa7d787912e9b226a234f5d85364f78efde70fb084b2671a78d5c"
                            />
                          </td>,
                          <td
                            width="15%"
                          >
                            <Text
                              ellipsize={true}
                            >
                              <small>
                                143854
                              </small>
                            </Text>
                          </td>,
                          <td
                            width="10%"
                          >
                            <Text
                              ellipsize={true}
                            >
                              <small>
                                6
                              </small>
                            </Text>
                          </td>,
                          <td
                            width="20%"
                          >
                            <Text
                              ellipsize={true}
                            >
                              <small>
                                2017-12-25 06:12:05 AM
                              </small>
                            </Text>
                          </td>,
                        ],
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <small>
                              208
                            </small>,
                            "width": "10%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": 208,
                            },
                            "ref": null,
                            "rendered": 208,
                            "type": "small",
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <HexText
                              classes="small smd-pad-4"
                              value="567ea7f1d69aa7d787912e9b226a234f5d85364f78efde70fb084b2671a78d5c"
                            />,
                            "width": "22.5%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "classes": "small smd-pad-4",
                              "value": "567ea7f1d69aa7d787912e9b226a234f5d85364f78efde70fb084b2671a78d5c",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Text
                              ellipsize={true}
                            >
                              <small>
                                143854
                              </small>
                            </Text>,
                            "width": "15%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": <small>
                                143854
                              </small>,
                              "ellipsize": true,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": 143854,
                              },
                              "ref": null,
                              "rendered": 143854,
                              "type": "small",
                            },
                            "type": [Function],
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Text
                              ellipsize={true}
                            >
                              <small>
                                6
                              </small>
                            </Text>,
                            "width": "10%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": <small>
                                6
                              </small>,
                              "ellipsize": true,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": 6,
                              },
                              "ref": null,
                              "rendered": 6,
                              "type": "small",
                            },
                            "type": [Function],
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Text
                              ellipsize={true}
                            >
                              <small>
                                2017-12-25 06:12:05 AM
                              </small>
                            </Text>,
                            "width": "20%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": <small>
                                2017-12-25 06:12:05 AM
                              </small>,
                              "ellipsize": true,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "2017-12-25 06:12:05 AM",
                              },
                              "ref": null,
                              "rendered": "2017-12-25 06:12:05 AM",
                              "type": "small",
                            },
                            "type": [Function],
                          },
                          "type": "td",
                        },
                      ],
                      "type": "tr",
                    },
                    Object {
                      "instance": null,
                      "key": "207",
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <td
                            width="10%"
                          >
                            <small>
                              207
                            </small>
                          </td>,
                          <td
                            width="22.5%"
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="480c6b2d2dcfa8946f07be11794e874da44fcc0e217ae4b301fcd069af055f8f"
                            />
                          </td>,
                          <td
                            width="15%"
                          >
                            <Text
                              ellipsize={true}
                            >
                              <small>
                                143784
                              </small>
                            </Text>
                          </td>,
                          <td
                            width="10%"
                          >
                            <Text
                              ellipsize={true}
                            >
                              <small>
                                6
                              </small>
                            </Text>
                          </td>,
                          <td
                            width="20%"
                          >
                            <Text
                              ellipsize={true}
                            >
                              <small>
                                2017-12-25 06:11:59 AM
                              </small>
                            </Text>
                          </td>,
                        ],
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <small>
                              207
                            </small>,
                            "width": "10%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": 207,
                            },
                            "ref": null,
                            "rendered": 207,
                            "type": "small",
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <HexText
                              classes="small smd-pad-4"
                              value="480c6b2d2dcfa8946f07be11794e874da44fcc0e217ae4b301fcd069af055f8f"
                            />,
                            "width": "22.5%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "classes": "small smd-pad-4",
                              "value": "480c6b2d2dcfa8946f07be11794e874da44fcc0e217ae4b301fcd069af055f8f",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Text
                              ellipsize={true}
                            >
                              <small>
                                143784
                              </small>
                            </Text>,
                            "width": "15%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": <small>
                                143784
                              </small>,
                              "ellipsize": true,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": 143784,
                              },
                              "ref": null,
                              "rendered": 143784,
                              "type": "small",
                            },
                            "type": [Function],
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Text
                              ellipsize={true}
                            >
                              <small>
                                6
                              </small>
                            </Text>,
                            "width": "10%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": <small>
                                6
                              </small>,
                              "ellipsize": true,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": 6,
                              },
                              "ref": null,
                              "rendered": 6,
                              "type": "small",
                            },
                            "type": [Function],
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Text
                              ellipsize={true}
                            >
                              <small>
                                2017-12-25 06:11:59 AM
                              </small>
                            </Text>,
                            "width": "20%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": <small>
                                2017-12-25 06:11:59 AM
                              </small>,
                              "ellipsize": true,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "2017-12-25 06:11:59 AM",
                              },
                              "ref": null,
                              "rendered": "2017-12-25 06:11:59 AM",
                              "type": "small",
                            },
                            "type": [Function],
                          },
                          "type": "td",
                        },
                      ],
                      "type": "tr",
                    },
                    Object {
                      "instance": null,
                      "key": "206",
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <td
                            width="10%"
                          >
                            <small>
                              206
                            </small>
                          </td>,
                          <td
                            width="22.5%"
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="f3a70b32445b96005b83875d757180167ad93d767b025b684c036f278a84da9a"
                            />
                          </td>,
                          <td
                            width="15%"
                          >
                            <Text
                              ellipsize={true}
                            >
                              <small>
                                143854
                              </small>
                            </Text>
                          </td>,
                          <td
                            width="10%"
                          >
                            <Text
                              ellipsize={true}
                            >
                              <small>
                                6
                              </small>
                            </Text>
                          </td>,
                          <td
                            width="20%"
                          >
                            <Text
                              ellipsize={true}
                            >
                              <small>
                                2017-12-22 04:53:45 AM
                              </small>
                            </Text>
                          </td>,
                        ],
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <small>
                              206
                            </small>,
                            "width": "10%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": 206,
                            },
                            "ref": null,
                            "rendered": 206,
                            "type": "small",
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <HexText
                              classes="small smd-pad-4"
                              value="f3a70b32445b96005b83875d757180167ad93d767b025b684c036f278a84da9a"
                            />,
                            "width": "22.5%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "classes": "small smd-pad-4",
                              "value": "f3a70b32445b96005b83875d757180167ad93d767b025b684c036f278a84da9a",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Text
                              ellipsize={true}
                            >
                              <small>
                                143854
                              </small>
                            </Text>,
                            "width": "15%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": <small>
                                143854
                              </small>,
                              "ellipsize": true,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": 143854,
                              },
                              "ref": null,
                              "rendered": 143854,
                              "type": "small",
                            },
                            "type": [Function],
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Text
                              ellipsize={true}
                            >
                              <small>
                                6
                              </small>
                            </Text>,
                            "width": "10%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": <small>
                                6
                              </small>,
                              "ellipsize": true,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": 6,
                              },
                              "ref": null,
                              "rendered": 6,
                              "type": "small",
                            },
                            "type": [Function],
                          },
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Text
                              ellipsize={true}
                            >
                              <small>
                                2017-12-22 04:53:45 AM
                              </small>
                            </Text>,
                            "width": "20%",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": <small>
                                2017-12-22 04:53:45 AM
                              </small>,
                              "ellipsize": true,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "2017-12-22 04:53:45 AM",
                              },
                              "ref": null,
                              "rendered": "2017-12-22 04:53:45 AM",
                              "type": "small",
                            },
                            "type": [Function],
                          },
                          "type": "td",
                        },
                      ],
                      "type": "tr",
                    },
                  ],
                  "type": "tbody",
                },
              ],
              "type": "table",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`BlockTable: index render component without values 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BlockTable
    anyTouched={false}
    array={
      Object {
        "insert": [Function],
        "move": [Function],
        "pop": [Function],
        "push": [Function],
        "remove": [Function],
        "removeAll": [Function],
        "shift": [Function],
        "splice": [Function],
        "swap": [Function],
        "unshift": [Function],
      }
    }
    asyncValidate={[Function]}
    asyncValidating={false}
    autofill={[Function]}
    blur={[Function]}
    change={[Function]}
    clearAsyncError={[Function]}
    clearQuery={[Function]}
    clearSubmit={[Function]}
    clearSubmitErrors={[Function]}
    destroy={[Function]}
    dirty={false}
    dispatch={[Function]}
    error={undefined}
    executeQuery={[Function]}
    fetchBlockData={[Function]}
    form="block-query"
    handleSubmit={[Function]}
    history={Object {}}
    initialValues={undefined}
    initialize={[Function]}
    initialized={false}
    invalid={false}
    pristine={true}
    pure={true}
    query={Object {}}
    queryResult={Array []}
    removeQuery={[Function]}
    reset={[Function]}
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      }
    }
    submit={[Function]}
    submitFailed={false}
    submitSucceeded={false}
    submitting={false}
    touch={[Function]}
    triggerSubmit={undefined}
    untouch={[Function]}
    updateQuery={[Function]}
    valid={true}
    warning={undefined}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="row smd-pad-4"
        >
          <div
            className="col-sm-11 text-left"
          >
            <span
              className="h3"
            >
              Query Builder
            </span>
          </div>
          <div
            className="col-sm-1 text-right"
          >
            <Blueprint.Button
              className="pt-intent-primary pt-icon-refresh"
              onClick={[Function]}
            />
          </div>
        </div>,
        <div>
          <div
            className="row smd-pad-4"
          >
            <div
              className="col-sm-12"
            >
              <Form
                onSubmit={[Function]}
              >
                <div
                  className="pt-control-group smd-full-width"
                >
                  <div
                    className="pt-select"
                  >
                    <Field
                      component="select"
                      name="query"
                      placeholder="Query Type"
                      required={true}
                      type="select"
                      validate={[Function]}
                    >
                      <option
                        value="default"
                      >
                        Query Type
                      </option>
                      <option
                        value="number"
                      >
                        Block Number
                      </option>
                      <option
                        value="id"
                      >
                        Block Id
                      </option>
                      <option
                        value="maxnumber"
                      >
                        Max Block Number
                      </option>
                      <option
                        value="minnumber"
                      >
                        Min Block Number
                      </option>
                      <option
                        value="gaslim"
                      >
                        Gas Limit
                      </option>
                      <option
                        value="mingaslim"
                      >
                        Min Gas Limit
                      </option>
                      <option
                        value="maxgaslim"
                      >
                        Max Gas Limit
                      </option>
                      <option
                        value="gasused"
                      >
                        Gas Used
                      </option>
                      <option
                        value="mingasused"
                      >
                        Min Gas Used
                      </option>
                      <option
                        value="maxgasused"
                      >
                        Max Gas Used
                      </option>
                      <option
                        value="diff"
                      >
                        Difficulty
                      </option>
                      <option
                        value="maxdiff"
                      >
                        Max Difficulty
                      </option>
                      <option
                        value="mindiff"
                      >
                        Min Difficulty
                      </option>
                      <option
                        value="txaddress"
                      >
                        Contained Transaction Address
                      </option>
                      <option
                        value="coinbase"
                      >
                        Coinbase
                      </option>
                      <option
                        value="address"
                      >
                        Address
                      </option>
                      <option
                        value="hash"
                      >
                        Hash
                      </option>
                      <option
                        value="last"
                      >
                        Last
                      </option>
                    </Field>
                  </div>
                  <div
                    className="smd-input-width"
                  >
                    <Field
                      className="pt-input pt-fill"
                      component="input"
                      dir="auto"
                      name="value"
                      onKeyPress={[Function]}
                      placeholder="Query Term"
                      type="text"
                      validate={[Function]}
                    />
                  </div>
                  <Blueprint.Button
                    className="pt-intent-primary pt-icon-arrow-right"
                    onClick={[Function]}
                    type="submit"
                  />
                </div>
              </Form>
            </div>
          </div>
          <div
            className="row smd-pad-4"
          >
            <div
              className="col-sm-12"
            />
          </div>
        </div>,
        <div
          className="row"
        >
          <div
            className="col-sm-12"
          >
            <table
              className="pt-table pt-interactive pt-condensed pt-striped"
              style={
                Object {
                  "tableLayout": "fixed",
                  "width": "100%",
                }
              }
            >
              <thead>
                <tr>
                  <th
                    width="10%"
                  >
                    <h5>
                      Block Number
                    </h5>
                  </th>
                  <th
                    width="45%"
                  >
                    <h5>
                      Parent Hash
                    </h5>
                  </th>
                  <th
                    width="15%"
                  >
                    <h5>
                      Difficulty
                    </h5>
                  </th>
                  <th
                    width="10%"
                  >
                    <h5>
                      Nonce
                    </h5>
                  </th>
                  <th
                    width="20%"
                  >
                    <h5>
                      Timestamp
                    </h5>
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    colSpan={6}
                  >
                    No Blocks
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>,
      ],
      "className": "pt-card pt-dark pt-elevation-2",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="col-sm-11 text-left"
            >
              <span
                className="h3"
              >
                Query Builder
              </span>
            </div>,
            <div
              className="col-sm-1 text-right"
            >
              <Blueprint.Button
                className="pt-intent-primary pt-icon-refresh"
                onClick={[Function]}
              />
            </div>,
          ],
          "className": "row smd-pad-4",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span
                className="h3"
              >
                Query Builder
              </span>,
              "className": "col-sm-11 text-left",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Query Builder",
                "className": "h3",
              },
              "ref": null,
              "rendered": "Query Builder",
              "type": "span",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Blueprint.Button
                className="pt-intent-primary pt-icon-refresh"
                onClick={[Function]}
              />,
              "className": "col-sm-1 text-right",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "pt-intent-primary pt-icon-refresh",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="row smd-pad-4"
            >
              <div
                className="col-sm-12"
              >
                <Form
                  onSubmit={[Function]}
                >
                  <div
                    className="pt-control-group smd-full-width"
                  >
                    <div
                      className="pt-select"
                    >
                      <Field
                        component="select"
                        name="query"
                        placeholder="Query Type"
                        required={true}
                        type="select"
                        validate={[Function]}
                      >
                        <option
                          value="default"
                        >
                          Query Type
                        </option>
                        <option
                          value="number"
                        >
                          Block Number
                        </option>
                        <option
                          value="id"
                        >
                          Block Id
                        </option>
                        <option
                          value="maxnumber"
                        >
                          Max Block Number
                        </option>
                        <option
                          value="minnumber"
                        >
                          Min Block Number
                        </option>
                        <option
                          value="gaslim"
                        >
                          Gas Limit
                        </option>
                        <option
                          value="mingaslim"
                        >
                          Min Gas Limit
                        </option>
                        <option
                          value="maxgaslim"
                        >
                          Max Gas Limit
                        </option>
                        <option
                          value="gasused"
                        >
                          Gas Used
                        </option>
                        <option
                          value="mingasused"
                        >
                          Min Gas Used
                        </option>
                        <option
                          value="maxgasused"
                        >
                          Max Gas Used
                        </option>
                        <option
                          value="diff"
                        >
                          Difficulty
                        </option>
                        <option
                          value="maxdiff"
                        >
                          Max Difficulty
                        </option>
                        <option
                          value="mindiff"
                        >
                          Min Difficulty
                        </option>
                        <option
                          value="txaddress"
                        >
                          Contained Transaction Address
                        </option>
                        <option
                          value="coinbase"
                        >
                          Coinbase
                        </option>
                        <option
                          value="address"
                        >
                          Address
                        </option>
                        <option
                          value="hash"
                        >
                          Hash
                        </option>
                        <option
                          value="last"
                        >
                          Last
                        </option>
                      </Field>
                    </div>
                    <div
                      className="smd-input-width"
                    >
                      <Field
                        className="pt-input pt-fill"
                        component="input"
                        dir="auto"
                        name="value"
                        onKeyPress={[Function]}
                        placeholder="Query Term"
                        type="text"
                        validate={[Function]}
                      />
                    </div>
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-arrow-right"
                      onClick={[Function]}
                      type="submit"
                    />
                  </div>
                </Form>
              </div>
            </div>,
            <div
              className="row smd-pad-4"
            >
              <div
                className="col-sm-12"
              />
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-sm-12"
              >
                <Form
                  onSubmit={[Function]}
                >
                  <div
                    className="pt-control-group smd-full-width"
                  >
                    <div
                      className="pt-select"
                    >
                      <Field
                        component="select"
                        name="query"
                        placeholder="Query Type"
                        required={true}
                        type="select"
                        validate={[Function]}
                      >
                        <option
                          value="default"
                        >
                          Query Type
                        </option>
                        <option
                          value="number"
                        >
                          Block Number
                        </option>
                        <option
                          value="id"
                        >
                          Block Id
                        </option>
                        <option
                          value="maxnumber"
                        >
                          Max Block Number
                        </option>
                        <option
                          value="minnumber"
                        >
                          Min Block Number
                        </option>
                        <option
                          value="gaslim"
                        >
                          Gas Limit
                        </option>
                        <option
                          value="mingaslim"
                        >
                          Min Gas Limit
                        </option>
                        <option
                          value="maxgaslim"
                        >
                          Max Gas Limit
                        </option>
                        <option
                          value="gasused"
                        >
                          Gas Used
                        </option>
                        <option
                          value="mingasused"
                        >
                          Min Gas Used
                        </option>
                        <option
                          value="maxgasused"
                        >
                          Max Gas Used
                        </option>
                        <option
                          value="diff"
                        >
                          Difficulty
                        </option>
                        <option
                          value="maxdiff"
                        >
                          Max Difficulty
                        </option>
                        <option
                          value="mindiff"
                        >
                          Min Difficulty
                        </option>
                        <option
                          value="txaddress"
                        >
                          Contained Transaction Address
                        </option>
                        <option
                          value="coinbase"
                        >
                          Coinbase
                        </option>
                        <option
                          value="address"
                        >
                          Address
                        </option>
                        <option
                          value="hash"
                        >
                          Hash
                        </option>
                        <option
                          value="last"
                        >
                          Last
                        </option>
                      </Field>
                    </div>
                    <div
                      className="smd-input-width"
                    >
                      <Field
                        className="pt-input pt-fill"
                        component="input"
                        dir="auto"
                        name="value"
                        onKeyPress={[Function]}
                        placeholder="Query Term"
                        type="text"
                        validate={[Function]}
                      />
                    </div>
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-arrow-right"
                      onClick={[Function]}
                      type="submit"
                    />
                  </div>
                </Form>
              </div>,
              "className": "row smd-pad-4",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Form
                  onSubmit={[Function]}
                >
                  <div
                    className="pt-control-group smd-full-width"
                  >
                    <div
                      className="pt-select"
                    >
                      <Field
                        component="select"
                        name="query"
                        placeholder="Query Type"
                        required={true}
                        type="select"
                        validate={[Function]}
                      >
                        <option
                          value="default"
                        >
                          Query Type
                        </option>
                        <option
                          value="number"
                        >
                          Block Number
                        </option>
                        <option
                          value="id"
                        >
                          Block Id
                        </option>
                        <option
                          value="maxnumber"
                        >
                          Max Block Number
                        </option>
                        <option
                          value="minnumber"
                        >
                          Min Block Number
                        </option>
                        <option
                          value="gaslim"
                        >
                          Gas Limit
                        </option>
                        <option
                          value="mingaslim"
                        >
                          Min Gas Limit
                        </option>
                        <option
                          value="maxgaslim"
                        >
                          Max Gas Limit
                        </option>
                        <option
                          value="gasused"
                        >
                          Gas Used
                        </option>
                        <option
                          value="mingasused"
                        >
                          Min Gas Used
                        </option>
                        <option
                          value="maxgasused"
                        >
                          Max Gas Used
                        </option>
                        <option
                          value="diff"
                        >
                          Difficulty
                        </option>
                        <option
                          value="maxdiff"
                        >
                          Max Difficulty
                        </option>
                        <option
                          value="mindiff"
                        >
                          Min Difficulty
                        </option>
                        <option
                          value="txaddress"
                        >
                          Contained Transaction Address
                        </option>
                        <option
                          value="coinbase"
                        >
                          Coinbase
                        </option>
                        <option
                          value="address"
                        >
                          Address
                        </option>
                        <option
                          value="hash"
                        >
                          Hash
                        </option>
                        <option
                          value="last"
                        >
                          Last
                        </option>
                      </Field>
                    </div>
                    <div
                      className="smd-input-width"
                    >
                      <Field
                        className="pt-input pt-fill"
                        component="input"
                        dir="auto"
                        name="value"
                        onKeyPress={[Function]}
                        placeholder="Query Term"
                        type="text"
                        validate={[Function]}
                      />
                    </div>
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-arrow-right"
                      onClick={[Function]}
                      type="submit"
                    />
                  </div>
                </Form>,
                "className": "col-sm-12",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <div
                    className="pt-control-group smd-full-width"
                  >
                    <div
                      className="pt-select"
                    >
                      <Field
                        component="select"
                        name="query"
                        placeholder="Query Type"
                        required={true}
                        type="select"
                        validate={[Function]}
                      >
                        <option
                          value="default"
                        >
                          Query Type
                        </option>
                        <option
                          value="number"
                        >
                          Block Number
                        </option>
                        <option
                          value="id"
                        >
                          Block Id
                        </option>
                        <option
                          value="maxnumber"
                        >
                          Max Block Number
                        </option>
                        <option
                          value="minnumber"
                        >
                          Min Block Number
                        </option>
                        <option
                          value="gaslim"
                        >
                          Gas Limit
                        </option>
                        <option
                          value="mingaslim"
                        >
                          Min Gas Limit
                        </option>
                        <option
                          value="maxgaslim"
                        >
                          Max Gas Limit
                        </option>
                        <option
                          value="gasused"
                        >
                          Gas Used
                        </option>
                        <option
                          value="mingasused"
                        >
                          Min Gas Used
                        </option>
                        <option
                          value="maxgasused"
                        >
                          Max Gas Used
                        </option>
                        <option
                          value="diff"
                        >
                          Difficulty
                        </option>
                        <option
                          value="maxdiff"
                        >
                          Max Difficulty
                        </option>
                        <option
                          value="mindiff"
                        >
                          Min Difficulty
                        </option>
                        <option
                          value="txaddress"
                        >
                          Contained Transaction Address
                        </option>
                        <option
                          value="coinbase"
                        >
                          Coinbase
                        </option>
                        <option
                          value="address"
                        >
                          Address
                        </option>
                        <option
                          value="hash"
                        >
                          Hash
                        </option>
                        <option
                          value="last"
                        >
                          Last
                        </option>
                      </Field>
                    </div>
                    <div
                      className="smd-input-width"
                    >
                      <Field
                        className="pt-input pt-fill"
                        component="input"
                        dir="auto"
                        name="value"
                        onKeyPress={[Function]}
                        placeholder="Query Term"
                        type="text"
                        validate={[Function]}
                      />
                    </div>
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-arrow-right"
                      onClick={[Function]}
                      type="submit"
                    />
                  </div>,
                  "onSubmit": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="pt-select"
                      >
                        <Field
                          component="select"
                          name="query"
                          placeholder="Query Type"
                          required={true}
                          type="select"
                          validate={[Function]}
                        >
                          <option
                            value="default"
                          >
                            Query Type
                          </option>
                          <option
                            value="number"
                          >
                            Block Number
                          </option>
                          <option
                            value="id"
                          >
                            Block Id
                          </option>
                          <option
                            value="maxnumber"
                          >
                            Max Block Number
                          </option>
                          <option
                            value="minnumber"
                          >
                            Min Block Number
                          </option>
                          <option
                            value="gaslim"
                          >
                            Gas Limit
                          </option>
                          <option
                            value="mingaslim"
                          >
                            Min Gas Limit
                          </option>
                          <option
                            value="maxgaslim"
                          >
                            Max Gas Limit
                          </option>
                          <option
                            value="gasused"
                          >
                            Gas Used
                          </option>
                          <option
                            value="mingasused"
                          >
                            Min Gas Used
                          </option>
                          <option
                            value="maxgasused"
                          >
                            Max Gas Used
                          </option>
                          <option
                            value="diff"
                          >
                            Difficulty
                          </option>
                          <option
                            value="maxdiff"
                          >
                            Max Difficulty
                          </option>
                          <option
                            value="mindiff"
                          >
                            Min Difficulty
                          </option>
                          <option
                            value="txaddress"
                          >
                            Contained Transaction Address
                          </option>
                          <option
                            value="coinbase"
                          >
                            Coinbase
                          </option>
                          <option
                            value="address"
                          >
                            Address
                          </option>
                          <option
                            value="hash"
                          >
                            Hash
                          </option>
                          <option
                            value="last"
                          >
                            Last
                          </option>
                        </Field>
                      </div>,
                      <div
                        className="smd-input-width"
                      >
                        <Field
                          className="pt-input pt-fill"
                          component="input"
                          dir="auto"
                          name="value"
                          onKeyPress={[Function]}
                          placeholder="Query Term"
                          type="text"
                          validate={[Function]}
                        />
                      </div>,
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-arrow-right"
                        onClick={[Function]}
                        type="submit"
                      />,
                    ],
                    "className": "pt-control-group smd-full-width",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Field
                          component="select"
                          name="query"
                          placeholder="Query Type"
                          required={true}
                          type="select"
                          validate={[Function]}
                        >
                          <option
                            value="default"
                          >
                            Query Type
                          </option>
                          <option
                            value="number"
                          >
                            Block Number
                          </option>
                          <option
                            value="id"
                          >
                            Block Id
                          </option>
                          <option
                            value="maxnumber"
                          >
                            Max Block Number
                          </option>
                          <option
                            value="minnumber"
                          >
                            Min Block Number
                          </option>
                          <option
                            value="gaslim"
                          >
                            Gas Limit
                          </option>
                          <option
                            value="mingaslim"
                          >
                            Min Gas Limit
                          </option>
                          <option
                            value="maxgaslim"
                          >
                            Max Gas Limit
                          </option>
                          <option
                            value="gasused"
                          >
                            Gas Used
                          </option>
                          <option
                            value="mingasused"
                          >
                            Min Gas Used
                          </option>
                          <option
                            value="maxgasused"
                          >
                            Max Gas Used
                          </option>
                          <option
                            value="diff"
                          >
                            Difficulty
                          </option>
                          <option
                            value="maxdiff"
                          >
                            Max Difficulty
                          </option>
                          <option
                            value="mindiff"
                          >
                            Min Difficulty
                          </option>
                          <option
                            value="txaddress"
                          >
                            Contained Transaction Address
                          </option>
                          <option
                            value="coinbase"
                          >
                            Coinbase
                          </option>
                          <option
                            value="address"
                          >
                            Address
                          </option>
                          <option
                            value="hash"
                          >
                            Hash
                          </option>
                          <option
                            value="last"
                          >
                            Last
                          </option>
                        </Field>,
                        "className": "pt-select",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            <option
                              value="default"
                            >
                              Query Type
                            </option>,
                            <option
                              value="number"
                            >
                              Block Number
                            </option>,
                            <option
                              value="id"
                            >
                              Block Id
                            </option>,
                            <option
                              value="maxnumber"
                            >
                              Max Block Number
                            </option>,
                            <option
                              value="minnumber"
                            >
                              Min Block Number
                            </option>,
                            <option
                              value="gaslim"
                            >
                              Gas Limit
                            </option>,
                            <option
                              value="mingaslim"
                            >
                              Min Gas Limit
                            </option>,
                            <option
                              value="maxgaslim"
                            >
                              Max Gas Limit
                            </option>,
                            <option
                              value="gasused"
                            >
                              Gas Used
                            </option>,
                            <option
                              value="mingasused"
                            >
                              Min Gas Used
                            </option>,
                            <option
                              value="maxgasused"
                            >
                              Max Gas Used
                            </option>,
                            <option
                              value="diff"
                            >
                              Difficulty
                            </option>,
                            <option
                              value="maxdiff"
                            >
                              Max Difficulty
                            </option>,
                            <option
                              value="mindiff"
                            >
                              Min Difficulty
                            </option>,
                            <option
                              value="txaddress"
                            >
                              Contained Transaction Address
                            </option>,
                            <option
                              value="coinbase"
                            >
                              Coinbase
                            </option>,
                            <option
                              value="address"
                            >
                              Address
                            </option>,
                            <option
                              value="hash"
                            >
                              Hash
                            </option>,
                            <option
                              value="last"
                            >
                              Last
                            </option>,
                          ],
                          "component": "select",
                          "name": "query",
                          "placeholder": "Query Type",
                          "required": true,
                          "type": "select",
                          "validate": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": "default",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Query Type",
                              "value": "default",
                            },
                            "ref": null,
                            "rendered": "Query Type",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "number",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Block Number",
                              "value": "number",
                            },
                            "ref": null,
                            "rendered": "Block Number",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "id",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Block Id",
                              "value": "id",
                            },
                            "ref": null,
                            "rendered": "Block Id",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "maxnumber",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Max Block Number",
                              "value": "maxnumber",
                            },
                            "ref": null,
                            "rendered": "Max Block Number",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "minnumber",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Min Block Number",
                              "value": "minnumber",
                            },
                            "ref": null,
                            "rendered": "Min Block Number",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "gaslim",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Gas Limit",
                              "value": "gaslim",
                            },
                            "ref": null,
                            "rendered": "Gas Limit",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "mingaslim",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Min Gas Limit",
                              "value": "mingaslim",
                            },
                            "ref": null,
                            "rendered": "Min Gas Limit",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "maxgaslim",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Max Gas Limit",
                              "value": "maxgaslim",
                            },
                            "ref": null,
                            "rendered": "Max Gas Limit",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "gasused",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Gas Used",
                              "value": "gasused",
                            },
                            "ref": null,
                            "rendered": "Gas Used",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "mingasused",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Min Gas Used",
                              "value": "mingasused",
                            },
                            "ref": null,
                            "rendered": "Min Gas Used",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "maxgasused",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Max Gas Used",
                              "value": "maxgasused",
                            },
                            "ref": null,
                            "rendered": "Max Gas Used",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "diff",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Difficulty",
                              "value": "diff",
                            },
                            "ref": null,
                            "rendered": "Difficulty",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "maxdiff",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Max Difficulty",
                              "value": "maxdiff",
                            },
                            "ref": null,
                            "rendered": "Max Difficulty",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "mindiff",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Min Difficulty",
                              "value": "mindiff",
                            },
                            "ref": null,
                            "rendered": "Min Difficulty",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "txaddress",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Contained Transaction Address",
                              "value": "txaddress",
                            },
                            "ref": null,
                            "rendered": "Contained Transaction Address",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "coinbase",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Coinbase",
                              "value": "coinbase",
                            },
                            "ref": null,
                            "rendered": "Coinbase",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "address",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Address",
                              "value": "address",
                            },
                            "ref": null,
                            "rendered": "Address",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "hash",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Hash",
                              "value": "hash",
                            },
                            "ref": null,
                            "rendered": "Hash",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "last",
                            "nodeType": "host",
                            "props": Object {
                              "children": "Last",
                              "value": "last",
                            },
                            "ref": null,
                            "rendered": "Last",
                            "type": "option",
                          },
                        ],
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Field
                          className="pt-input pt-fill"
                          component="input"
                          dir="auto"
                          name="value"
                          onKeyPress={[Function]}
                          placeholder="Query Term"
                          type="text"
                          validate={[Function]}
                        />,
                        "className": "smd-input-width",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "className": "pt-input pt-fill",
                          "component": "input",
                          "dir": "auto",
                          "name": "value",
                          "onKeyPress": [Function],
                          "placeholder": "Query Term",
                          "type": "text",
                          "validate": [Function],
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": "pt-intent-primary pt-icon-arrow-right",
                        "onClick": [Function],
                        "type": "submit",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                "type": [Function],
              },
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-sm-12"
              />,
              "className": "row smd-pad-4",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [],
                "className": "col-sm-12",
              },
              "ref": null,
              "rendered": Array [],
              "type": "div",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="col-sm-12"
          >
            <table
              className="pt-table pt-interactive pt-condensed pt-striped"
              style={
                Object {
                  "tableLayout": "fixed",
                  "width": "100%",
                }
              }
            >
              <thead>
                <tr>
                  <th
                    width="10%"
                  >
                    <h5>
                      Block Number
                    </h5>
                  </th>
                  <th
                    width="45%"
                  >
                    <h5>
                      Parent Hash
                    </h5>
                  </th>
                  <th
                    width="15%"
                  >
                    <h5>
                      Difficulty
                    </h5>
                  </th>
                  <th
                    width="10%"
                  >
                    <h5>
                      Nonce
                    </h5>
                  </th>
                  <th
                    width="20%"
                  >
                    <h5>
                      Timestamp
                    </h5>
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    colSpan={6}
                  >
                    No Blocks
                  </td>
                </tr>
              </tbody>
            </table>
          </div>,
          "className": "row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <table
              className="pt-table pt-interactive pt-condensed pt-striped"
              style={
                Object {
                  "tableLayout": "fixed",
                  "width": "100%",
                }
              }
            >
              <thead>
                <tr>
                  <th
                    width="10%"
                  >
                    <h5>
                      Block Number
                    </h5>
                  </th>
                  <th
                    width="45%"
                  >
                    <h5>
                      Parent Hash
                    </h5>
                  </th>
                  <th
                    width="15%"
                  >
                    <h5>
                      Difficulty
                    </h5>
                  </th>
                  <th
                    width="10%"
                  >
                    <h5>
                      Nonce
                    </h5>
                  </th>
                  <th
                    width="20%"
                  >
                    <h5>
                      Timestamp
                    </h5>
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    colSpan={6}
                  >
                    No Blocks
                  </td>
                </tr>
              </tbody>
            </table>,
            "className": "col-sm-12",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <thead>
                  <tr>
                    <th
                      width="10%"
                    >
                      <h5>
                        Block Number
                      </h5>
                    </th>
                    <th
                      width="45%"
                    >
                      <h5>
                        Parent Hash
                      </h5>
                    </th>
                    <th
                      width="15%"
                    >
                      <h5>
                        Difficulty
                      </h5>
                    </th>
                    <th
                      width="10%"
                    >
                      <h5>
                        Nonce
                      </h5>
                    </th>
                    <th
                      width="20%"
                    >
                      <h5>
                        Timestamp
                      </h5>
                    </th>
                  </tr>
                </thead>,
                <tbody>
                  <tr>
                    <td
                      colSpan={6}
                    >
                      No Blocks
                    </td>
                  </tr>
                </tbody>,
              ],
              "className": "pt-table pt-interactive pt-condensed pt-striped",
              "style": Object {
                "tableLayout": "fixed",
                "width": "100%",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <tr>
                    <th
                      width="10%"
                    >
                      <h5>
                        Block Number
                      </h5>
                    </th>
                    <th
                      width="45%"
                    >
                      <h5>
                        Parent Hash
                      </h5>
                    </th>
                    <th
                      width="15%"
                    >
                      <h5>
                        Difficulty
                      </h5>
                    </th>
                    <th
                      width="10%"
                    >
                      <h5>
                        Nonce
                      </h5>
                    </th>
                    <th
                      width="20%"
                    >
                      <h5>
                        Timestamp
                      </h5>
                    </th>
                  </tr>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <th
                        width="10%"
                      >
                        <h5>
                          Block Number
                        </h5>
                      </th>,
                      <th
                        width="45%"
                      >
                        <h5>
                          Parent Hash
                        </h5>
                      </th>,
                      <th
                        width="15%"
                      >
                        <h5>
                          Difficulty
                        </h5>
                      </th>,
                      <th
                        width="10%"
                      >
                        <h5>
                          Nonce
                        </h5>
                      </th>,
                      <th
                        width="20%"
                      >
                        <h5>
                          Timestamp
                        </h5>
                      </th>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <h5>
                          Block Number
                        </h5>,
                        "width": "10%",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Block Number",
                        },
                        "ref": null,
                        "rendered": "Block Number",
                        "type": "h5",
                      },
                      "type": "th",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <h5>
                          Parent Hash
                        </h5>,
                        "width": "45%",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Parent Hash",
                        },
                        "ref": null,
                        "rendered": "Parent Hash",
                        "type": "h5",
                      },
                      "type": "th",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <h5>
                          Difficulty
                        </h5>,
                        "width": "15%",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Difficulty",
                        },
                        "ref": null,
                        "rendered": "Difficulty",
                        "type": "h5",
                      },
                      "type": "th",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <h5>
                          Nonce
                        </h5>,
                        "width": "10%",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Nonce",
                        },
                        "ref": null,
                        "rendered": "Nonce",
                        "type": "h5",
                      },
                      "type": "th",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <h5>
                          Timestamp
                        </h5>,
                        "width": "20%",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Timestamp",
                        },
                        "ref": null,
                        "rendered": "Timestamp",
                        "type": "h5",
                      },
                      "type": "th",
                    },
                  ],
                  "type": "tr",
                },
                "type": "thead",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <tr>
                    <td
                      colSpan={6}
                    >
                      No Blocks
                    </td>
                  </tr>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <td
                      colSpan={6}
                    >
                      No Blocks
                    </td>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "No Blocks",
                      "colSpan": 6,
                    },
                    "ref": null,
                    "rendered": "No Blocks",
                    "type": "td",
                  },
                  "type": "tr",
                },
                "type": "tbody",
              },
            ],
            "type": "table",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="row smd-pad-4"
          >
            <div
              className="col-sm-11 text-left"
            >
              <span
                className="h3"
              >
                Query Builder
              </span>
            </div>
            <div
              className="col-sm-1 text-right"
            >
              <Blueprint.Button
                className="pt-intent-primary pt-icon-refresh"
                onClick={[Function]}
              />
            </div>
          </div>,
          <div>
            <div
              className="row smd-pad-4"
            >
              <div
                className="col-sm-12"
              >
                <Form
                  onSubmit={[Function]}
                >
                  <div
                    className="pt-control-group smd-full-width"
                  >
                    <div
                      className="pt-select"
                    >
                      <Field
                        component="select"
                        name="query"
                        placeholder="Query Type"
                        required={true}
                        type="select"
                        validate={[Function]}
                      >
                        <option
                          value="default"
                        >
                          Query Type
                        </option>
                        <option
                          value="number"
                        >
                          Block Number
                        </option>
                        <option
                          value="id"
                        >
                          Block Id
                        </option>
                        <option
                          value="maxnumber"
                        >
                          Max Block Number
                        </option>
                        <option
                          value="minnumber"
                        >
                          Min Block Number
                        </option>
                        <option
                          value="gaslim"
                        >
                          Gas Limit
                        </option>
                        <option
                          value="mingaslim"
                        >
                          Min Gas Limit
                        </option>
                        <option
                          value="maxgaslim"
                        >
                          Max Gas Limit
                        </option>
                        <option
                          value="gasused"
                        >
                          Gas Used
                        </option>
                        <option
                          value="mingasused"
                        >
                          Min Gas Used
                        </option>
                        <option
                          value="maxgasused"
                        >
                          Max Gas Used
                        </option>
                        <option
                          value="diff"
                        >
                          Difficulty
                        </option>
                        <option
                          value="maxdiff"
                        >
                          Max Difficulty
                        </option>
                        <option
                          value="mindiff"
                        >
                          Min Difficulty
                        </option>
                        <option
                          value="txaddress"
                        >
                          Contained Transaction Address
                        </option>
                        <option
                          value="coinbase"
                        >
                          Coinbase
                        </option>
                        <option
                          value="address"
                        >
                          Address
                        </option>
                        <option
                          value="hash"
                        >
                          Hash
                        </option>
                        <option
                          value="last"
                        >
                          Last
                        </option>
                      </Field>
                    </div>
                    <div
                      className="smd-input-width"
                    >
                      <Field
                        className="pt-input pt-fill"
                        component="input"
                        dir="auto"
                        name="value"
                        onKeyPress={[Function]}
                        placeholder="Query Term"
                        type="text"
                        validate={[Function]}
                      />
                    </div>
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-arrow-right"
                      onClick={[Function]}
                      type="submit"
                    />
                  </div>
                </Form>
              </div>
            </div>
            <div
              className="row smd-pad-4"
            >
              <div
                className="col-sm-12"
              />
            </div>
          </div>,
          <div
            className="row"
          >
            <div
              className="col-sm-12"
            >
              <table
                className="pt-table pt-interactive pt-condensed pt-striped"
                style={
                  Object {
                    "tableLayout": "fixed",
                    "width": "100%",
                  }
                }
              >
                <thead>
                  <tr>
                    <th
                      width="10%"
                    >
                      <h5>
                        Block Number
                      </h5>
                    </th>
                    <th
                      width="45%"
                    >
                      <h5>
                        Parent Hash
                      </h5>
                    </th>
                    <th
                      width="15%"
                    >
                      <h5>
                        Difficulty
                      </h5>
                    </th>
                    <th
                      width="10%"
                    >
                      <h5>
                        Nonce
                      </h5>
                    </th>
                    <th
                      width="20%"
                    >
                      <h5>
                        Timestamp
                      </h5>
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td
                      colSpan={6}
                    >
                      No Blocks
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>,
        ],
        "className": "pt-card pt-dark pt-elevation-2",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="col-sm-11 text-left"
              >
                <span
                  className="h3"
                >
                  Query Builder
                </span>
              </div>,
              <div
                className="col-sm-1 text-right"
              >
                <Blueprint.Button
                  className="pt-intent-primary pt-icon-refresh"
                  onClick={[Function]}
                />
              </div>,
            ],
            "className": "row smd-pad-4",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span
                  className="h3"
                >
                  Query Builder
                </span>,
                "className": "col-sm-11 text-left",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Query Builder",
                  "className": "h3",
                },
                "ref": null,
                "rendered": "Query Builder",
                "type": "span",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Blueprint.Button
                  className="pt-intent-primary pt-icon-refresh"
                  onClick={[Function]}
                />,
                "className": "col-sm-1 text-right",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "pt-intent-primary pt-icon-refresh",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="row smd-pad-4"
              >
                <div
                  className="col-sm-12"
                >
                  <Form
                    onSubmit={[Function]}
                  >
                    <div
                      className="pt-control-group smd-full-width"
                    >
                      <div
                        className="pt-select"
                      >
                        <Field
                          component="select"
                          name="query"
                          placeholder="Query Type"
                          required={true}
                          type="select"
                          validate={[Function]}
                        >
                          <option
                            value="default"
                          >
                            Query Type
                          </option>
                          <option
                            value="number"
                          >
                            Block Number
                          </option>
                          <option
                            value="id"
                          >
                            Block Id
                          </option>
                          <option
                            value="maxnumber"
                          >
                            Max Block Number
                          </option>
                          <option
                            value="minnumber"
                          >
                            Min Block Number
                          </option>
                          <option
                            value="gaslim"
                          >
                            Gas Limit
                          </option>
                          <option
                            value="mingaslim"
                          >
                            Min Gas Limit
                          </option>
                          <option
                            value="maxgaslim"
                          >
                            Max Gas Limit
                          </option>
                          <option
                            value="gasused"
                          >
                            Gas Used
                          </option>
                          <option
                            value="mingasused"
                          >
                            Min Gas Used
                          </option>
                          <option
                            value="maxgasused"
                          >
                            Max Gas Used
                          </option>
                          <option
                            value="diff"
                          >
                            Difficulty
                          </option>
                          <option
                            value="maxdiff"
                          >
                            Max Difficulty
                          </option>
                          <option
                            value="mindiff"
                          >
                            Min Difficulty
                          </option>
                          <option
                            value="txaddress"
                          >
                            Contained Transaction Address
                          </option>
                          <option
                            value="coinbase"
                          >
                            Coinbase
                          </option>
                          <option
                            value="address"
                          >
                            Address
                          </option>
                          <option
                            value="hash"
                          >
                            Hash
                          </option>
                          <option
                            value="last"
                          >
                            Last
                          </option>
                        </Field>
                      </div>
                      <div
                        className="smd-input-width"
                      >
                        <Field
                          className="pt-input pt-fill"
                          component="input"
                          dir="auto"
                          name="value"
                          onKeyPress={[Function]}
                          placeholder="Query Term"
                          type="text"
                          validate={[Function]}
                        />
                      </div>
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-arrow-right"
                        onClick={[Function]}
                        type="submit"
                      />
                    </div>
                  </Form>
                </div>
              </div>,
              <div
                className="row smd-pad-4"
              >
                <div
                  className="col-sm-12"
                />
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="col-sm-12"
                >
                  <Form
                    onSubmit={[Function]}
                  >
                    <div
                      className="pt-control-group smd-full-width"
                    >
                      <div
                        className="pt-select"
                      >
                        <Field
                          component="select"
                          name="query"
                          placeholder="Query Type"
                          required={true}
                          type="select"
                          validate={[Function]}
                        >
                          <option
                            value="default"
                          >
                            Query Type
                          </option>
                          <option
                            value="number"
                          >
                            Block Number
                          </option>
                          <option
                            value="id"
                          >
                            Block Id
                          </option>
                          <option
                            value="maxnumber"
                          >
                            Max Block Number
                          </option>
                          <option
                            value="minnumber"
                          >
                            Min Block Number
                          </option>
                          <option
                            value="gaslim"
                          >
                            Gas Limit
                          </option>
                          <option
                            value="mingaslim"
                          >
                            Min Gas Limit
                          </option>
                          <option
                            value="maxgaslim"
                          >
                            Max Gas Limit
                          </option>
                          <option
                            value="gasused"
                          >
                            Gas Used
                          </option>
                          <option
                            value="mingasused"
                          >
                            Min Gas Used
                          </option>
                          <option
                            value="maxgasused"
                          >
                            Max Gas Used
                          </option>
                          <option
                            value="diff"
                          >
                            Difficulty
                          </option>
                          <option
                            value="maxdiff"
                          >
                            Max Difficulty
                          </option>
                          <option
                            value="mindiff"
                          >
                            Min Difficulty
                          </option>
                          <option
                            value="txaddress"
                          >
                            Contained Transaction Address
                          </option>
                          <option
                            value="coinbase"
                          >
                            Coinbase
                          </option>
                          <option
                            value="address"
                          >
                            Address
                          </option>
                          <option
                            value="hash"
                          >
                            Hash
                          </option>
                          <option
                            value="last"
                          >
                            Last
                          </option>
                        </Field>
                      </div>
                      <div
                        className="smd-input-width"
                      >
                        <Field
                          className="pt-input pt-fill"
                          component="input"
                          dir="auto"
                          name="value"
                          onKeyPress={[Function]}
                          placeholder="Query Term"
                          type="text"
                          validate={[Function]}
                        />
                      </div>
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-arrow-right"
                        onClick={[Function]}
                        type="submit"
                      />
                    </div>
                  </Form>
                </div>,
                "className": "row smd-pad-4",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Form
                    onSubmit={[Function]}
                  >
                    <div
                      className="pt-control-group smd-full-width"
                    >
                      <div
                        className="pt-select"
                      >
                        <Field
                          component="select"
                          name="query"
                          placeholder="Query Type"
                          required={true}
                          type="select"
                          validate={[Function]}
                        >
                          <option
                            value="default"
                          >
                            Query Type
                          </option>
                          <option
                            value="number"
                          >
                            Block Number
                          </option>
                          <option
                            value="id"
                          >
                            Block Id
                          </option>
                          <option
                            value="maxnumber"
                          >
                            Max Block Number
                          </option>
                          <option
                            value="minnumber"
                          >
                            Min Block Number
                          </option>
                          <option
                            value="gaslim"
                          >
                            Gas Limit
                          </option>
                          <option
                            value="mingaslim"
                          >
                            Min Gas Limit
                          </option>
                          <option
                            value="maxgaslim"
                          >
                            Max Gas Limit
                          </option>
                          <option
                            value="gasused"
                          >
                            Gas Used
                          </option>
                          <option
                            value="mingasused"
                          >
                            Min Gas Used
                          </option>
                          <option
                            value="maxgasused"
                          >
                            Max Gas Used
                          </option>
                          <option
                            value="diff"
                          >
                            Difficulty
                          </option>
                          <option
                            value="maxdiff"
                          >
                            Max Difficulty
                          </option>
                          <option
                            value="mindiff"
                          >
                            Min Difficulty
                          </option>
                          <option
                            value="txaddress"
                          >
                            Contained Transaction Address
                          </option>
                          <option
                            value="coinbase"
                          >
                            Coinbase
                          </option>
                          <option
                            value="address"
                          >
                            Address
                          </option>
                          <option
                            value="hash"
                          >
                            Hash
                          </option>
                          <option
                            value="last"
                          >
                            Last
                          </option>
                        </Field>
                      </div>
                      <div
                        className="smd-input-width"
                      >
                        <Field
                          className="pt-input pt-fill"
                          component="input"
                          dir="auto"
                          name="value"
                          onKeyPress={[Function]}
                          placeholder="Query Term"
                          type="text"
                          validate={[Function]}
                        />
                      </div>
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-arrow-right"
                        onClick={[Function]}
                        type="submit"
                      />
                    </div>
                  </Form>,
                  "className": "col-sm-12",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <div
                      className="pt-control-group smd-full-width"
                    >
                      <div
                        className="pt-select"
                      >
                        <Field
                          component="select"
                          name="query"
                          placeholder="Query Type"
                          required={true}
                          type="select"
                          validate={[Function]}
                        >
                          <option
                            value="default"
                          >
                            Query Type
                          </option>
                          <option
                            value="number"
                          >
                            Block Number
                          </option>
                          <option
                            value="id"
                          >
                            Block Id
                          </option>
                          <option
                            value="maxnumber"
                          >
                            Max Block Number
                          </option>
                          <option
                            value="minnumber"
                          >
                            Min Block Number
                          </option>
                          <option
                            value="gaslim"
                          >
                            Gas Limit
                          </option>
                          <option
                            value="mingaslim"
                          >
                            Min Gas Limit
                          </option>
                          <option
                            value="maxgaslim"
                          >
                            Max Gas Limit
                          </option>
                          <option
                            value="gasused"
                          >
                            Gas Used
                          </option>
                          <option
                            value="mingasused"
                          >
                            Min Gas Used
                          </option>
                          <option
                            value="maxgasused"
                          >
                            Max Gas Used
                          </option>
                          <option
                            value="diff"
                          >
                            Difficulty
                          </option>
                          <option
                            value="maxdiff"
                          >
                            Max Difficulty
                          </option>
                          <option
                            value="mindiff"
                          >
                            Min Difficulty
                          </option>
                          <option
                            value="txaddress"
                          >
                            Contained Transaction Address
                          </option>
                          <option
                            value="coinbase"
                          >
                            Coinbase
                          </option>
                          <option
                            value="address"
                          >
                            Address
                          </option>
                          <option
                            value="hash"
                          >
                            Hash
                          </option>
                          <option
                            value="last"
                          >
                            Last
                          </option>
                        </Field>
                      </div>
                      <div
                        className="smd-input-width"
                      >
                        <Field
                          className="pt-input pt-fill"
                          component="input"
                          dir="auto"
                          name="value"
                          onKeyPress={[Function]}
                          placeholder="Query Term"
                          type="text"
                          validate={[Function]}
                        />
                      </div>
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-arrow-right"
                        onClick={[Function]}
                        type="submit"
                      />
                    </div>,
                    "onSubmit": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <div
                          className="pt-select"
                        >
                          <Field
                            component="select"
                            name="query"
                            placeholder="Query Type"
                            required={true}
                            type="select"
                            validate={[Function]}
                          >
                            <option
                              value="default"
                            >
                              Query Type
                            </option>
                            <option
                              value="number"
                            >
                              Block Number
                            </option>
                            <option
                              value="id"
                            >
                              Block Id
                            </option>
                            <option
                              value="maxnumber"
                            >
                              Max Block Number
                            </option>
                            <option
                              value="minnumber"
                            >
                              Min Block Number
                            </option>
                            <option
                              value="gaslim"
                            >
                              Gas Limit
                            </option>
                            <option
                              value="mingaslim"
                            >
                              Min Gas Limit
                            </option>
                            <option
                              value="maxgaslim"
                            >
                              Max Gas Limit
                            </option>
                            <option
                              value="gasused"
                            >
                              Gas Used
                            </option>
                            <option
                              value="mingasused"
                            >
                              Min Gas Used
                            </option>
                            <option
                              value="maxgasused"
                            >
                              Max Gas Used
                            </option>
                            <option
                              value="diff"
                            >
                              Difficulty
                            </option>
                            <option
                              value="maxdiff"
                            >
                              Max Difficulty
                            </option>
                            <option
                              value="mindiff"
                            >
                              Min Difficulty
                            </option>
                            <option
                              value="txaddress"
                            >
                              Contained Transaction Address
                            </option>
                            <option
                              value="coinbase"
                            >
                              Coinbase
                            </option>
                            <option
                              value="address"
                            >
                              Address
                            </option>
                            <option
                              value="hash"
                            >
                              Hash
                            </option>
                            <option
                              value="last"
                            >
                              Last
                            </option>
                          </Field>
                        </div>,
                        <div
                          className="smd-input-width"
                        >
                          <Field
                            className="pt-input pt-fill"
                            component="input"
                            dir="auto"
                            name="value"
                            onKeyPress={[Function]}
                            placeholder="Query Term"
                            type="text"
                            validate={[Function]}
                          />
                        </div>,
                        <Blueprint.Button
                          className="pt-intent-primary pt-icon-arrow-right"
                          onClick={[Function]}
                          type="submit"
                        />,
                      ],
                      "className": "pt-control-group smd-full-width",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Field
                            component="select"
                            name="query"
                            placeholder="Query Type"
                            required={true}
                            type="select"
                            validate={[Function]}
                          >
                            <option
                              value="default"
                            >
                              Query Type
                            </option>
                            <option
                              value="number"
                            >
                              Block Number
                            </option>
                            <option
                              value="id"
                            >
                              Block Id
                            </option>
                            <option
                              value="maxnumber"
                            >
                              Max Block Number
                            </option>
                            <option
                              value="minnumber"
                            >
                              Min Block Number
                            </option>
                            <option
                              value="gaslim"
                            >
                              Gas Limit
                            </option>
                            <option
                              value="mingaslim"
                            >
                              Min Gas Limit
                            </option>
                            <option
                              value="maxgaslim"
                            >
                              Max Gas Limit
                            </option>
                            <option
                              value="gasused"
                            >
                              Gas Used
                            </option>
                            <option
                              value="mingasused"
                            >
                              Min Gas Used
                            </option>
                            <option
                              value="maxgasused"
                            >
                              Max Gas Used
                            </option>
                            <option
                              value="diff"
                            >
                              Difficulty
                            </option>
                            <option
                              value="maxdiff"
                            >
                              Max Difficulty
                            </option>
                            <option
                              value="mindiff"
                            >
                              Min Difficulty
                            </option>
                            <option
                              value="txaddress"
                            >
                              Contained Transaction Address
                            </option>
                            <option
                              value="coinbase"
                            >
                              Coinbase
                            </option>
                            <option
                              value="address"
                            >
                              Address
                            </option>
                            <option
                              value="hash"
                            >
                              Hash
                            </option>
                            <option
                              value="last"
                            >
                              Last
                            </option>
                          </Field>,
                          "className": "pt-select",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": Array [
                              <option
                                value="default"
                              >
                                Query Type
                              </option>,
                              <option
                                value="number"
                              >
                                Block Number
                              </option>,
                              <option
                                value="id"
                              >
                                Block Id
                              </option>,
                              <option
                                value="maxnumber"
                              >
                                Max Block Number
                              </option>,
                              <option
                                value="minnumber"
                              >
                                Min Block Number
                              </option>,
                              <option
                                value="gaslim"
                              >
                                Gas Limit
                              </option>,
                              <option
                                value="mingaslim"
                              >
                                Min Gas Limit
                              </option>,
                              <option
                                value="maxgaslim"
                              >
                                Max Gas Limit
                              </option>,
                              <option
                                value="gasused"
                              >
                                Gas Used
                              </option>,
                              <option
                                value="mingasused"
                              >
                                Min Gas Used
                              </option>,
                              <option
                                value="maxgasused"
                              >
                                Max Gas Used
                              </option>,
                              <option
                                value="diff"
                              >
                                Difficulty
                              </option>,
                              <option
                                value="maxdiff"
                              >
                                Max Difficulty
                              </option>,
                              <option
                                value="mindiff"
                              >
                                Min Difficulty
                              </option>,
                              <option
                                value="txaddress"
                              >
                                Contained Transaction Address
                              </option>,
                              <option
                                value="coinbase"
                              >
                                Coinbase
                              </option>,
                              <option
                                value="address"
                              >
                                Address
                              </option>,
                              <option
                                value="hash"
                              >
                                Hash
                              </option>,
                              <option
                                value="last"
                              >
                                Last
                              </option>,
                            ],
                            "component": "select",
                            "name": "query",
                            "placeholder": "Query Type",
                            "required": true,
                            "type": "select",
                            "validate": [Function],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": "default",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Query Type",
                                "value": "default",
                              },
                              "ref": null,
                              "rendered": "Query Type",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "number",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Block Number",
                                "value": "number",
                              },
                              "ref": null,
                              "rendered": "Block Number",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "id",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Block Id",
                                "value": "id",
                              },
                              "ref": null,
                              "rendered": "Block Id",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "maxnumber",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Max Block Number",
                                "value": "maxnumber",
                              },
                              "ref": null,
                              "rendered": "Max Block Number",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "minnumber",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Min Block Number",
                                "value": "minnumber",
                              },
                              "ref": null,
                              "rendered": "Min Block Number",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "gaslim",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Gas Limit",
                                "value": "gaslim",
                              },
                              "ref": null,
                              "rendered": "Gas Limit",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "mingaslim",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Min Gas Limit",
                                "value": "mingaslim",
                              },
                              "ref": null,
                              "rendered": "Min Gas Limit",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "maxgaslim",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Max Gas Limit",
                                "value": "maxgaslim",
                              },
                              "ref": null,
                              "rendered": "Max Gas Limit",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "gasused",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Gas Used",
                                "value": "gasused",
                              },
                              "ref": null,
                              "rendered": "Gas Used",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "mingasused",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Min Gas Used",
                                "value": "mingasused",
                              },
                              "ref": null,
                              "rendered": "Min Gas Used",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "maxgasused",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Max Gas Used",
                                "value": "maxgasused",
                              },
                              "ref": null,
                              "rendered": "Max Gas Used",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "diff",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Difficulty",
                                "value": "diff",
                              },
                              "ref": null,
                              "rendered": "Difficulty",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "maxdiff",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Max Difficulty",
                                "value": "maxdiff",
                              },
                              "ref": null,
                              "rendered": "Max Difficulty",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "mindiff",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Min Difficulty",
                                "value": "mindiff",
                              },
                              "ref": null,
                              "rendered": "Min Difficulty",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "txaddress",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Contained Transaction Address",
                                "value": "txaddress",
                              },
                              "ref": null,
                              "rendered": "Contained Transaction Address",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "coinbase",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Coinbase",
                                "value": "coinbase",
                              },
                              "ref": null,
                              "rendered": "Coinbase",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "address",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Address",
                                "value": "address",
                              },
                              "ref": null,
                              "rendered": "Address",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "hash",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Hash",
                                "value": "hash",
                              },
                              "ref": null,
                              "rendered": "Hash",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": "last",
                              "nodeType": "host",
                              "props": Object {
                                "children": "Last",
                                "value": "last",
                              },
                              "ref": null,
                              "rendered": "Last",
                              "type": "option",
                            },
                          ],
                          "type": [Function],
                        },
                        "type": "div",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Field
                            className="pt-input pt-fill"
                            component="input"
                            dir="auto"
                            name="value"
                            onKeyPress={[Function]}
                            placeholder="Query Term"
                            type="text"
                            validate={[Function]}
                          />,
                          "className": "smd-input-width",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "className": "pt-input pt-fill",
                            "component": "input",
                            "dir": "auto",
                            "name": "value",
                            "onKeyPress": [Function],
                            "placeholder": "Query Term",
                            "type": "text",
                            "validate": [Function],
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": "div",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "className": "pt-intent-primary pt-icon-arrow-right",
                          "onClick": [Function],
                          "type": "submit",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                  "type": [Function],
                },
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="col-sm-12"
                />,
                "className": "row smd-pad-4",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [],
                  "className": "col-sm-12",
                },
                "ref": null,
                "rendered": Array [],
                "type": "div",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-sm-12"
            >
              <table
                className="pt-table pt-interactive pt-condensed pt-striped"
                style={
                  Object {
                    "tableLayout": "fixed",
                    "width": "100%",
                  }
                }
              >
                <thead>
                  <tr>
                    <th
                      width="10%"
                    >
                      <h5>
                        Block Number
                      </h5>
                    </th>
                    <th
                      width="45%"
                    >
                      <h5>
                        Parent Hash
                      </h5>
                    </th>
                    <th
                      width="15%"
                    >
                      <h5>
                        Difficulty
                      </h5>
                    </th>
                    <th
                      width="10%"
                    >
                      <h5>
                        Nonce
                      </h5>
                    </th>
                    <th
                      width="20%"
                    >
                      <h5>
                        Timestamp
                      </h5>
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td
                      colSpan={6}
                    >
                      No Blocks
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>,
            "className": "row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <table
                className="pt-table pt-interactive pt-condensed pt-striped"
                style={
                  Object {
                    "tableLayout": "fixed",
                    "width": "100%",
                  }
                }
              >
                <thead>
                  <tr>
                    <th
                      width="10%"
                    >
                      <h5>
                        Block Number
                      </h5>
                    </th>
                    <th
                      width="45%"
                    >
                      <h5>
                        Parent Hash
                      </h5>
                    </th>
                    <th
                      width="15%"
                    >
                      <h5>
                        Difficulty
                      </h5>
                    </th>
                    <th
                      width="10%"
                    >
                      <h5>
                        Nonce
                      </h5>
                    </th>
                    <th
                      width="20%"
                    >
                      <h5>
                        Timestamp
                      </h5>
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td
                      colSpan={6}
                    >
                      No Blocks
                    </td>
                  </tr>
                </tbody>
              </table>,
              "className": "col-sm-12",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <thead>
                    <tr>
                      <th
                        width="10%"
                      >
                        <h5>
                          Block Number
                        </h5>
                      </th>
                      <th
                        width="45%"
                      >
                        <h5>
                          Parent Hash
                        </h5>
                      </th>
                      <th
                        width="15%"
                      >
                        <h5>
                          Difficulty
                        </h5>
                      </th>
                      <th
                        width="10%"
                      >
                        <h5>
                          Nonce
                        </h5>
                      </th>
                      <th
                        width="20%"
                      >
                        <h5>
                          Timestamp
                        </h5>
                      </th>
                    </tr>
                  </thead>,
                  <tbody>
                    <tr>
                      <td
                        colSpan={6}
                      >
                        No Blocks
                      </td>
                    </tr>
                  </tbody>,
                ],
                "className": "pt-table pt-interactive pt-condensed pt-striped",
                "style": Object {
                  "tableLayout": "fixed",
                  "width": "100%",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <tr>
                      <th
                        width="10%"
                      >
                        <h5>
                          Block Number
                        </h5>
                      </th>
                      <th
                        width="45%"
                      >
                        <h5>
                          Parent Hash
                        </h5>
                      </th>
                      <th
                        width="15%"
                      >
                        <h5>
                          Difficulty
                        </h5>
                      </th>
                      <th
                        width="10%"
                      >
                        <h5>
                          Nonce
                        </h5>
                      </th>
                      <th
                        width="20%"
                      >
                        <h5>
                          Timestamp
                        </h5>
                      </th>
                    </tr>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <th
                          width="10%"
                        >
                          <h5>
                            Block Number
                          </h5>
                        </th>,
                        <th
                          width="45%"
                        >
                          <h5>
                            Parent Hash
                          </h5>
                        </th>,
                        <th
                          width="15%"
                        >
                          <h5>
                            Difficulty
                          </h5>
                        </th>,
                        <th
                          width="10%"
                        >
                          <h5>
                            Nonce
                          </h5>
                        </th>,
                        <th
                          width="20%"
                        >
                          <h5>
                            Timestamp
                          </h5>
                        </th>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <h5>
                            Block Number
                          </h5>,
                          "width": "10%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Block Number",
                          },
                          "ref": null,
                          "rendered": "Block Number",
                          "type": "h5",
                        },
                        "type": "th",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <h5>
                            Parent Hash
                          </h5>,
                          "width": "45%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Parent Hash",
                          },
                          "ref": null,
                          "rendered": "Parent Hash",
                          "type": "h5",
                        },
                        "type": "th",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <h5>
                            Difficulty
                          </h5>,
                          "width": "15%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Difficulty",
                          },
                          "ref": null,
                          "rendered": "Difficulty",
                          "type": "h5",
                        },
                        "type": "th",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <h5>
                            Nonce
                          </h5>,
                          "width": "10%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Nonce",
                          },
                          "ref": null,
                          "rendered": "Nonce",
                          "type": "h5",
                        },
                        "type": "th",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <h5>
                            Timestamp
                          </h5>,
                          "width": "20%",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Timestamp",
                          },
                          "ref": null,
                          "rendered": "Timestamp",
                          "type": "h5",
                        },
                        "type": "th",
                      },
                    ],
                    "type": "tr",
                  },
                  "type": "thead",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <tr>
                      <td
                        colSpan={6}
                      >
                        No Blocks
                      </td>
                    </tr>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <td
                        colSpan={6}
                      >
                        No Blocks
                      </td>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "No Blocks",
                        "colSpan": 6,
                      },
                      "ref": null,
                      "rendered": "No Blocks",
                      "type": "td",
                    },
                    "type": "tr",
                  },
                  "type": "tbody",
                },
              ],
              "type": "table",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
