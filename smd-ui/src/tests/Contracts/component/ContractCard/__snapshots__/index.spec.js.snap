// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContractCard: index mapStateToProps with default values 1`] = `
Object {
  "contractInfos": Object {},
  "selectedChain": "ff7ef45acb7a775018bc765b6fdeea432aaddfcd846cf6dd9442724266b1eac9",
}
`;

exports[`ContractCard: index render ContractCard attribute fromBlock and fromCirrus have false value 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ContractCard
    contract={
      Object {
        "contract": Object {
          "instances": Array [
            Object {
              "address": "0293f9b10a4453667db7fcfe74728c9d821add4b",
              "createdAt": 1512481078000,
              "fromBloc": false,
              "fromCirrus": false,
            },
          ],
        },
        "name": "Greeter",
      }
    }
    fetchAccount={[Function]}
    fetchCirrusInstances={[Function]}
    fetchContractInfoRequest={[Function]}
    fetchState={[Function]}
    selectContractInstance={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="col-sm-6"
        >
          <div
            className="pt-card pt-elevation-2"
          >
            <div
              className="row"
            >
              <div
                className="col-sm-4"
              >
                <h4>
                  Greeter
                </h4>
              </div>
              <div
                className="col-sm-8 text-right"
              >
                <div
                  className="pt-button-group"
                >
                  <Blueprint.Button
                    className="pt-intent-primary pt-icon-th"
                    onClick={[Function]}
                    type="Button"
                  >
                    Tabular Data
                  </Blueprint.Button>
                  <Blueprint.Button
                    className="pt-icon-double-caret-vertical btn-sm"
                    onClick={[Function]}
                    type="button"
                  >
                    Show
                     Contracts
                  </Blueprint.Button>
                </div>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="col-sm-12"
              >
                <Blueprint.Collapse
                  className="col-sm-12"
                  component="table"
                  isOpen={false}
                  keepChildrenMounted={false}
                  transitionDuration={100}
                >
                  <table
                    className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                  >
                    <thead>
                      <tr>
                        <th>
                          Contract Address
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr
                        className=""
                        onClick={[Function]}
                      >
                        <td
                          style={
                            Object {
                              "border": "none",
                            }
                          }
                        >
                          <HexText
                            classes="small smd-pad-4"
                            value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                          />
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </Blueprint.Collapse>
              </div>
            </div>
          </div>
        </div>,
        <div
          className="col-md-6"
        />,
      ],
      "className": "row",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="pt-card pt-elevation-2"
          >
            <div
              className="row"
            >
              <div
                className="col-sm-4"
              >
                <h4>
                  Greeter
                </h4>
              </div>
              <div
                className="col-sm-8 text-right"
              >
                <div
                  className="pt-button-group"
                >
                  <Blueprint.Button
                    className="pt-intent-primary pt-icon-th"
                    onClick={[Function]}
                    type="Button"
                  >
                    Tabular Data
                  </Blueprint.Button>
                  <Blueprint.Button
                    className="pt-icon-double-caret-vertical btn-sm"
                    onClick={[Function]}
                    type="button"
                  >
                    Show
                     Contracts
                  </Blueprint.Button>
                </div>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="col-sm-12"
              >
                <Blueprint.Collapse
                  className="col-sm-12"
                  component="table"
                  isOpen={false}
                  keepChildrenMounted={false}
                  transitionDuration={100}
                >
                  <table
                    className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                  >
                    <thead>
                      <tr>
                        <th>
                          Contract Address
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr
                        className=""
                        onClick={[Function]}
                      >
                        <td
                          style={
                            Object {
                              "border": "none",
                            }
                          }
                        >
                          <HexText
                            classes="small smd-pad-4"
                            value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                          />
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </Blueprint.Collapse>
              </div>
            </div>
          </div>,
          "className": "col-sm-6",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="row"
              >
                <div
                  className="col-sm-4"
                >
                  <h4>
                    Greeter
                  </h4>
                </div>
                <div
                  className="col-sm-8 text-right"
                >
                  <div
                    className="pt-button-group"
                  >
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-th"
                      onClick={[Function]}
                      type="Button"
                    >
                      Tabular Data
                    </Blueprint.Button>
                    <Blueprint.Button
                      className="pt-icon-double-caret-vertical btn-sm"
                      onClick={[Function]}
                      type="button"
                    >
                      Show
                       Contracts
                    </Blueprint.Button>
                  </div>
                </div>
              </div>,
              <div
                className="row"
              >
                <div
                  className="col-sm-12"
                >
                  <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr
                          className=""
                          onClick={[Function]}
                        >
                          <td
                            style={
                              Object {
                                "border": "none",
                              }
                            }
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            />
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>
                </div>
              </div>,
            ],
            "className": "pt-card pt-elevation-2",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col-sm-4"
                  >
                    <h4>
                      Greeter
                    </h4>
                  </div>,
                  <div
                    className="col-sm-8 text-right"
                  >
                    <div
                      className="pt-button-group"
                    >
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-th"
                        onClick={[Function]}
                        type="Button"
                      >
                        Tabular Data
                      </Blueprint.Button>
                      <Blueprint.Button
                        className="pt-icon-double-caret-vertical btn-sm"
                        onClick={[Function]}
                        type="button"
                      >
                        Show
                         Contracts
                      </Blueprint.Button>
                    </div>
                  </div>,
                ],
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <h4>
                      Greeter
                    </h4>,
                    "className": "col-sm-4",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Greeter",
                    },
                    "ref": null,
                    "rendered": "Greeter",
                    "type": "h4",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="pt-button-group"
                    >
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-th"
                        onClick={[Function]}
                        type="Button"
                      >
                        Tabular Data
                      </Blueprint.Button>
                      <Blueprint.Button
                        className="pt-icon-double-caret-vertical btn-sm"
                        onClick={[Function]}
                        type="button"
                      >
                        Show
                         Contracts
                      </Blueprint.Button>
                    </div>,
                    "className": "col-sm-8 text-right",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <Blueprint.Button
                          className="pt-intent-primary pt-icon-th"
                          onClick={[Function]}
                          type="Button"
                        >
                          Tabular Data
                        </Blueprint.Button>,
                        <Blueprint.Button
                          className="pt-icon-double-caret-vertical btn-sm"
                          onClick={[Function]}
                          type="button"
                        >
                          Show
                           Contracts
                        </Blueprint.Button>,
                      ],
                      "className": "pt-button-group",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Tabular Data",
                          "className": "pt-intent-primary pt-icon-th",
                          "onClick": [Function],
                          "type": "Button",
                        },
                        "ref": null,
                        "rendered": "Tabular Data",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            "Show",
                            " Contracts",
                          ],
                          "className": "pt-icon-double-caret-vertical btn-sm",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "rendered": Array [
                          "Show",
                          " Contracts",
                        ],
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="col-sm-12"
                >
                  <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr
                          className=""
                          onClick={[Function]}
                        >
                          <td
                            style={
                              Object {
                                "border": "none",
                              }
                            }
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            />
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>
                </div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr
                          className=""
                          onClick={[Function]}
                        >
                          <td
                            style={
                              Object {
                                "border": "none",
                              }
                            }
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            />
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>,
                  "className": "col-sm-12",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr
                          className=""
                          onClick={[Function]}
                        >
                          <td
                            style={
                              Object {
                                "border": "none",
                              }
                            }
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            />
                          </td>
                        </tr>
                      </tbody>
                    </table>,
                    "className": "col-sm-12",
                    "component": "table",
                    "isOpen": false,
                    "keepChildrenMounted": false,
                    "transitionDuration": 100,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>,
                        <tbody>
                          <tr
                            className=""
                            onClick={[Function]}
                          >
                            <td
                              style={
                                Object {
                                  "border": "none",
                                }
                              }
                            >
                              <HexText
                                classes="small smd-pad-4"
                                value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                              />
                            </td>
                          </tr>
                        </tbody>,
                      ],
                      "className": "pt-table pt-interactive pt-condensed pt-striped smd-full-width",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <th>
                              Contract Address
                            </th>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Contract Address",
                            },
                            "ref": null,
                            "rendered": "Contract Address",
                            "type": "th",
                          },
                          "type": "tr",
                        },
                        "type": "thead",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <tr
                              className=""
                              onClick={[Function]}
                            >
                              <td
                                style={
                                  Object {
                                    "border": "none",
                                  }
                                }
                              >
                                <HexText
                                  classes="small smd-pad-4"
                                  value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                />
                              </td>
                            </tr>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": "card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-0",
                            "nodeType": "host",
                            "props": Object {
                              "children": <td
                                style={
                                  Object {
                                    "border": "none",
                                  }
                                }
                              >
                                <HexText
                                  classes="small smd-pad-4"
                                  value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                />
                              </td>,
                              "className": "",
                              "onClick": [Function],
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": <HexText
                                  classes="small smd-pad-4"
                                  value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                />,
                                "style": Object {
                                  "border": "none",
                                },
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "class",
                                "props": Object {
                                  "classes": "small smd-pad-4",
                                  "value": "0293f9b10a4453667db7fcfe74728c9d821add4b",
                                },
                                "ref": null,
                                "rendered": null,
                                "type": [Function],
                              },
                              "type": "td",
                            },
                            "type": "tr",
                          },
                        ],
                        "type": "tbody",
                      },
                    ],
                    "type": "table",
                  },
                  "type": [Function],
                },
                "type": "div",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": null,
          "className": "col-md-6",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="col-sm-6"
          >
            <div
              className="pt-card pt-elevation-2"
            >
              <div
                className="row"
              >
                <div
                  className="col-sm-4"
                >
                  <h4>
                    Greeter
                  </h4>
                </div>
                <div
                  className="col-sm-8 text-right"
                >
                  <div
                    className="pt-button-group"
                  >
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-th"
                      onClick={[Function]}
                      type="Button"
                    >
                      Tabular Data
                    </Blueprint.Button>
                    <Blueprint.Button
                      className="pt-icon-double-caret-vertical btn-sm"
                      onClick={[Function]}
                      type="button"
                    >
                      Show
                       Contracts
                    </Blueprint.Button>
                  </div>
                </div>
              </div>
              <div
                className="row"
              >
                <div
                  className="col-sm-12"
                >
                  <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr
                          className=""
                          onClick={[Function]}
                        >
                          <td
                            style={
                              Object {
                                "border": "none",
                              }
                            }
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            />
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>
                </div>
              </div>
            </div>
          </div>,
          <div
            className="col-md-6"
          />,
        ],
        "className": "row",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="pt-card pt-elevation-2"
            >
              <div
                className="row"
              >
                <div
                  className="col-sm-4"
                >
                  <h4>
                    Greeter
                  </h4>
                </div>
                <div
                  className="col-sm-8 text-right"
                >
                  <div
                    className="pt-button-group"
                  >
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-th"
                      onClick={[Function]}
                      type="Button"
                    >
                      Tabular Data
                    </Blueprint.Button>
                    <Blueprint.Button
                      className="pt-icon-double-caret-vertical btn-sm"
                      onClick={[Function]}
                      type="button"
                    >
                      Show
                       Contracts
                    </Blueprint.Button>
                  </div>
                </div>
              </div>
              <div
                className="row"
              >
                <div
                  className="col-sm-12"
                >
                  <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr
                          className=""
                          onClick={[Function]}
                        >
                          <td
                            style={
                              Object {
                                "border": "none",
                              }
                            }
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            />
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>
                </div>
              </div>
            </div>,
            "className": "col-sm-6",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="row"
                >
                  <div
                    className="col-sm-4"
                  >
                    <h4>
                      Greeter
                    </h4>
                  </div>
                  <div
                    className="col-sm-8 text-right"
                  >
                    <div
                      className="pt-button-group"
                    >
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-th"
                        onClick={[Function]}
                        type="Button"
                      >
                        Tabular Data
                      </Blueprint.Button>
                      <Blueprint.Button
                        className="pt-icon-double-caret-vertical btn-sm"
                        onClick={[Function]}
                        type="button"
                      >
                        Show
                         Contracts
                      </Blueprint.Button>
                    </div>
                  </div>
                </div>,
                <div
                  className="row"
                >
                  <div
                    className="col-sm-12"
                  >
                    <Blueprint.Collapse
                      className="col-sm-12"
                      component="table"
                      isOpen={false}
                      keepChildrenMounted={false}
                      transitionDuration={100}
                    >
                      <table
                        className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                      >
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr
                            className=""
                            onClick={[Function]}
                          >
                            <td
                              style={
                                Object {
                                  "border": "none",
                                }
                              }
                            >
                              <HexText
                                classes="small smd-pad-4"
                                value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                              />
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </Blueprint.Collapse>
                  </div>
                </div>,
              ],
              "className": "pt-card pt-elevation-2",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="col-sm-4"
                    >
                      <h4>
                        Greeter
                      </h4>
                    </div>,
                    <div
                      className="col-sm-8 text-right"
                    >
                      <div
                        className="pt-button-group"
                      >
                        <Blueprint.Button
                          className="pt-intent-primary pt-icon-th"
                          onClick={[Function]}
                          type="Button"
                        >
                          Tabular Data
                        </Blueprint.Button>
                        <Blueprint.Button
                          className="pt-icon-double-caret-vertical btn-sm"
                          onClick={[Function]}
                          type="button"
                        >
                          Show
                           Contracts
                        </Blueprint.Button>
                      </div>
                    </div>,
                  ],
                  "className": "row",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <h4>
                        Greeter
                      </h4>,
                      "className": "col-sm-4",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Greeter",
                      },
                      "ref": null,
                      "rendered": "Greeter",
                      "type": "h4",
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <div
                        className="pt-button-group"
                      >
                        <Blueprint.Button
                          className="pt-intent-primary pt-icon-th"
                          onClick={[Function]}
                          type="Button"
                        >
                          Tabular Data
                        </Blueprint.Button>
                        <Blueprint.Button
                          className="pt-icon-double-caret-vertical btn-sm"
                          onClick={[Function]}
                          type="button"
                        >
                          Show
                           Contracts
                        </Blueprint.Button>
                      </div>,
                      "className": "col-sm-8 text-right",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <Blueprint.Button
                            className="pt-intent-primary pt-icon-th"
                            onClick={[Function]}
                            type="Button"
                          >
                            Tabular Data
                          </Blueprint.Button>,
                          <Blueprint.Button
                            className="pt-icon-double-caret-vertical btn-sm"
                            onClick={[Function]}
                            type="button"
                          >
                            Show
                             Contracts
                          </Blueprint.Button>,
                        ],
                        "className": "pt-button-group",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": "Tabular Data",
                            "className": "pt-intent-primary pt-icon-th",
                            "onClick": [Function],
                            "type": "Button",
                          },
                          "ref": null,
                          "rendered": "Tabular Data",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": Array [
                              "Show",
                              " Contracts",
                            ],
                            "className": "pt-icon-double-caret-vertical btn-sm",
                            "onClick": [Function],
                            "type": "button",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Show",
                            " Contracts",
                          ],
                          "type": [Function],
                        },
                      ],
                      "type": "div",
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="col-sm-12"
                  >
                    <Blueprint.Collapse
                      className="col-sm-12"
                      component="table"
                      isOpen={false}
                      keepChildrenMounted={false}
                      transitionDuration={100}
                    >
                      <table
                        className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                      >
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr
                            className=""
                            onClick={[Function]}
                          >
                            <td
                              style={
                                Object {
                                  "border": "none",
                                }
                              }
                            >
                              <HexText
                                classes="small smd-pad-4"
                                value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                              />
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </Blueprint.Collapse>
                  </div>,
                  "className": "row",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Blueprint.Collapse
                      className="col-sm-12"
                      component="table"
                      isOpen={false}
                      keepChildrenMounted={false}
                      transitionDuration={100}
                    >
                      <table
                        className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                      >
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr
                            className=""
                            onClick={[Function]}
                          >
                            <td
                              style={
                                Object {
                                  "border": "none",
                                }
                              }
                            >
                              <HexText
                                classes="small smd-pad-4"
                                value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                              />
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </Blueprint.Collapse>,
                    "className": "col-sm-12",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <table
                        className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                      >
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr
                            className=""
                            onClick={[Function]}
                          >
                            <td
                              style={
                                Object {
                                  "border": "none",
                                }
                              }
                            >
                              <HexText
                                classes="small smd-pad-4"
                                value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                              />
                            </td>
                          </tr>
                        </tbody>
                      </table>,
                      "className": "col-sm-12",
                      "component": "table",
                      "isOpen": false,
                      "keepChildrenMounted": false,
                      "transitionDuration": 100,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <thead>
                            <tr>
                              <th>
                                Contract Address
                              </th>
                            </tr>
                          </thead>,
                          <tbody>
                            <tr
                              className=""
                              onClick={[Function]}
                            >
                              <td
                                style={
                                  Object {
                                    "border": "none",
                                  }
                                }
                              >
                                <HexText
                                  classes="small smd-pad-4"
                                  value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                />
                              </td>
                            </tr>
                          </tbody>,
                        ],
                        "className": "pt-table pt-interactive pt-condensed pt-striped smd-full-width",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <tr>
                              <th>
                                Contract Address
                              </th>
                            </tr>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <th>
                                Contract Address
                              </th>,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Contract Address",
                              },
                              "ref": null,
                              "rendered": "Contract Address",
                              "type": "th",
                            },
                            "type": "tr",
                          },
                          "type": "thead",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <tr
                                className=""
                                onClick={[Function]}
                              >
                                <td
                                  style={
                                    Object {
                                      "border": "none",
                                    }
                                  }
                                >
                                  <HexText
                                    classes="small smd-pad-4"
                                    value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                  />
                                </td>
                              </tr>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": "card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-0",
                              "nodeType": "host",
                              "props": Object {
                                "children": <td
                                  style={
                                    Object {
                                      "border": "none",
                                    }
                                  }
                                >
                                  <HexText
                                    classes="small smd-pad-4"
                                    value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                  />
                                </td>,
                                "className": "",
                                "onClick": [Function],
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": <HexText
                                    classes="small smd-pad-4"
                                    value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                  />,
                                  "style": Object {
                                    "border": "none",
                                  },
                                },
                                "ref": null,
                                "rendered": Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "class",
                                  "props": Object {
                                    "classes": "small smd-pad-4",
                                    "value": "0293f9b10a4453667db7fcfe74728c9d821add4b",
                                  },
                                  "ref": null,
                                  "rendered": null,
                                  "type": [Function],
                                },
                                "type": "td",
                              },
                              "type": "tr",
                            },
                          ],
                          "type": "tbody",
                        },
                      ],
                      "type": "table",
                    },
                    "type": [Function],
                  },
                  "type": "div",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": null,
            "className": "col-md-6",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`ContractCard: index render ContractCard instance selection 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ContractCard
    contract={
      Object {
        "contract": Object {
          "instances": Array [
            Object {
              "address": "0293f9b10a4453667db7fcfe74728c9d821add4b",
              "balance": 0,
              "createdAt": 1512481078000,
              "fromBloc": false,
              "fromCirrus": false,
              "selected": true,
              "state": Object {
                "greet": "function () returns (String)",
                "greeting": "sadasd",
              },
            },
          ],
        },
        "name": "Greeter",
      }
    }
    fetchAccount={[Function]}
    fetchCirrusInstances={[Function]}
    fetchContractInfoRequest={[Function]}
    fetchState={[Function]}
    selectContractInstance={[Function]}
    selectedChain="1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="col-sm-6"
        >
          <div
            className="pt-card pt-elevation-2"
          >
            <div
              className="row"
            >
              <div
                className="col-sm-4"
              >
                <h4>
                  Greeter
                </h4>
              </div>
              <div
                className="col-sm-8 text-right"
              >
                <div
                  className="pt-button-group"
                >
                  <Blueprint.Button
                    className="pt-intent-primary pt-icon-th"
                    onClick={[Function]}
                    type="Button"
                  >
                    Tabular Data
                  </Blueprint.Button>
                  <Blueprint.Button
                    className="pt-icon-double-caret-vertical btn-sm"
                    onClick={[Function]}
                    type="button"
                  >
                    Show
                     Contracts
                  </Blueprint.Button>
                </div>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="col-sm-12"
              >
                <Blueprint.Collapse
                  className="col-sm-12"
                  component="table"
                  isOpen={false}
                  keepChildrenMounted={false}
                  transitionDuration={100}
                >
                  <table
                    className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                  >
                    <thead>
                      <tr>
                        <th>
                          Contract Address
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr
                        className="selected"
                        onClick={[Function]}
                      >
                        <td
                          style={
                            Object {
                              "border": "none",
                            }
                          }
                        >
                          <HexText
                            classes="small smd-pad-4"
                            value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                          />
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </Blueprint.Collapse>
              </div>
            </div>
          </div>
        </div>,
        <div
          className="col-md-6"
        >
          <div
            className="pt-card pt-elevation-2"
          >
            <div
              className="row"
            >
              <div
                className="col-sm-6"
              >
                <ContractSource
                  contract={Object {}}
                />
              </div>
              <div
                className="col-sm-6 text-right"
              >
                <span
                  className="pt-monospace-text"
                >
                   
                  
                   
                </span>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="col-sm-12"
              >
                <table
                  className="pt-table pt-condensed pt-striped smd-full-width"
                >
                  <thead>
                    <tr>
                      <th>
                        Symbol
                      </th>
                      <th
                        className="text-right"
                      >
                        State
                      </th>
                      <th
                        className="text-right"
                        style={
                          Object {
                            "width": "105px",
                          }
                        }
                      />
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td
                        style={
                          Object {
                            "verticalAlign": "middle",
                          }
                        }
                      >
                        <withRouter(Connect(ReduxForm))
                          chainId="1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                          contractAddress="0293f9b10a4453667db7fcfe74728c9d821add4b"
                          contractKey="card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                          contractName="Greeter"
                          fromBloc={false}
                          fromCirrus={false}
                          methodKey="methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b"
                          symbolName="greet"
                        />
                      </td>
                      <td
                        style={
                          Object {
                            "maxWidth": "500px",
                          }
                        }
                      >
                        <pre>
                          function () returns (String)
                        </pre>
                      </td>
                    </tr>
                    <tr>
                      <td
                        style={
                          Object {
                            "maxWidth": "120px",
                            "overflow": "hidden",
                            "textOverflow": "ellipsis",
                            "verticalAlign": "middle",
                          }
                        }
                      >
                        <Blueprint.Tooltip
                          content="greeting"
                          hoverCloseDelay={0}
                          hoverOpenDelay={100}
                          isDisabled={false}
                          openOnTargetFocus={true}
                          position={0}
                          rootElementTag="span"
                          transitionDuration={100}
                          useSmartArrowPositioning={true}
                          useSmartPositioning={false}
                        >
                          greeting
                        </Blueprint.Tooltip>
                      </td>
                      <td
                        style={
                          Object {
                            "maxWidth": "500px",
                          }
                        }
                      >
                        <pre>
                          sadasd
                        </pre>
                      </td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>,
      ],
      "className": "row",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="pt-card pt-elevation-2"
          >
            <div
              className="row"
            >
              <div
                className="col-sm-4"
              >
                <h4>
                  Greeter
                </h4>
              </div>
              <div
                className="col-sm-8 text-right"
              >
                <div
                  className="pt-button-group"
                >
                  <Blueprint.Button
                    className="pt-intent-primary pt-icon-th"
                    onClick={[Function]}
                    type="Button"
                  >
                    Tabular Data
                  </Blueprint.Button>
                  <Blueprint.Button
                    className="pt-icon-double-caret-vertical btn-sm"
                    onClick={[Function]}
                    type="button"
                  >
                    Show
                     Contracts
                  </Blueprint.Button>
                </div>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="col-sm-12"
              >
                <Blueprint.Collapse
                  className="col-sm-12"
                  component="table"
                  isOpen={false}
                  keepChildrenMounted={false}
                  transitionDuration={100}
                >
                  <table
                    className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                  >
                    <thead>
                      <tr>
                        <th>
                          Contract Address
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr
                        className="selected"
                        onClick={[Function]}
                      >
                        <td
                          style={
                            Object {
                              "border": "none",
                            }
                          }
                        >
                          <HexText
                            classes="small smd-pad-4"
                            value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                          />
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </Blueprint.Collapse>
              </div>
            </div>
          </div>,
          "className": "col-sm-6",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="row"
              >
                <div
                  className="col-sm-4"
                >
                  <h4>
                    Greeter
                  </h4>
                </div>
                <div
                  className="col-sm-8 text-right"
                >
                  <div
                    className="pt-button-group"
                  >
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-th"
                      onClick={[Function]}
                      type="Button"
                    >
                      Tabular Data
                    </Blueprint.Button>
                    <Blueprint.Button
                      className="pt-icon-double-caret-vertical btn-sm"
                      onClick={[Function]}
                      type="button"
                    >
                      Show
                       Contracts
                    </Blueprint.Button>
                  </div>
                </div>
              </div>,
              <div
                className="row"
              >
                <div
                  className="col-sm-12"
                >
                  <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr
                          className="selected"
                          onClick={[Function]}
                        >
                          <td
                            style={
                              Object {
                                "border": "none",
                              }
                            }
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            />
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>
                </div>
              </div>,
            ],
            "className": "pt-card pt-elevation-2",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col-sm-4"
                  >
                    <h4>
                      Greeter
                    </h4>
                  </div>,
                  <div
                    className="col-sm-8 text-right"
                  >
                    <div
                      className="pt-button-group"
                    >
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-th"
                        onClick={[Function]}
                        type="Button"
                      >
                        Tabular Data
                      </Blueprint.Button>
                      <Blueprint.Button
                        className="pt-icon-double-caret-vertical btn-sm"
                        onClick={[Function]}
                        type="button"
                      >
                        Show
                         Contracts
                      </Blueprint.Button>
                    </div>
                  </div>,
                ],
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <h4>
                      Greeter
                    </h4>,
                    "className": "col-sm-4",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Greeter",
                    },
                    "ref": null,
                    "rendered": "Greeter",
                    "type": "h4",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="pt-button-group"
                    >
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-th"
                        onClick={[Function]}
                        type="Button"
                      >
                        Tabular Data
                      </Blueprint.Button>
                      <Blueprint.Button
                        className="pt-icon-double-caret-vertical btn-sm"
                        onClick={[Function]}
                        type="button"
                      >
                        Show
                         Contracts
                      </Blueprint.Button>
                    </div>,
                    "className": "col-sm-8 text-right",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <Blueprint.Button
                          className="pt-intent-primary pt-icon-th"
                          onClick={[Function]}
                          type="Button"
                        >
                          Tabular Data
                        </Blueprint.Button>,
                        <Blueprint.Button
                          className="pt-icon-double-caret-vertical btn-sm"
                          onClick={[Function]}
                          type="button"
                        >
                          Show
                           Contracts
                        </Blueprint.Button>,
                      ],
                      "className": "pt-button-group",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Tabular Data",
                          "className": "pt-intent-primary pt-icon-th",
                          "onClick": [Function],
                          "type": "Button",
                        },
                        "ref": null,
                        "rendered": "Tabular Data",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            "Show",
                            " Contracts",
                          ],
                          "className": "pt-icon-double-caret-vertical btn-sm",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "rendered": Array [
                          "Show",
                          " Contracts",
                        ],
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="col-sm-12"
                >
                  <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr
                          className="selected"
                          onClick={[Function]}
                        >
                          <td
                            style={
                              Object {
                                "border": "none",
                              }
                            }
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            />
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>
                </div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr
                          className="selected"
                          onClick={[Function]}
                        >
                          <td
                            style={
                              Object {
                                "border": "none",
                              }
                            }
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            />
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>,
                  "className": "col-sm-12",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr
                          className="selected"
                          onClick={[Function]}
                        >
                          <td
                            style={
                              Object {
                                "border": "none",
                              }
                            }
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            />
                          </td>
                        </tr>
                      </tbody>
                    </table>,
                    "className": "col-sm-12",
                    "component": "table",
                    "isOpen": false,
                    "keepChildrenMounted": false,
                    "transitionDuration": 100,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>,
                        <tbody>
                          <tr
                            className="selected"
                            onClick={[Function]}
                          >
                            <td
                              style={
                                Object {
                                  "border": "none",
                                }
                              }
                            >
                              <HexText
                                classes="small smd-pad-4"
                                value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                              />
                            </td>
                          </tr>
                        </tbody>,
                      ],
                      "className": "pt-table pt-interactive pt-condensed pt-striped smd-full-width",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <th>
                              Contract Address
                            </th>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Contract Address",
                            },
                            "ref": null,
                            "rendered": "Contract Address",
                            "type": "th",
                          },
                          "type": "tr",
                        },
                        "type": "thead",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <tr
                              className="selected"
                              onClick={[Function]}
                            >
                              <td
                                style={
                                  Object {
                                    "border": "none",
                                  }
                                }
                              >
                                <HexText
                                  classes="small smd-pad-4"
                                  value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                />
                              </td>
                            </tr>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": "card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-0",
                            "nodeType": "host",
                            "props": Object {
                              "children": <td
                                style={
                                  Object {
                                    "border": "none",
                                  }
                                }
                              >
                                <HexText
                                  classes="small smd-pad-4"
                                  value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                />
                              </td>,
                              "className": "selected",
                              "onClick": [Function],
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": <HexText
                                  classes="small smd-pad-4"
                                  value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                />,
                                "style": Object {
                                  "border": "none",
                                },
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "class",
                                "props": Object {
                                  "classes": "small smd-pad-4",
                                  "value": "0293f9b10a4453667db7fcfe74728c9d821add4b",
                                },
                                "ref": null,
                                "rendered": null,
                                "type": [Function],
                              },
                              "type": "td",
                            },
                            "type": "tr",
                          },
                        ],
                        "type": "tbody",
                      },
                    ],
                    "type": "table",
                  },
                  "type": [Function],
                },
                "type": "div",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="pt-card pt-elevation-2"
          >
            <div
              className="row"
            >
              <div
                className="col-sm-6"
              >
                <ContractSource
                  contract={Object {}}
                />
              </div>
              <div
                className="col-sm-6 text-right"
              >
                <span
                  className="pt-monospace-text"
                >
                   
                  
                   
                </span>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="col-sm-12"
              >
                <table
                  className="pt-table pt-condensed pt-striped smd-full-width"
                >
                  <thead>
                    <tr>
                      <th>
                        Symbol
                      </th>
                      <th
                        className="text-right"
                      >
                        State
                      </th>
                      <th
                        className="text-right"
                        style={
                          Object {
                            "width": "105px",
                          }
                        }
                      />
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td
                        style={
                          Object {
                            "verticalAlign": "middle",
                          }
                        }
                      >
                        <withRouter(Connect(ReduxForm))
                          chainId="1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                          contractAddress="0293f9b10a4453667db7fcfe74728c9d821add4b"
                          contractKey="card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                          contractName="Greeter"
                          fromBloc={false}
                          fromCirrus={false}
                          methodKey="methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b"
                          symbolName="greet"
                        />
                      </td>
                      <td
                        style={
                          Object {
                            "maxWidth": "500px",
                          }
                        }
                      >
                        <pre>
                          function () returns (String)
                        </pre>
                      </td>
                    </tr>
                    <tr>
                      <td
                        style={
                          Object {
                            "maxWidth": "120px",
                            "overflow": "hidden",
                            "textOverflow": "ellipsis",
                            "verticalAlign": "middle",
                          }
                        }
                      >
                        <Blueprint.Tooltip
                          content="greeting"
                          hoverCloseDelay={0}
                          hoverOpenDelay={100}
                          isDisabled={false}
                          openOnTargetFocus={true}
                          position={0}
                          rootElementTag="span"
                          transitionDuration={100}
                          useSmartArrowPositioning={true}
                          useSmartPositioning={false}
                        >
                          greeting
                        </Blueprint.Tooltip>
                      </td>
                      <td
                        style={
                          Object {
                            "maxWidth": "500px",
                          }
                        }
                      >
                        <pre>
                          sadasd
                        </pre>
                      </td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>,
          "className": "col-md-6",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="row"
              >
                <div
                  className="col-sm-6"
                >
                  <ContractSource
                    contract={Object {}}
                  />
                </div>
                <div
                  className="col-sm-6 text-right"
                >
                  <span
                    className="pt-monospace-text"
                  >
                     
                    
                     
                  </span>
                </div>
              </div>,
              <div
                className="row"
              >
                <div
                  className="col-sm-12"
                >
                  <table
                    className="pt-table pt-condensed pt-striped smd-full-width"
                  >
                    <thead>
                      <tr>
                        <th>
                          Symbol
                        </th>
                        <th
                          className="text-right"
                        >
                          State
                        </th>
                        <th
                          className="text-right"
                          style={
                            Object {
                              "width": "105px",
                            }
                          }
                        />
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td
                          style={
                            Object {
                              "verticalAlign": "middle",
                            }
                          }
                        >
                          <withRouter(Connect(ReduxForm))
                            chainId="1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                            contractAddress="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            contractKey="card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                            contractName="Greeter"
                            fromBloc={false}
                            fromCirrus={false}
                            methodKey="methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b"
                            symbolName="greet"
                          />
                        </td>
                        <td
                          style={
                            Object {
                              "maxWidth": "500px",
                            }
                          }
                        >
                          <pre>
                            function () returns (String)
                          </pre>
                        </td>
                      </tr>
                      <tr>
                        <td
                          style={
                            Object {
                              "maxWidth": "120px",
                              "overflow": "hidden",
                              "textOverflow": "ellipsis",
                              "verticalAlign": "middle",
                            }
                          }
                        >
                          <Blueprint.Tooltip
                            content="greeting"
                            hoverCloseDelay={0}
                            hoverOpenDelay={100}
                            isDisabled={false}
                            openOnTargetFocus={true}
                            position={0}
                            rootElementTag="span"
                            transitionDuration={100}
                            useSmartArrowPositioning={true}
                            useSmartPositioning={false}
                          >
                            greeting
                          </Blueprint.Tooltip>
                        </td>
                        <td
                          style={
                            Object {
                              "maxWidth": "500px",
                            }
                          }
                        >
                          <pre>
                            sadasd
                          </pre>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>,
            ],
            "className": "pt-card pt-elevation-2",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col-sm-6"
                  >
                    <ContractSource
                      contract={Object {}}
                    />
                  </div>,
                  <div
                    className="col-sm-6 text-right"
                  >
                    <span
                      className="pt-monospace-text"
                    >
                       
                      
                       
                    </span>
                  </div>,
                ],
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <ContractSource
                      contract={Object {}}
                    />,
                    "className": "col-sm-6",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "contract": Object {},
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <span
                      className="pt-monospace-text"
                    >
                       
                      
                       
                    </span>,
                    "className": "col-sm-6 text-right",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        " ",
                        "",
                        " ",
                      ],
                      "className": "pt-monospace-text",
                    },
                    "ref": null,
                    "rendered": Array [
                      " ",
                      "",
                      " ",
                    ],
                    "type": "span",
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="col-sm-12"
                >
                  <table
                    className="pt-table pt-condensed pt-striped smd-full-width"
                  >
                    <thead>
                      <tr>
                        <th>
                          Symbol
                        </th>
                        <th
                          className="text-right"
                        >
                          State
                        </th>
                        <th
                          className="text-right"
                          style={
                            Object {
                              "width": "105px",
                            }
                          }
                        />
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td
                          style={
                            Object {
                              "verticalAlign": "middle",
                            }
                          }
                        >
                          <withRouter(Connect(ReduxForm))
                            chainId="1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                            contractAddress="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            contractKey="card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                            contractName="Greeter"
                            fromBloc={false}
                            fromCirrus={false}
                            methodKey="methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b"
                            symbolName="greet"
                          />
                        </td>
                        <td
                          style={
                            Object {
                              "maxWidth": "500px",
                            }
                          }
                        >
                          <pre>
                            function () returns (String)
                          </pre>
                        </td>
                      </tr>
                      <tr>
                        <td
                          style={
                            Object {
                              "maxWidth": "120px",
                              "overflow": "hidden",
                              "textOverflow": "ellipsis",
                              "verticalAlign": "middle",
                            }
                          }
                        >
                          <Blueprint.Tooltip
                            content="greeting"
                            hoverCloseDelay={0}
                            hoverOpenDelay={100}
                            isDisabled={false}
                            openOnTargetFocus={true}
                            position={0}
                            rootElementTag="span"
                            transitionDuration={100}
                            useSmartArrowPositioning={true}
                            useSmartPositioning={false}
                          >
                            greeting
                          </Blueprint.Tooltip>
                        </td>
                        <td
                          style={
                            Object {
                              "maxWidth": "500px",
                            }
                          }
                        >
                          <pre>
                            sadasd
                          </pre>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <table
                    className="pt-table pt-condensed pt-striped smd-full-width"
                  >
                    <thead>
                      <tr>
                        <th>
                          Symbol
                        </th>
                        <th
                          className="text-right"
                        >
                          State
                        </th>
                        <th
                          className="text-right"
                          style={
                            Object {
                              "width": "105px",
                            }
                          }
                        />
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td
                          style={
                            Object {
                              "verticalAlign": "middle",
                            }
                          }
                        >
                          <withRouter(Connect(ReduxForm))
                            chainId="1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                            contractAddress="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            contractKey="card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                            contractName="Greeter"
                            fromBloc={false}
                            fromCirrus={false}
                            methodKey="methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b"
                            symbolName="greet"
                          />
                        </td>
                        <td
                          style={
                            Object {
                              "maxWidth": "500px",
                            }
                          }
                        >
                          <pre>
                            function () returns (String)
                          </pre>
                        </td>
                      </tr>
                      <tr>
                        <td
                          style={
                            Object {
                              "maxWidth": "120px",
                              "overflow": "hidden",
                              "textOverflow": "ellipsis",
                              "verticalAlign": "middle",
                            }
                          }
                        >
                          <Blueprint.Tooltip
                            content="greeting"
                            hoverCloseDelay={0}
                            hoverOpenDelay={100}
                            isDisabled={false}
                            openOnTargetFocus={true}
                            position={0}
                            rootElementTag="span"
                            transitionDuration={100}
                            useSmartArrowPositioning={true}
                            useSmartPositioning={false}
                          >
                            greeting
                          </Blueprint.Tooltip>
                        </td>
                        <td
                          style={
                            Object {
                              "maxWidth": "500px",
                            }
                          }
                        >
                          <pre>
                            sadasd
                          </pre>
                        </td>
                      </tr>
                    </tbody>
                  </table>,
                  "className": "col-sm-12",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <thead>
                        <tr>
                          <th>
                            Symbol
                          </th>
                          <th
                            className="text-right"
                          >
                            State
                          </th>
                          <th
                            className="text-right"
                            style={
                              Object {
                                "width": "105px",
                              }
                            }
                          />
                        </tr>
                      </thead>,
                      <tbody>
                        <tr>
                          <td
                            style={
                              Object {
                                "verticalAlign": "middle",
                              }
                            }
                          >
                            <withRouter(Connect(ReduxForm))
                              chainId="1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                              contractAddress="0293f9b10a4453667db7fcfe74728c9d821add4b"
                              contractKey="card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                              contractName="Greeter"
                              fromBloc={false}
                              fromCirrus={false}
                              methodKey="methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b"
                              symbolName="greet"
                            />
                          </td>
                          <td
                            style={
                              Object {
                                "maxWidth": "500px",
                              }
                            }
                          >
                            <pre>
                              function () returns (String)
                            </pre>
                          </td>
                        </tr>
                        <tr>
                          <td
                            style={
                              Object {
                                "maxWidth": "120px",
                                "overflow": "hidden",
                                "textOverflow": "ellipsis",
                                "verticalAlign": "middle",
                              }
                            }
                          >
                            <Blueprint.Tooltip
                              content="greeting"
                              hoverCloseDelay={0}
                              hoverOpenDelay={100}
                              isDisabled={false}
                              openOnTargetFocus={true}
                              position={0}
                              rootElementTag="span"
                              transitionDuration={100}
                              useSmartArrowPositioning={true}
                              useSmartPositioning={false}
                            >
                              greeting
                            </Blueprint.Tooltip>
                          </td>
                          <td
                            style={
                              Object {
                                "maxWidth": "500px",
                              }
                            }
                          >
                            <pre>
                              sadasd
                            </pre>
                          </td>
                        </tr>
                      </tbody>,
                    ],
                    "className": "pt-table pt-condensed pt-striped smd-full-width",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <tr>
                          <th>
                            Symbol
                          </th>
                          <th
                            className="text-right"
                          >
                            State
                          </th>
                          <th
                            className="text-right"
                            style={
                              Object {
                                "width": "105px",
                              }
                            }
                          />
                        </tr>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <th>
                              Symbol
                            </th>,
                            <th
                              className="text-right"
                            >
                              State
                            </th>,
                            <th
                              className="text-right"
                              style={
                                Object {
                                  "width": "105px",
                                }
                              }
                            />,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Symbol",
                            },
                            "ref": null,
                            "rendered": "Symbol",
                            "type": "th",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "State",
                              "className": "text-right",
                            },
                            "ref": null,
                            "rendered": "State",
                            "type": "th",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "className": "text-right",
                              "style": Object {
                                "width": "105px",
                              },
                            },
                            "ref": null,
                            "rendered": null,
                            "type": "th",
                          },
                        ],
                        "type": "tr",
                      },
                      "type": "thead",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <tr>
                            <td
                              style={
                                Object {
                                  "verticalAlign": "middle",
                                }
                              }
                            >
                              <withRouter(Connect(ReduxForm))
                                chainId="1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                                contractAddress="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                contractKey="card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                                contractName="Greeter"
                                fromBloc={false}
                                fromCirrus={false}
                                methodKey="methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b"
                                symbolName="greet"
                              />
                            </td>
                            <td
                              style={
                                Object {
                                  "maxWidth": "500px",
                                }
                              }
                            >
                              <pre>
                                function () returns (String)
                              </pre>
                            </td>
                          </tr>,
                          <tr>
                            <td
                              style={
                                Object {
                                  "maxWidth": "120px",
                                  "overflow": "hidden",
                                  "textOverflow": "ellipsis",
                                  "verticalAlign": "middle",
                                }
                              }
                            >
                              <Blueprint.Tooltip
                                content="greeting"
                                hoverCloseDelay={0}
                                hoverOpenDelay={100}
                                isDisabled={false}
                                openOnTargetFocus={true}
                                position={0}
                                rootElementTag="span"
                                transitionDuration={100}
                                useSmartArrowPositioning={true}
                                useSmartPositioning={false}
                              >
                                greeting
                              </Blueprint.Tooltip>
                            </td>
                            <td
                              style={
                                Object {
                                  "maxWidth": "500px",
                                }
                              }
                            >
                              <pre>
                                sadasd
                              </pre>
                            </td>
                          </tr>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": "greet 0",
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <td
                                style={
                                  Object {
                                    "verticalAlign": "middle",
                                  }
                                }
                              >
                                <withRouter(Connect(ReduxForm))
                                  chainId="1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                                  contractAddress="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                  contractKey="card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                                  contractName="Greeter"
                                  fromBloc={false}
                                  fromCirrus={false}
                                  methodKey="methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b"
                                  symbolName="greet"
                                />
                              </td>,
                              <td
                                style={
                                  Object {
                                    "maxWidth": "500px",
                                  }
                                }
                              >
                                <pre>
                                  function () returns (String)
                                </pre>
                              </td>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": <withRouter(Connect(ReduxForm))
                                  chainId="1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                                  contractAddress="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                  contractKey="card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                                  contractName="Greeter"
                                  fromBloc={false}
                                  fromCirrus={false}
                                  methodKey="methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b"
                                  symbolName="greet"
                                />,
                                "style": Object {
                                  "verticalAlign": "middle",
                                },
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": null,
                                "key": "methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b",
                                "nodeType": "function",
                                "props": Object {
                                  "chainId": "1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14",
                                  "contractAddress": "0293f9b10a4453667db7fcfe74728c9d821add4b",
                                  "contractKey": "card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14",
                                  "contractName": "Greeter",
                                  "fromBloc": false,
                                  "fromCirrus": false,
                                  "methodKey": "methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b",
                                  "symbolName": "greet",
                                },
                                "ref": null,
                                "rendered": null,
                                "type": [Function],
                              },
                              "type": "td",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": <pre>
                                  function () returns (String)
                                </pre>,
                                "style": Object {
                                  "maxWidth": "500px",
                                },
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "function () returns (String)",
                                },
                                "ref": null,
                                "rendered": "function () returns (String)",
                                "type": "pre",
                              },
                              "type": "td",
                            },
                          ],
                          "type": "tr",
                        },
                        Object {
                          "instance": null,
                          "key": "greeting 1",
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <td
                                style={
                                  Object {
                                    "maxWidth": "120px",
                                    "overflow": "hidden",
                                    "textOverflow": "ellipsis",
                                    "verticalAlign": "middle",
                                  }
                                }
                              >
                                <Blueprint.Tooltip
                                  content="greeting"
                                  hoverCloseDelay={0}
                                  hoverOpenDelay={100}
                                  isDisabled={false}
                                  openOnTargetFocus={true}
                                  position={0}
                                  rootElementTag="span"
                                  transitionDuration={100}
                                  useSmartArrowPositioning={true}
                                  useSmartPositioning={false}
                                >
                                  greeting
                                </Blueprint.Tooltip>
                              </td>,
                              <td
                                style={
                                  Object {
                                    "maxWidth": "500px",
                                  }
                                }
                              >
                                <pre>
                                  sadasd
                                </pre>
                              </td>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": <Blueprint.Tooltip
                                  content="greeting"
                                  hoverCloseDelay={0}
                                  hoverOpenDelay={100}
                                  isDisabled={false}
                                  openOnTargetFocus={true}
                                  position={0}
                                  rootElementTag="span"
                                  transitionDuration={100}
                                  useSmartArrowPositioning={true}
                                  useSmartPositioning={false}
                                >
                                  greeting
                                </Blueprint.Tooltip>,
                                "style": Object {
                                  "maxWidth": "120px",
                                  "overflow": "hidden",
                                  "textOverflow": "ellipsis",
                                  "verticalAlign": "middle",
                                },
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "class",
                                "props": Object {
                                  "children": "greeting",
                                  "content": "greeting",
                                  "hoverCloseDelay": 0,
                                  "hoverOpenDelay": 100,
                                  "isDisabled": false,
                                  "openOnTargetFocus": true,
                                  "position": 0,
                                  "rootElementTag": "span",
                                  "transitionDuration": 100,
                                  "useSmartArrowPositioning": true,
                                  "useSmartPositioning": false,
                                },
                                "ref": null,
                                "rendered": "greeting",
                                "type": [Function],
                              },
                              "type": "td",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": <pre>
                                  sadasd
                                </pre>,
                                "style": Object {
                                  "maxWidth": "500px",
                                },
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "sadasd",
                                },
                                "ref": null,
                                "rendered": "sadasd",
                                "type": "pre",
                              },
                              "type": "td",
                            },
                          ],
                          "type": "tr",
                        },
                      ],
                      "type": "tbody",
                    },
                  ],
                  "type": "table",
                },
                "type": "div",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="col-sm-6"
          >
            <div
              className="pt-card pt-elevation-2"
            >
              <div
                className="row"
              >
                <div
                  className="col-sm-4"
                >
                  <h4>
                    Greeter
                  </h4>
                </div>
                <div
                  className="col-sm-8 text-right"
                >
                  <div
                    className="pt-button-group"
                  >
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-th"
                      onClick={[Function]}
                      type="Button"
                    >
                      Tabular Data
                    </Blueprint.Button>
                    <Blueprint.Button
                      className="pt-icon-double-caret-vertical btn-sm"
                      onClick={[Function]}
                      type="button"
                    >
                      Show
                       Contracts
                    </Blueprint.Button>
                  </div>
                </div>
              </div>
              <div
                className="row"
              >
                <div
                  className="col-sm-12"
                >
                  <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr
                          className="selected"
                          onClick={[Function]}
                        >
                          <td
                            style={
                              Object {
                                "border": "none",
                              }
                            }
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            />
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>
                </div>
              </div>
            </div>
          </div>,
          <div
            className="col-md-6"
          >
            <div
              className="pt-card pt-elevation-2"
            >
              <div
                className="row"
              >
                <div
                  className="col-sm-6"
                >
                  <ContractSource
                    contract={Object {}}
                  />
                </div>
                <div
                  className="col-sm-6 text-right"
                >
                  <span
                    className="pt-monospace-text"
                  >
                     
                    
                     
                  </span>
                </div>
              </div>
              <div
                className="row"
              >
                <div
                  className="col-sm-12"
                >
                  <table
                    className="pt-table pt-condensed pt-striped smd-full-width"
                  >
                    <thead>
                      <tr>
                        <th>
                          Symbol
                        </th>
                        <th
                          className="text-right"
                        >
                          State
                        </th>
                        <th
                          className="text-right"
                          style={
                            Object {
                              "width": "105px",
                            }
                          }
                        />
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td
                          style={
                            Object {
                              "verticalAlign": "middle",
                            }
                          }
                        >
                          <withRouter(Connect(ReduxForm))
                            chainId="1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                            contractAddress="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            contractKey="card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                            contractName="Greeter"
                            fromBloc={false}
                            fromCirrus={false}
                            methodKey="methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b"
                            symbolName="greet"
                          />
                        </td>
                        <td
                          style={
                            Object {
                              "maxWidth": "500px",
                            }
                          }
                        >
                          <pre>
                            function () returns (String)
                          </pre>
                        </td>
                      </tr>
                      <tr>
                        <td
                          style={
                            Object {
                              "maxWidth": "120px",
                              "overflow": "hidden",
                              "textOverflow": "ellipsis",
                              "verticalAlign": "middle",
                            }
                          }
                        >
                          <Blueprint.Tooltip
                            content="greeting"
                            hoverCloseDelay={0}
                            hoverOpenDelay={100}
                            isDisabled={false}
                            openOnTargetFocus={true}
                            position={0}
                            rootElementTag="span"
                            transitionDuration={100}
                            useSmartArrowPositioning={true}
                            useSmartPositioning={false}
                          >
                            greeting
                          </Blueprint.Tooltip>
                        </td>
                        <td
                          style={
                            Object {
                              "maxWidth": "500px",
                            }
                          }
                        >
                          <pre>
                            sadasd
                          </pre>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>,
        ],
        "className": "row",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="pt-card pt-elevation-2"
            >
              <div
                className="row"
              >
                <div
                  className="col-sm-4"
                >
                  <h4>
                    Greeter
                  </h4>
                </div>
                <div
                  className="col-sm-8 text-right"
                >
                  <div
                    className="pt-button-group"
                  >
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-th"
                      onClick={[Function]}
                      type="Button"
                    >
                      Tabular Data
                    </Blueprint.Button>
                    <Blueprint.Button
                      className="pt-icon-double-caret-vertical btn-sm"
                      onClick={[Function]}
                      type="button"
                    >
                      Show
                       Contracts
                    </Blueprint.Button>
                  </div>
                </div>
              </div>
              <div
                className="row"
              >
                <div
                  className="col-sm-12"
                >
                  <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr
                          className="selected"
                          onClick={[Function]}
                        >
                          <td
                            style={
                              Object {
                                "border": "none",
                              }
                            }
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            />
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>
                </div>
              </div>
            </div>,
            "className": "col-sm-6",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="row"
                >
                  <div
                    className="col-sm-4"
                  >
                    <h4>
                      Greeter
                    </h4>
                  </div>
                  <div
                    className="col-sm-8 text-right"
                  >
                    <div
                      className="pt-button-group"
                    >
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-th"
                        onClick={[Function]}
                        type="Button"
                      >
                        Tabular Data
                      </Blueprint.Button>
                      <Blueprint.Button
                        className="pt-icon-double-caret-vertical btn-sm"
                        onClick={[Function]}
                        type="button"
                      >
                        Show
                         Contracts
                      </Blueprint.Button>
                    </div>
                  </div>
                </div>,
                <div
                  className="row"
                >
                  <div
                    className="col-sm-12"
                  >
                    <Blueprint.Collapse
                      className="col-sm-12"
                      component="table"
                      isOpen={false}
                      keepChildrenMounted={false}
                      transitionDuration={100}
                    >
                      <table
                        className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                      >
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr
                            className="selected"
                            onClick={[Function]}
                          >
                            <td
                              style={
                                Object {
                                  "border": "none",
                                }
                              }
                            >
                              <HexText
                                classes="small smd-pad-4"
                                value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                              />
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </Blueprint.Collapse>
                  </div>
                </div>,
              ],
              "className": "pt-card pt-elevation-2",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="col-sm-4"
                    >
                      <h4>
                        Greeter
                      </h4>
                    </div>,
                    <div
                      className="col-sm-8 text-right"
                    >
                      <div
                        className="pt-button-group"
                      >
                        <Blueprint.Button
                          className="pt-intent-primary pt-icon-th"
                          onClick={[Function]}
                          type="Button"
                        >
                          Tabular Data
                        </Blueprint.Button>
                        <Blueprint.Button
                          className="pt-icon-double-caret-vertical btn-sm"
                          onClick={[Function]}
                          type="button"
                        >
                          Show
                           Contracts
                        </Blueprint.Button>
                      </div>
                    </div>,
                  ],
                  "className": "row",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <h4>
                        Greeter
                      </h4>,
                      "className": "col-sm-4",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Greeter",
                      },
                      "ref": null,
                      "rendered": "Greeter",
                      "type": "h4",
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <div
                        className="pt-button-group"
                      >
                        <Blueprint.Button
                          className="pt-intent-primary pt-icon-th"
                          onClick={[Function]}
                          type="Button"
                        >
                          Tabular Data
                        </Blueprint.Button>
                        <Blueprint.Button
                          className="pt-icon-double-caret-vertical btn-sm"
                          onClick={[Function]}
                          type="button"
                        >
                          Show
                           Contracts
                        </Blueprint.Button>
                      </div>,
                      "className": "col-sm-8 text-right",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <Blueprint.Button
                            className="pt-intent-primary pt-icon-th"
                            onClick={[Function]}
                            type="Button"
                          >
                            Tabular Data
                          </Blueprint.Button>,
                          <Blueprint.Button
                            className="pt-icon-double-caret-vertical btn-sm"
                            onClick={[Function]}
                            type="button"
                          >
                            Show
                             Contracts
                          </Blueprint.Button>,
                        ],
                        "className": "pt-button-group",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": "Tabular Data",
                            "className": "pt-intent-primary pt-icon-th",
                            "onClick": [Function],
                            "type": "Button",
                          },
                          "ref": null,
                          "rendered": "Tabular Data",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": Array [
                              "Show",
                              " Contracts",
                            ],
                            "className": "pt-icon-double-caret-vertical btn-sm",
                            "onClick": [Function],
                            "type": "button",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Show",
                            " Contracts",
                          ],
                          "type": [Function],
                        },
                      ],
                      "type": "div",
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="col-sm-12"
                  >
                    <Blueprint.Collapse
                      className="col-sm-12"
                      component="table"
                      isOpen={false}
                      keepChildrenMounted={false}
                      transitionDuration={100}
                    >
                      <table
                        className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                      >
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr
                            className="selected"
                            onClick={[Function]}
                          >
                            <td
                              style={
                                Object {
                                  "border": "none",
                                }
                              }
                            >
                              <HexText
                                classes="small smd-pad-4"
                                value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                              />
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </Blueprint.Collapse>
                  </div>,
                  "className": "row",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Blueprint.Collapse
                      className="col-sm-12"
                      component="table"
                      isOpen={false}
                      keepChildrenMounted={false}
                      transitionDuration={100}
                    >
                      <table
                        className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                      >
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr
                            className="selected"
                            onClick={[Function]}
                          >
                            <td
                              style={
                                Object {
                                  "border": "none",
                                }
                              }
                            >
                              <HexText
                                classes="small smd-pad-4"
                                value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                              />
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </Blueprint.Collapse>,
                    "className": "col-sm-12",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <table
                        className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                      >
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr
                            className="selected"
                            onClick={[Function]}
                          >
                            <td
                              style={
                                Object {
                                  "border": "none",
                                }
                              }
                            >
                              <HexText
                                classes="small smd-pad-4"
                                value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                              />
                            </td>
                          </tr>
                        </tbody>
                      </table>,
                      "className": "col-sm-12",
                      "component": "table",
                      "isOpen": false,
                      "keepChildrenMounted": false,
                      "transitionDuration": 100,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <thead>
                            <tr>
                              <th>
                                Contract Address
                              </th>
                            </tr>
                          </thead>,
                          <tbody>
                            <tr
                              className="selected"
                              onClick={[Function]}
                            >
                              <td
                                style={
                                  Object {
                                    "border": "none",
                                  }
                                }
                              >
                                <HexText
                                  classes="small smd-pad-4"
                                  value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                />
                              </td>
                            </tr>
                          </tbody>,
                        ],
                        "className": "pt-table pt-interactive pt-condensed pt-striped smd-full-width",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <tr>
                              <th>
                                Contract Address
                              </th>
                            </tr>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <th>
                                Contract Address
                              </th>,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Contract Address",
                              },
                              "ref": null,
                              "rendered": "Contract Address",
                              "type": "th",
                            },
                            "type": "tr",
                          },
                          "type": "thead",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <tr
                                className="selected"
                                onClick={[Function]}
                              >
                                <td
                                  style={
                                    Object {
                                      "border": "none",
                                    }
                                  }
                                >
                                  <HexText
                                    classes="small smd-pad-4"
                                    value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                  />
                                </td>
                              </tr>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": "card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-0",
                              "nodeType": "host",
                              "props": Object {
                                "children": <td
                                  style={
                                    Object {
                                      "border": "none",
                                    }
                                  }
                                >
                                  <HexText
                                    classes="small smd-pad-4"
                                    value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                  />
                                </td>,
                                "className": "selected",
                                "onClick": [Function],
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": <HexText
                                    classes="small smd-pad-4"
                                    value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                  />,
                                  "style": Object {
                                    "border": "none",
                                  },
                                },
                                "ref": null,
                                "rendered": Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "class",
                                  "props": Object {
                                    "classes": "small smd-pad-4",
                                    "value": "0293f9b10a4453667db7fcfe74728c9d821add4b",
                                  },
                                  "ref": null,
                                  "rendered": null,
                                  "type": [Function],
                                },
                                "type": "td",
                              },
                              "type": "tr",
                            },
                          ],
                          "type": "tbody",
                        },
                      ],
                      "type": "table",
                    },
                    "type": [Function],
                  },
                  "type": "div",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="pt-card pt-elevation-2"
            >
              <div
                className="row"
              >
                <div
                  className="col-sm-6"
                >
                  <ContractSource
                    contract={Object {}}
                  />
                </div>
                <div
                  className="col-sm-6 text-right"
                >
                  <span
                    className="pt-monospace-text"
                  >
                     
                    
                     
                  </span>
                </div>
              </div>
              <div
                className="row"
              >
                <div
                  className="col-sm-12"
                >
                  <table
                    className="pt-table pt-condensed pt-striped smd-full-width"
                  >
                    <thead>
                      <tr>
                        <th>
                          Symbol
                        </th>
                        <th
                          className="text-right"
                        >
                          State
                        </th>
                        <th
                          className="text-right"
                          style={
                            Object {
                              "width": "105px",
                            }
                          }
                        />
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td
                          style={
                            Object {
                              "verticalAlign": "middle",
                            }
                          }
                        >
                          <withRouter(Connect(ReduxForm))
                            chainId="1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                            contractAddress="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            contractKey="card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                            contractName="Greeter"
                            fromBloc={false}
                            fromCirrus={false}
                            methodKey="methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b"
                            symbolName="greet"
                          />
                        </td>
                        <td
                          style={
                            Object {
                              "maxWidth": "500px",
                            }
                          }
                        >
                          <pre>
                            function () returns (String)
                          </pre>
                        </td>
                      </tr>
                      <tr>
                        <td
                          style={
                            Object {
                              "maxWidth": "120px",
                              "overflow": "hidden",
                              "textOverflow": "ellipsis",
                              "verticalAlign": "middle",
                            }
                          }
                        >
                          <Blueprint.Tooltip
                            content="greeting"
                            hoverCloseDelay={0}
                            hoverOpenDelay={100}
                            isDisabled={false}
                            openOnTargetFocus={true}
                            position={0}
                            rootElementTag="span"
                            transitionDuration={100}
                            useSmartArrowPositioning={true}
                            useSmartPositioning={false}
                          >
                            greeting
                          </Blueprint.Tooltip>
                        </td>
                        <td
                          style={
                            Object {
                              "maxWidth": "500px",
                            }
                          }
                        >
                          <pre>
                            sadasd
                          </pre>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>,
            "className": "col-md-6",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="row"
                >
                  <div
                    className="col-sm-6"
                  >
                    <ContractSource
                      contract={Object {}}
                    />
                  </div>
                  <div
                    className="col-sm-6 text-right"
                  >
                    <span
                      className="pt-monospace-text"
                    >
                       
                      
                       
                    </span>
                  </div>
                </div>,
                <div
                  className="row"
                >
                  <div
                    className="col-sm-12"
                  >
                    <table
                      className="pt-table pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Symbol
                          </th>
                          <th
                            className="text-right"
                          >
                            State
                          </th>
                          <th
                            className="text-right"
                            style={
                              Object {
                                "width": "105px",
                              }
                            }
                          />
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            style={
                              Object {
                                "verticalAlign": "middle",
                              }
                            }
                          >
                            <withRouter(Connect(ReduxForm))
                              chainId="1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                              contractAddress="0293f9b10a4453667db7fcfe74728c9d821add4b"
                              contractKey="card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                              contractName="Greeter"
                              fromBloc={false}
                              fromCirrus={false}
                              methodKey="methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b"
                              symbolName="greet"
                            />
                          </td>
                          <td
                            style={
                              Object {
                                "maxWidth": "500px",
                              }
                            }
                          >
                            <pre>
                              function () returns (String)
                            </pre>
                          </td>
                        </tr>
                        <tr>
                          <td
                            style={
                              Object {
                                "maxWidth": "120px",
                                "overflow": "hidden",
                                "textOverflow": "ellipsis",
                                "verticalAlign": "middle",
                              }
                            }
                          >
                            <Blueprint.Tooltip
                              content="greeting"
                              hoverCloseDelay={0}
                              hoverOpenDelay={100}
                              isDisabled={false}
                              openOnTargetFocus={true}
                              position={0}
                              rootElementTag="span"
                              transitionDuration={100}
                              useSmartArrowPositioning={true}
                              useSmartPositioning={false}
                            >
                              greeting
                            </Blueprint.Tooltip>
                          </td>
                          <td
                            style={
                              Object {
                                "maxWidth": "500px",
                              }
                            }
                          >
                            <pre>
                              sadasd
                            </pre>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </div>
                </div>,
              ],
              "className": "pt-card pt-elevation-2",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="col-sm-6"
                    >
                      <ContractSource
                        contract={Object {}}
                      />
                    </div>,
                    <div
                      className="col-sm-6 text-right"
                    >
                      <span
                        className="pt-monospace-text"
                      >
                         
                        
                         
                      </span>
                    </div>,
                  ],
                  "className": "row",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <ContractSource
                        contract={Object {}}
                      />,
                      "className": "col-sm-6",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "contract": Object {},
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <span
                        className="pt-monospace-text"
                      >
                         
                        
                         
                      </span>,
                      "className": "col-sm-6 text-right",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          " ",
                          "",
                          " ",
                        ],
                        "className": "pt-monospace-text",
                      },
                      "ref": null,
                      "rendered": Array [
                        " ",
                        "",
                        " ",
                      ],
                      "type": "span",
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="col-sm-12"
                  >
                    <table
                      className="pt-table pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Symbol
                          </th>
                          <th
                            className="text-right"
                          >
                            State
                          </th>
                          <th
                            className="text-right"
                            style={
                              Object {
                                "width": "105px",
                              }
                            }
                          />
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            style={
                              Object {
                                "verticalAlign": "middle",
                              }
                            }
                          >
                            <withRouter(Connect(ReduxForm))
                              chainId="1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                              contractAddress="0293f9b10a4453667db7fcfe74728c9d821add4b"
                              contractKey="card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                              contractName="Greeter"
                              fromBloc={false}
                              fromCirrus={false}
                              methodKey="methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b"
                              symbolName="greet"
                            />
                          </td>
                          <td
                            style={
                              Object {
                                "maxWidth": "500px",
                              }
                            }
                          >
                            <pre>
                              function () returns (String)
                            </pre>
                          </td>
                        </tr>
                        <tr>
                          <td
                            style={
                              Object {
                                "maxWidth": "120px",
                                "overflow": "hidden",
                                "textOverflow": "ellipsis",
                                "verticalAlign": "middle",
                              }
                            }
                          >
                            <Blueprint.Tooltip
                              content="greeting"
                              hoverCloseDelay={0}
                              hoverOpenDelay={100}
                              isDisabled={false}
                              openOnTargetFocus={true}
                              position={0}
                              rootElementTag="span"
                              transitionDuration={100}
                              useSmartArrowPositioning={true}
                              useSmartPositioning={false}
                            >
                              greeting
                            </Blueprint.Tooltip>
                          </td>
                          <td
                            style={
                              Object {
                                "maxWidth": "500px",
                              }
                            }
                          >
                            <pre>
                              sadasd
                            </pre>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </div>,
                  "className": "row",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <table
                      className="pt-table pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Symbol
                          </th>
                          <th
                            className="text-right"
                          >
                            State
                          </th>
                          <th
                            className="text-right"
                            style={
                              Object {
                                "width": "105px",
                              }
                            }
                          />
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            style={
                              Object {
                                "verticalAlign": "middle",
                              }
                            }
                          >
                            <withRouter(Connect(ReduxForm))
                              chainId="1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                              contractAddress="0293f9b10a4453667db7fcfe74728c9d821add4b"
                              contractKey="card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                              contractName="Greeter"
                              fromBloc={false}
                              fromCirrus={false}
                              methodKey="methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b"
                              symbolName="greet"
                            />
                          </td>
                          <td
                            style={
                              Object {
                                "maxWidth": "500px",
                              }
                            }
                          >
                            <pre>
                              function () returns (String)
                            </pre>
                          </td>
                        </tr>
                        <tr>
                          <td
                            style={
                              Object {
                                "maxWidth": "120px",
                                "overflow": "hidden",
                                "textOverflow": "ellipsis",
                                "verticalAlign": "middle",
                              }
                            }
                          >
                            <Blueprint.Tooltip
                              content="greeting"
                              hoverCloseDelay={0}
                              hoverOpenDelay={100}
                              isDisabled={false}
                              openOnTargetFocus={true}
                              position={0}
                              rootElementTag="span"
                              transitionDuration={100}
                              useSmartArrowPositioning={true}
                              useSmartPositioning={false}
                            >
                              greeting
                            </Blueprint.Tooltip>
                          </td>
                          <td
                            style={
                              Object {
                                "maxWidth": "500px",
                              }
                            }
                          >
                            <pre>
                              sadasd
                            </pre>
                          </td>
                        </tr>
                      </tbody>
                    </table>,
                    "className": "col-sm-12",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <thead>
                          <tr>
                            <th>
                              Symbol
                            </th>
                            <th
                              className="text-right"
                            >
                              State
                            </th>
                            <th
                              className="text-right"
                              style={
                                Object {
                                  "width": "105px",
                                }
                              }
                            />
                          </tr>
                        </thead>,
                        <tbody>
                          <tr>
                            <td
                              style={
                                Object {
                                  "verticalAlign": "middle",
                                }
                              }
                            >
                              <withRouter(Connect(ReduxForm))
                                chainId="1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                                contractAddress="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                contractKey="card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                                contractName="Greeter"
                                fromBloc={false}
                                fromCirrus={false}
                                methodKey="methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b"
                                symbolName="greet"
                              />
                            </td>
                            <td
                              style={
                                Object {
                                  "maxWidth": "500px",
                                }
                              }
                            >
                              <pre>
                                function () returns (String)
                              </pre>
                            </td>
                          </tr>
                          <tr>
                            <td
                              style={
                                Object {
                                  "maxWidth": "120px",
                                  "overflow": "hidden",
                                  "textOverflow": "ellipsis",
                                  "verticalAlign": "middle",
                                }
                              }
                            >
                              <Blueprint.Tooltip
                                content="greeting"
                                hoverCloseDelay={0}
                                hoverOpenDelay={100}
                                isDisabled={false}
                                openOnTargetFocus={true}
                                position={0}
                                rootElementTag="span"
                                transitionDuration={100}
                                useSmartArrowPositioning={true}
                                useSmartPositioning={false}
                              >
                                greeting
                              </Blueprint.Tooltip>
                            </td>
                            <td
                              style={
                                Object {
                                  "maxWidth": "500px",
                                }
                              }
                            >
                              <pre>
                                sadasd
                              </pre>
                            </td>
                          </tr>
                        </tbody>,
                      ],
                      "className": "pt-table pt-condensed pt-striped smd-full-width",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <tr>
                            <th>
                              Symbol
                            </th>
                            <th
                              className="text-right"
                            >
                              State
                            </th>
                            <th
                              className="text-right"
                              style={
                                Object {
                                  "width": "105px",
                                }
                              }
                            />
                          </tr>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <th>
                                Symbol
                              </th>,
                              <th
                                className="text-right"
                              >
                                State
                              </th>,
                              <th
                                className="text-right"
                                style={
                                  Object {
                                    "width": "105px",
                                  }
                                }
                              />,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Symbol",
                              },
                              "ref": null,
                              "rendered": "Symbol",
                              "type": "th",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "State",
                                "className": "text-right",
                              },
                              "ref": null,
                              "rendered": "State",
                              "type": "th",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "className": "text-right",
                                "style": Object {
                                  "width": "105px",
                                },
                              },
                              "ref": null,
                              "rendered": null,
                              "type": "th",
                            },
                          ],
                          "type": "tr",
                        },
                        "type": "thead",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <tr>
                              <td
                                style={
                                  Object {
                                    "verticalAlign": "middle",
                                  }
                                }
                              >
                                <withRouter(Connect(ReduxForm))
                                  chainId="1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                                  contractAddress="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                  contractKey="card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                                  contractName="Greeter"
                                  fromBloc={false}
                                  fromCirrus={false}
                                  methodKey="methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b"
                                  symbolName="greet"
                                />
                              </td>
                              <td
                                style={
                                  Object {
                                    "maxWidth": "500px",
                                  }
                                }
                              >
                                <pre>
                                  function () returns (String)
                                </pre>
                              </td>
                            </tr>,
                            <tr>
                              <td
                                style={
                                  Object {
                                    "maxWidth": "120px",
                                    "overflow": "hidden",
                                    "textOverflow": "ellipsis",
                                    "verticalAlign": "middle",
                                  }
                                }
                              >
                                <Blueprint.Tooltip
                                  content="greeting"
                                  hoverCloseDelay={0}
                                  hoverOpenDelay={100}
                                  isDisabled={false}
                                  openOnTargetFocus={true}
                                  position={0}
                                  rootElementTag="span"
                                  transitionDuration={100}
                                  useSmartArrowPositioning={true}
                                  useSmartPositioning={false}
                                >
                                  greeting
                                </Blueprint.Tooltip>
                              </td>
                              <td
                                style={
                                  Object {
                                    "maxWidth": "500px",
                                  }
                                }
                              >
                                <pre>
                                  sadasd
                                </pre>
                              </td>
                            </tr>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": "greet 0",
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                <td
                                  style={
                                    Object {
                                      "verticalAlign": "middle",
                                    }
                                  }
                                >
                                  <withRouter(Connect(ReduxForm))
                                    chainId="1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                                    contractAddress="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                    contractKey="card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                                    contractName="Greeter"
                                    fromBloc={false}
                                    fromCirrus={false}
                                    methodKey="methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b"
                                    symbolName="greet"
                                  />
                                </td>,
                                <td
                                  style={
                                    Object {
                                      "maxWidth": "500px",
                                    }
                                  }
                                >
                                  <pre>
                                    function () returns (String)
                                  </pre>
                                </td>,
                              ],
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": <withRouter(Connect(ReduxForm))
                                    chainId="1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                                    contractAddress="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                    contractKey="card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14"
                                    contractName="Greeter"
                                    fromBloc={false}
                                    fromCirrus={false}
                                    methodKey="methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b"
                                    symbolName="greet"
                                  />,
                                  "style": Object {
                                    "verticalAlign": "middle",
                                  },
                                },
                                "ref": null,
                                "rendered": Object {
                                  "instance": null,
                                  "key": "methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b",
                                  "nodeType": "function",
                                  "props": Object {
                                    "chainId": "1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14",
                                    "contractAddress": "0293f9b10a4453667db7fcfe74728c9d821add4b",
                                    "contractKey": "card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-1c8792a7e43d132487500936d946f510e7ff51635838060757bf886828403a14",
                                    "contractName": "Greeter",
                                    "fromBloc": false,
                                    "fromCirrus": false,
                                    "methodKey": "methodCallgreet0293f9b10a4453667db7fcfe74728c9d821add4b",
                                    "symbolName": "greet",
                                  },
                                  "ref": null,
                                  "rendered": null,
                                  "type": [Function],
                                },
                                "type": "td",
                              },
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": <pre>
                                    function () returns (String)
                                  </pre>,
                                  "style": Object {
                                    "maxWidth": "500px",
                                  },
                                },
                                "ref": null,
                                "rendered": Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "function () returns (String)",
                                  },
                                  "ref": null,
                                  "rendered": "function () returns (String)",
                                  "type": "pre",
                                },
                                "type": "td",
                              },
                            ],
                            "type": "tr",
                          },
                          Object {
                            "instance": null,
                            "key": "greeting 1",
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                <td
                                  style={
                                    Object {
                                      "maxWidth": "120px",
                                      "overflow": "hidden",
                                      "textOverflow": "ellipsis",
                                      "verticalAlign": "middle",
                                    }
                                  }
                                >
                                  <Blueprint.Tooltip
                                    content="greeting"
                                    hoverCloseDelay={0}
                                    hoverOpenDelay={100}
                                    isDisabled={false}
                                    openOnTargetFocus={true}
                                    position={0}
                                    rootElementTag="span"
                                    transitionDuration={100}
                                    useSmartArrowPositioning={true}
                                    useSmartPositioning={false}
                                  >
                                    greeting
                                  </Blueprint.Tooltip>
                                </td>,
                                <td
                                  style={
                                    Object {
                                      "maxWidth": "500px",
                                    }
                                  }
                                >
                                  <pre>
                                    sadasd
                                  </pre>
                                </td>,
                              ],
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": <Blueprint.Tooltip
                                    content="greeting"
                                    hoverCloseDelay={0}
                                    hoverOpenDelay={100}
                                    isDisabled={false}
                                    openOnTargetFocus={true}
                                    position={0}
                                    rootElementTag="span"
                                    transitionDuration={100}
                                    useSmartArrowPositioning={true}
                                    useSmartPositioning={false}
                                  >
                                    greeting
                                  </Blueprint.Tooltip>,
                                  "style": Object {
                                    "maxWidth": "120px",
                                    "overflow": "hidden",
                                    "textOverflow": "ellipsis",
                                    "verticalAlign": "middle",
                                  },
                                },
                                "ref": null,
                                "rendered": Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "class",
                                  "props": Object {
                                    "children": "greeting",
                                    "content": "greeting",
                                    "hoverCloseDelay": 0,
                                    "hoverOpenDelay": 100,
                                    "isDisabled": false,
                                    "openOnTargetFocus": true,
                                    "position": 0,
                                    "rootElementTag": "span",
                                    "transitionDuration": 100,
                                    "useSmartArrowPositioning": true,
                                    "useSmartPositioning": false,
                                  },
                                  "ref": null,
                                  "rendered": "greeting",
                                  "type": [Function],
                                },
                                "type": "td",
                              },
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": <pre>
                                    sadasd
                                  </pre>,
                                  "style": Object {
                                    "maxWidth": "500px",
                                  },
                                },
                                "ref": null,
                                "rendered": Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "sadasd",
                                  },
                                  "ref": null,
                                  "rendered": "sadasd",
                                  "type": "pre",
                                },
                                "type": "td",
                              },
                            ],
                            "type": "tr",
                          },
                        ],
                        "type": "tbody",
                      },
                    ],
                    "type": "table",
                  },
                  "type": "div",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`ContractCard: index render contract with empty values 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ContractCard
    contract=""
    fetchAccount={[Function]}
    fetchCirrusInstances={[Function]}
    fetchState={[Function]}
    selectContractInstance={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="col-sm-6"
        >
          <div
            className="pt-card pt-elevation-2"
          >
            <div
              className="row"
            >
              <div
                className="col-sm-4"
              >
                <h4 />
              </div>
              <div
                className="col-sm-8 text-right"
              >
                <div
                  className="pt-button-group"
                >
                  <Blueprint.Button
                    className="pt-intent-primary pt-icon-th"
                    onClick={[Function]}
                    type="Button"
                  >
                    Tabular Data
                  </Blueprint.Button>
                  <Blueprint.Button
                    className="pt-icon-double-caret-vertical btn-sm"
                    onClick={[Function]}
                    type="button"
                  >
                    Show
                     Contracts
                  </Blueprint.Button>
                </div>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="col-sm-12"
              >
                <Blueprint.Collapse
                  className="col-sm-12"
                  component="table"
                  isOpen={false}
                  keepChildrenMounted={false}
                  transitionDuration={100}
                >
                  <table
                    className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                  >
                    <thead>
                      <tr>
                        <th>
                          Contract Address
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td
                          className="text-center"
                          colSpan={2}
                        >
                          No Instances
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </Blueprint.Collapse>
              </div>
            </div>
          </div>
        </div>,
        <div
          className="col-md-6"
        />,
      ],
      "className": "row",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="pt-card pt-elevation-2"
          >
            <div
              className="row"
            >
              <div
                className="col-sm-4"
              >
                <h4 />
              </div>
              <div
                className="col-sm-8 text-right"
              >
                <div
                  className="pt-button-group"
                >
                  <Blueprint.Button
                    className="pt-intent-primary pt-icon-th"
                    onClick={[Function]}
                    type="Button"
                  >
                    Tabular Data
                  </Blueprint.Button>
                  <Blueprint.Button
                    className="pt-icon-double-caret-vertical btn-sm"
                    onClick={[Function]}
                    type="button"
                  >
                    Show
                     Contracts
                  </Blueprint.Button>
                </div>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="col-sm-12"
              >
                <Blueprint.Collapse
                  className="col-sm-12"
                  component="table"
                  isOpen={false}
                  keepChildrenMounted={false}
                  transitionDuration={100}
                >
                  <table
                    className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                  >
                    <thead>
                      <tr>
                        <th>
                          Contract Address
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td
                          className="text-center"
                          colSpan={2}
                        >
                          No Instances
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </Blueprint.Collapse>
              </div>
            </div>
          </div>,
          "className": "col-sm-6",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="row"
              >
                <div
                  className="col-sm-4"
                >
                  <h4 />
                </div>
                <div
                  className="col-sm-8 text-right"
                >
                  <div
                    className="pt-button-group"
                  >
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-th"
                      onClick={[Function]}
                      type="Button"
                    >
                      Tabular Data
                    </Blueprint.Button>
                    <Blueprint.Button
                      className="pt-icon-double-caret-vertical btn-sm"
                      onClick={[Function]}
                      type="button"
                    >
                      Show
                       Contracts
                    </Blueprint.Button>
                  </div>
                </div>
              </div>,
              <div
                className="row"
              >
                <div
                  className="col-sm-12"
                >
                  <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            className="text-center"
                            colSpan={2}
                          >
                            No Instances
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>
                </div>
              </div>,
            ],
            "className": "pt-card pt-elevation-2",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col-sm-4"
                  >
                    <h4 />
                  </div>,
                  <div
                    className="col-sm-8 text-right"
                  >
                    <div
                      className="pt-button-group"
                    >
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-th"
                        onClick={[Function]}
                        type="Button"
                      >
                        Tabular Data
                      </Blueprint.Button>
                      <Blueprint.Button
                        className="pt-icon-double-caret-vertical btn-sm"
                        onClick={[Function]}
                        type="button"
                      >
                        Show
                         Contracts
                      </Blueprint.Button>
                    </div>
                  </div>,
                ],
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <h4 />,
                    "className": "col-sm-4",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "h4",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="pt-button-group"
                    >
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-th"
                        onClick={[Function]}
                        type="Button"
                      >
                        Tabular Data
                      </Blueprint.Button>
                      <Blueprint.Button
                        className="pt-icon-double-caret-vertical btn-sm"
                        onClick={[Function]}
                        type="button"
                      >
                        Show
                         Contracts
                      </Blueprint.Button>
                    </div>,
                    "className": "col-sm-8 text-right",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <Blueprint.Button
                          className="pt-intent-primary pt-icon-th"
                          onClick={[Function]}
                          type="Button"
                        >
                          Tabular Data
                        </Blueprint.Button>,
                        <Blueprint.Button
                          className="pt-icon-double-caret-vertical btn-sm"
                          onClick={[Function]}
                          type="button"
                        >
                          Show
                           Contracts
                        </Blueprint.Button>,
                      ],
                      "className": "pt-button-group",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Tabular Data",
                          "className": "pt-intent-primary pt-icon-th",
                          "onClick": [Function],
                          "type": "Button",
                        },
                        "ref": null,
                        "rendered": "Tabular Data",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            "Show",
                            " Contracts",
                          ],
                          "className": "pt-icon-double-caret-vertical btn-sm",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "rendered": Array [
                          "Show",
                          " Contracts",
                        ],
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="col-sm-12"
                >
                  <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            className="text-center"
                            colSpan={2}
                          >
                            No Instances
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>
                </div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            className="text-center"
                            colSpan={2}
                          >
                            No Instances
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>,
                  "className": "col-sm-12",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            className="text-center"
                            colSpan={2}
                          >
                            No Instances
                          </td>
                        </tr>
                      </tbody>
                    </table>,
                    "className": "col-sm-12",
                    "component": "table",
                    "isOpen": false,
                    "keepChildrenMounted": false,
                    "transitionDuration": 100,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>,
                        <tbody>
                          <tr>
                            <td
                              className="text-center"
                              colSpan={2}
                            >
                              No Instances
                            </td>
                          </tr>
                        </tbody>,
                      ],
                      "className": "pt-table pt-interactive pt-condensed pt-striped smd-full-width",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <th>
                              Contract Address
                            </th>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Contract Address",
                            },
                            "ref": null,
                            "rendered": "Contract Address",
                            "type": "th",
                          },
                          "type": "tr",
                        },
                        "type": "thead",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <tr>
                              <td
                                className="text-center"
                                colSpan={2}
                              >
                                No Instances
                              </td>
                            </tr>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": "1",
                            "nodeType": "host",
                            "props": Object {
                              "children": <td
                                className="text-center"
                                colSpan={2}
                              >
                                No Instances
                              </td>,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "No Instances",
                                "className": "text-center",
                                "colSpan": 2,
                              },
                              "ref": null,
                              "rendered": "No Instances",
                              "type": "td",
                            },
                            "type": "tr",
                          },
                        ],
                        "type": "tbody",
                      },
                    ],
                    "type": "table",
                  },
                  "type": [Function],
                },
                "type": "div",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": null,
          "className": "col-md-6",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="col-sm-6"
          >
            <div
              className="pt-card pt-elevation-2"
            >
              <div
                className="row"
              >
                <div
                  className="col-sm-4"
                >
                  <h4 />
                </div>
                <div
                  className="col-sm-8 text-right"
                >
                  <div
                    className="pt-button-group"
                  >
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-th"
                      onClick={[Function]}
                      type="Button"
                    >
                      Tabular Data
                    </Blueprint.Button>
                    <Blueprint.Button
                      className="pt-icon-double-caret-vertical btn-sm"
                      onClick={[Function]}
                      type="button"
                    >
                      Show
                       Contracts
                    </Blueprint.Button>
                  </div>
                </div>
              </div>
              <div
                className="row"
              >
                <div
                  className="col-sm-12"
                >
                  <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            className="text-center"
                            colSpan={2}
                          >
                            No Instances
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>
                </div>
              </div>
            </div>
          </div>,
          <div
            className="col-md-6"
          />,
        ],
        "className": "row",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="pt-card pt-elevation-2"
            >
              <div
                className="row"
              >
                <div
                  className="col-sm-4"
                >
                  <h4 />
                </div>
                <div
                  className="col-sm-8 text-right"
                >
                  <div
                    className="pt-button-group"
                  >
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-th"
                      onClick={[Function]}
                      type="Button"
                    >
                      Tabular Data
                    </Blueprint.Button>
                    <Blueprint.Button
                      className="pt-icon-double-caret-vertical btn-sm"
                      onClick={[Function]}
                      type="button"
                    >
                      Show
                       Contracts
                    </Blueprint.Button>
                  </div>
                </div>
              </div>
              <div
                className="row"
              >
                <div
                  className="col-sm-12"
                >
                  <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            className="text-center"
                            colSpan={2}
                          >
                            No Instances
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>
                </div>
              </div>
            </div>,
            "className": "col-sm-6",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="row"
                >
                  <div
                    className="col-sm-4"
                  >
                    <h4 />
                  </div>
                  <div
                    className="col-sm-8 text-right"
                  >
                    <div
                      className="pt-button-group"
                    >
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-th"
                        onClick={[Function]}
                        type="Button"
                      >
                        Tabular Data
                      </Blueprint.Button>
                      <Blueprint.Button
                        className="pt-icon-double-caret-vertical btn-sm"
                        onClick={[Function]}
                        type="button"
                      >
                        Show
                         Contracts
                      </Blueprint.Button>
                    </div>
                  </div>
                </div>,
                <div
                  className="row"
                >
                  <div
                    className="col-sm-12"
                  >
                    <Blueprint.Collapse
                      className="col-sm-12"
                      component="table"
                      isOpen={false}
                      keepChildrenMounted={false}
                      transitionDuration={100}
                    >
                      <table
                        className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                      >
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td
                              className="text-center"
                              colSpan={2}
                            >
                              No Instances
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </Blueprint.Collapse>
                  </div>
                </div>,
              ],
              "className": "pt-card pt-elevation-2",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="col-sm-4"
                    >
                      <h4 />
                    </div>,
                    <div
                      className="col-sm-8 text-right"
                    >
                      <div
                        className="pt-button-group"
                      >
                        <Blueprint.Button
                          className="pt-intent-primary pt-icon-th"
                          onClick={[Function]}
                          type="Button"
                        >
                          Tabular Data
                        </Blueprint.Button>
                        <Blueprint.Button
                          className="pt-icon-double-caret-vertical btn-sm"
                          onClick={[Function]}
                          type="button"
                        >
                          Show
                           Contracts
                        </Blueprint.Button>
                      </div>
                    </div>,
                  ],
                  "className": "row",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <h4 />,
                      "className": "col-sm-4",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "h4",
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <div
                        className="pt-button-group"
                      >
                        <Blueprint.Button
                          className="pt-intent-primary pt-icon-th"
                          onClick={[Function]}
                          type="Button"
                        >
                          Tabular Data
                        </Blueprint.Button>
                        <Blueprint.Button
                          className="pt-icon-double-caret-vertical btn-sm"
                          onClick={[Function]}
                          type="button"
                        >
                          Show
                           Contracts
                        </Blueprint.Button>
                      </div>,
                      "className": "col-sm-8 text-right",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <Blueprint.Button
                            className="pt-intent-primary pt-icon-th"
                            onClick={[Function]}
                            type="Button"
                          >
                            Tabular Data
                          </Blueprint.Button>,
                          <Blueprint.Button
                            className="pt-icon-double-caret-vertical btn-sm"
                            onClick={[Function]}
                            type="button"
                          >
                            Show
                             Contracts
                          </Blueprint.Button>,
                        ],
                        "className": "pt-button-group",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": "Tabular Data",
                            "className": "pt-intent-primary pt-icon-th",
                            "onClick": [Function],
                            "type": "Button",
                          },
                          "ref": null,
                          "rendered": "Tabular Data",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": Array [
                              "Show",
                              " Contracts",
                            ],
                            "className": "pt-icon-double-caret-vertical btn-sm",
                            "onClick": [Function],
                            "type": "button",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Show",
                            " Contracts",
                          ],
                          "type": [Function],
                        },
                      ],
                      "type": "div",
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="col-sm-12"
                  >
                    <Blueprint.Collapse
                      className="col-sm-12"
                      component="table"
                      isOpen={false}
                      keepChildrenMounted={false}
                      transitionDuration={100}
                    >
                      <table
                        className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                      >
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td
                              className="text-center"
                              colSpan={2}
                            >
                              No Instances
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </Blueprint.Collapse>
                  </div>,
                  "className": "row",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Blueprint.Collapse
                      className="col-sm-12"
                      component="table"
                      isOpen={false}
                      keepChildrenMounted={false}
                      transitionDuration={100}
                    >
                      <table
                        className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                      >
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td
                              className="text-center"
                              colSpan={2}
                            >
                              No Instances
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </Blueprint.Collapse>,
                    "className": "col-sm-12",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <table
                        className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                      >
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td
                              className="text-center"
                              colSpan={2}
                            >
                              No Instances
                            </td>
                          </tr>
                        </tbody>
                      </table>,
                      "className": "col-sm-12",
                      "component": "table",
                      "isOpen": false,
                      "keepChildrenMounted": false,
                      "transitionDuration": 100,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <thead>
                            <tr>
                              <th>
                                Contract Address
                              </th>
                            </tr>
                          </thead>,
                          <tbody>
                            <tr>
                              <td
                                className="text-center"
                                colSpan={2}
                              >
                                No Instances
                              </td>
                            </tr>
                          </tbody>,
                        ],
                        "className": "pt-table pt-interactive pt-condensed pt-striped smd-full-width",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <tr>
                              <th>
                                Contract Address
                              </th>
                            </tr>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <th>
                                Contract Address
                              </th>,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Contract Address",
                              },
                              "ref": null,
                              "rendered": "Contract Address",
                              "type": "th",
                            },
                            "type": "tr",
                          },
                          "type": "thead",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <tr>
                                <td
                                  className="text-center"
                                  colSpan={2}
                                >
                                  No Instances
                                </td>
                              </tr>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": "1",
                              "nodeType": "host",
                              "props": Object {
                                "children": <td
                                  className="text-center"
                                  colSpan={2}
                                >
                                  No Instances
                                </td>,
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "No Instances",
                                  "className": "text-center",
                                  "colSpan": 2,
                                },
                                "ref": null,
                                "rendered": "No Instances",
                                "type": "td",
                              },
                              "type": "tr",
                            },
                          ],
                          "type": "tbody",
                        },
                      ],
                      "type": "table",
                    },
                    "type": [Function],
                  },
                  "type": "div",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": null,
            "className": "col-md-6",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`ContractCard: index render contract with mocked values 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ContractCard
    contract={
      Object {
        "contract": Object {
          "instances": Array [
            Object {
              "address": "0293f9b10a4453667db7fcfe74728c9d821add4b",
              "createdAt": 1512481078000,
              "fromBloc": true,
              "fromCirrus": true,
            },
          ],
        },
        "name": "Greeter",
      }
    }
    fetchAccount={[Function]}
    fetchCirrusInstances={[Function]}
    fetchContractInfoRequest={[Function]}
    fetchState={[Function]}
    selectContractInstance={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="col-sm-6"
        >
          <div
            className="pt-card pt-elevation-2"
          >
            <div
              className="row"
            >
              <div
                className="col-sm-4"
              >
                <h4>
                  Greeter
                </h4>
              </div>
              <div
                className="col-sm-8 text-right"
              >
                <div
                  className="pt-button-group"
                >
                  <Blueprint.Button
                    className="pt-intent-primary pt-icon-th"
                    onClick={[Function]}
                    type="Button"
                  >
                    Tabular Data
                  </Blueprint.Button>
                  <Blueprint.Button
                    className="pt-icon-double-caret-vertical btn-sm"
                    onClick={[Function]}
                    type="button"
                  >
                    Show
                     Contracts
                  </Blueprint.Button>
                </div>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="col-sm-12"
              >
                <Blueprint.Collapse
                  className="col-sm-12"
                  component="table"
                  isOpen={false}
                  keepChildrenMounted={false}
                  transitionDuration={100}
                >
                  <table
                    className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                  >
                    <thead>
                      <tr>
                        <th>
                          Contract Address
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr
                        className=""
                        onClick={[Function]}
                      >
                        <td
                          style={
                            Object {
                              "border": "none",
                            }
                          }
                        >
                          <HexText
                            classes="small smd-pad-4"
                            value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                          />
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </Blueprint.Collapse>
              </div>
            </div>
          </div>
        </div>,
        <div
          className="col-md-6"
        />,
      ],
      "className": "row",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="pt-card pt-elevation-2"
          >
            <div
              className="row"
            >
              <div
                className="col-sm-4"
              >
                <h4>
                  Greeter
                </h4>
              </div>
              <div
                className="col-sm-8 text-right"
              >
                <div
                  className="pt-button-group"
                >
                  <Blueprint.Button
                    className="pt-intent-primary pt-icon-th"
                    onClick={[Function]}
                    type="Button"
                  >
                    Tabular Data
                  </Blueprint.Button>
                  <Blueprint.Button
                    className="pt-icon-double-caret-vertical btn-sm"
                    onClick={[Function]}
                    type="button"
                  >
                    Show
                     Contracts
                  </Blueprint.Button>
                </div>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="col-sm-12"
              >
                <Blueprint.Collapse
                  className="col-sm-12"
                  component="table"
                  isOpen={false}
                  keepChildrenMounted={false}
                  transitionDuration={100}
                >
                  <table
                    className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                  >
                    <thead>
                      <tr>
                        <th>
                          Contract Address
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr
                        className=""
                        onClick={[Function]}
                      >
                        <td
                          style={
                            Object {
                              "border": "none",
                            }
                          }
                        >
                          <HexText
                            classes="small smd-pad-4"
                            value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                          />
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </Blueprint.Collapse>
              </div>
            </div>
          </div>,
          "className": "col-sm-6",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="row"
              >
                <div
                  className="col-sm-4"
                >
                  <h4>
                    Greeter
                  </h4>
                </div>
                <div
                  className="col-sm-8 text-right"
                >
                  <div
                    className="pt-button-group"
                  >
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-th"
                      onClick={[Function]}
                      type="Button"
                    >
                      Tabular Data
                    </Blueprint.Button>
                    <Blueprint.Button
                      className="pt-icon-double-caret-vertical btn-sm"
                      onClick={[Function]}
                      type="button"
                    >
                      Show
                       Contracts
                    </Blueprint.Button>
                  </div>
                </div>
              </div>,
              <div
                className="row"
              >
                <div
                  className="col-sm-12"
                >
                  <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr
                          className=""
                          onClick={[Function]}
                        >
                          <td
                            style={
                              Object {
                                "border": "none",
                              }
                            }
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            />
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>
                </div>
              </div>,
            ],
            "className": "pt-card pt-elevation-2",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col-sm-4"
                  >
                    <h4>
                      Greeter
                    </h4>
                  </div>,
                  <div
                    className="col-sm-8 text-right"
                  >
                    <div
                      className="pt-button-group"
                    >
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-th"
                        onClick={[Function]}
                        type="Button"
                      >
                        Tabular Data
                      </Blueprint.Button>
                      <Blueprint.Button
                        className="pt-icon-double-caret-vertical btn-sm"
                        onClick={[Function]}
                        type="button"
                      >
                        Show
                         Contracts
                      </Blueprint.Button>
                    </div>
                  </div>,
                ],
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <h4>
                      Greeter
                    </h4>,
                    "className": "col-sm-4",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Greeter",
                    },
                    "ref": null,
                    "rendered": "Greeter",
                    "type": "h4",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="pt-button-group"
                    >
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-th"
                        onClick={[Function]}
                        type="Button"
                      >
                        Tabular Data
                      </Blueprint.Button>
                      <Blueprint.Button
                        className="pt-icon-double-caret-vertical btn-sm"
                        onClick={[Function]}
                        type="button"
                      >
                        Show
                         Contracts
                      </Blueprint.Button>
                    </div>,
                    "className": "col-sm-8 text-right",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <Blueprint.Button
                          className="pt-intent-primary pt-icon-th"
                          onClick={[Function]}
                          type="Button"
                        >
                          Tabular Data
                        </Blueprint.Button>,
                        <Blueprint.Button
                          className="pt-icon-double-caret-vertical btn-sm"
                          onClick={[Function]}
                          type="button"
                        >
                          Show
                           Contracts
                        </Blueprint.Button>,
                      ],
                      "className": "pt-button-group",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Tabular Data",
                          "className": "pt-intent-primary pt-icon-th",
                          "onClick": [Function],
                          "type": "Button",
                        },
                        "ref": null,
                        "rendered": "Tabular Data",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            "Show",
                            " Contracts",
                          ],
                          "className": "pt-icon-double-caret-vertical btn-sm",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "rendered": Array [
                          "Show",
                          " Contracts",
                        ],
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="col-sm-12"
                >
                  <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr
                          className=""
                          onClick={[Function]}
                        >
                          <td
                            style={
                              Object {
                                "border": "none",
                              }
                            }
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            />
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>
                </div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr
                          className=""
                          onClick={[Function]}
                        >
                          <td
                            style={
                              Object {
                                "border": "none",
                              }
                            }
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            />
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>,
                  "className": "col-sm-12",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr
                          className=""
                          onClick={[Function]}
                        >
                          <td
                            style={
                              Object {
                                "border": "none",
                              }
                            }
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            />
                          </td>
                        </tr>
                      </tbody>
                    </table>,
                    "className": "col-sm-12",
                    "component": "table",
                    "isOpen": false,
                    "keepChildrenMounted": false,
                    "transitionDuration": 100,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>,
                        <tbody>
                          <tr
                            className=""
                            onClick={[Function]}
                          >
                            <td
                              style={
                                Object {
                                  "border": "none",
                                }
                              }
                            >
                              <HexText
                                classes="small smd-pad-4"
                                value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                              />
                            </td>
                          </tr>
                        </tbody>,
                      ],
                      "className": "pt-table pt-interactive pt-condensed pt-striped smd-full-width",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <th>
                              Contract Address
                            </th>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Contract Address",
                            },
                            "ref": null,
                            "rendered": "Contract Address",
                            "type": "th",
                          },
                          "type": "tr",
                        },
                        "type": "thead",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <tr
                              className=""
                              onClick={[Function]}
                            >
                              <td
                                style={
                                  Object {
                                    "border": "none",
                                  }
                                }
                              >
                                <HexText
                                  classes="small smd-pad-4"
                                  value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                />
                              </td>
                            </tr>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": "card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-0",
                            "nodeType": "host",
                            "props": Object {
                              "children": <td
                                style={
                                  Object {
                                    "border": "none",
                                  }
                                }
                              >
                                <HexText
                                  classes="small smd-pad-4"
                                  value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                />
                              </td>,
                              "className": "",
                              "onClick": [Function],
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": <HexText
                                  classes="small smd-pad-4"
                                  value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                />,
                                "style": Object {
                                  "border": "none",
                                },
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "class",
                                "props": Object {
                                  "classes": "small smd-pad-4",
                                  "value": "0293f9b10a4453667db7fcfe74728c9d821add4b",
                                },
                                "ref": null,
                                "rendered": null,
                                "type": [Function],
                              },
                              "type": "td",
                            },
                            "type": "tr",
                          },
                        ],
                        "type": "tbody",
                      },
                    ],
                    "type": "table",
                  },
                  "type": [Function],
                },
                "type": "div",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": null,
          "className": "col-md-6",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="col-sm-6"
          >
            <div
              className="pt-card pt-elevation-2"
            >
              <div
                className="row"
              >
                <div
                  className="col-sm-4"
                >
                  <h4>
                    Greeter
                  </h4>
                </div>
                <div
                  className="col-sm-8 text-right"
                >
                  <div
                    className="pt-button-group"
                  >
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-th"
                      onClick={[Function]}
                      type="Button"
                    >
                      Tabular Data
                    </Blueprint.Button>
                    <Blueprint.Button
                      className="pt-icon-double-caret-vertical btn-sm"
                      onClick={[Function]}
                      type="button"
                    >
                      Show
                       Contracts
                    </Blueprint.Button>
                  </div>
                </div>
              </div>
              <div
                className="row"
              >
                <div
                  className="col-sm-12"
                >
                  <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr
                          className=""
                          onClick={[Function]}
                        >
                          <td
                            style={
                              Object {
                                "border": "none",
                              }
                            }
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            />
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>
                </div>
              </div>
            </div>
          </div>,
          <div
            className="col-md-6"
          />,
        ],
        "className": "row",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="pt-card pt-elevation-2"
            >
              <div
                className="row"
              >
                <div
                  className="col-sm-4"
                >
                  <h4>
                    Greeter
                  </h4>
                </div>
                <div
                  className="col-sm-8 text-right"
                >
                  <div
                    className="pt-button-group"
                  >
                    <Blueprint.Button
                      className="pt-intent-primary pt-icon-th"
                      onClick={[Function]}
                      type="Button"
                    >
                      Tabular Data
                    </Blueprint.Button>
                    <Blueprint.Button
                      className="pt-icon-double-caret-vertical btn-sm"
                      onClick={[Function]}
                      type="button"
                    >
                      Show
                       Contracts
                    </Blueprint.Button>
                  </div>
                </div>
              </div>
              <div
                className="row"
              >
                <div
                  className="col-sm-12"
                >
                  <Blueprint.Collapse
                    className="col-sm-12"
                    component="table"
                    isOpen={false}
                    keepChildrenMounted={false}
                    transitionDuration={100}
                  >
                    <table
                      className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                    >
                      <thead>
                        <tr>
                          <th>
                            Contract Address
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr
                          className=""
                          onClick={[Function]}
                        >
                          <td
                            style={
                              Object {
                                "border": "none",
                              }
                            }
                          >
                            <HexText
                              classes="small smd-pad-4"
                              value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                            />
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </Blueprint.Collapse>
                </div>
              </div>
            </div>,
            "className": "col-sm-6",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="row"
                >
                  <div
                    className="col-sm-4"
                  >
                    <h4>
                      Greeter
                    </h4>
                  </div>
                  <div
                    className="col-sm-8 text-right"
                  >
                    <div
                      className="pt-button-group"
                    >
                      <Blueprint.Button
                        className="pt-intent-primary pt-icon-th"
                        onClick={[Function]}
                        type="Button"
                      >
                        Tabular Data
                      </Blueprint.Button>
                      <Blueprint.Button
                        className="pt-icon-double-caret-vertical btn-sm"
                        onClick={[Function]}
                        type="button"
                      >
                        Show
                         Contracts
                      </Blueprint.Button>
                    </div>
                  </div>
                </div>,
                <div
                  className="row"
                >
                  <div
                    className="col-sm-12"
                  >
                    <Blueprint.Collapse
                      className="col-sm-12"
                      component="table"
                      isOpen={false}
                      keepChildrenMounted={false}
                      transitionDuration={100}
                    >
                      <table
                        className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                      >
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr
                            className=""
                            onClick={[Function]}
                          >
                            <td
                              style={
                                Object {
                                  "border": "none",
                                }
                              }
                            >
                              <HexText
                                classes="small smd-pad-4"
                                value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                              />
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </Blueprint.Collapse>
                  </div>
                </div>,
              ],
              "className": "pt-card pt-elevation-2",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="col-sm-4"
                    >
                      <h4>
                        Greeter
                      </h4>
                    </div>,
                    <div
                      className="col-sm-8 text-right"
                    >
                      <div
                        className="pt-button-group"
                      >
                        <Blueprint.Button
                          className="pt-intent-primary pt-icon-th"
                          onClick={[Function]}
                          type="Button"
                        >
                          Tabular Data
                        </Blueprint.Button>
                        <Blueprint.Button
                          className="pt-icon-double-caret-vertical btn-sm"
                          onClick={[Function]}
                          type="button"
                        >
                          Show
                           Contracts
                        </Blueprint.Button>
                      </div>
                    </div>,
                  ],
                  "className": "row",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <h4>
                        Greeter
                      </h4>,
                      "className": "col-sm-4",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Greeter",
                      },
                      "ref": null,
                      "rendered": "Greeter",
                      "type": "h4",
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <div
                        className="pt-button-group"
                      >
                        <Blueprint.Button
                          className="pt-intent-primary pt-icon-th"
                          onClick={[Function]}
                          type="Button"
                        >
                          Tabular Data
                        </Blueprint.Button>
                        <Blueprint.Button
                          className="pt-icon-double-caret-vertical btn-sm"
                          onClick={[Function]}
                          type="button"
                        >
                          Show
                           Contracts
                        </Blueprint.Button>
                      </div>,
                      "className": "col-sm-8 text-right",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <Blueprint.Button
                            className="pt-intent-primary pt-icon-th"
                            onClick={[Function]}
                            type="Button"
                          >
                            Tabular Data
                          </Blueprint.Button>,
                          <Blueprint.Button
                            className="pt-icon-double-caret-vertical btn-sm"
                            onClick={[Function]}
                            type="button"
                          >
                            Show
                             Contracts
                          </Blueprint.Button>,
                        ],
                        "className": "pt-button-group",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": "Tabular Data",
                            "className": "pt-intent-primary pt-icon-th",
                            "onClick": [Function],
                            "type": "Button",
                          },
                          "ref": null,
                          "rendered": "Tabular Data",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": Array [
                              "Show",
                              " Contracts",
                            ],
                            "className": "pt-icon-double-caret-vertical btn-sm",
                            "onClick": [Function],
                            "type": "button",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Show",
                            " Contracts",
                          ],
                          "type": [Function],
                        },
                      ],
                      "type": "div",
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="col-sm-12"
                  >
                    <Blueprint.Collapse
                      className="col-sm-12"
                      component="table"
                      isOpen={false}
                      keepChildrenMounted={false}
                      transitionDuration={100}
                    >
                      <table
                        className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                      >
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr
                            className=""
                            onClick={[Function]}
                          >
                            <td
                              style={
                                Object {
                                  "border": "none",
                                }
                              }
                            >
                              <HexText
                                classes="small smd-pad-4"
                                value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                              />
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </Blueprint.Collapse>
                  </div>,
                  "className": "row",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Blueprint.Collapse
                      className="col-sm-12"
                      component="table"
                      isOpen={false}
                      keepChildrenMounted={false}
                      transitionDuration={100}
                    >
                      <table
                        className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                      >
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr
                            className=""
                            onClick={[Function]}
                          >
                            <td
                              style={
                                Object {
                                  "border": "none",
                                }
                              }
                            >
                              <HexText
                                classes="small smd-pad-4"
                                value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                              />
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </Blueprint.Collapse>,
                    "className": "col-sm-12",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <table
                        className="pt-table pt-interactive pt-condensed pt-striped smd-full-width"
                      >
                        <thead>
                          <tr>
                            <th>
                              Contract Address
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr
                            className=""
                            onClick={[Function]}
                          >
                            <td
                              style={
                                Object {
                                  "border": "none",
                                }
                              }
                            >
                              <HexText
                                classes="small smd-pad-4"
                                value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                              />
                            </td>
                          </tr>
                        </tbody>
                      </table>,
                      "className": "col-sm-12",
                      "component": "table",
                      "isOpen": false,
                      "keepChildrenMounted": false,
                      "transitionDuration": 100,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <thead>
                            <tr>
                              <th>
                                Contract Address
                              </th>
                            </tr>
                          </thead>,
                          <tbody>
                            <tr
                              className=""
                              onClick={[Function]}
                            >
                              <td
                                style={
                                  Object {
                                    "border": "none",
                                  }
                                }
                              >
                                <HexText
                                  classes="small smd-pad-4"
                                  value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                />
                              </td>
                            </tr>
                          </tbody>,
                        ],
                        "className": "pt-table pt-interactive pt-condensed pt-striped smd-full-width",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <tr>
                              <th>
                                Contract Address
                              </th>
                            </tr>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <th>
                                Contract Address
                              </th>,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Contract Address",
                              },
                              "ref": null,
                              "rendered": "Contract Address",
                              "type": "th",
                            },
                            "type": "tr",
                          },
                          "type": "thead",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <tr
                                className=""
                                onClick={[Function]}
                              >
                                <td
                                  style={
                                    Object {
                                      "border": "none",
                                    }
                                  }
                                >
                                  <HexText
                                    classes="small smd-pad-4"
                                    value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                  />
                                </td>
                              </tr>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": "card-data-0293f9b10a4453667db7fcfe74728c9d821add4b-0",
                              "nodeType": "host",
                              "props": Object {
                                "children": <td
                                  style={
                                    Object {
                                      "border": "none",
                                    }
                                  }
                                >
                                  <HexText
                                    classes="small smd-pad-4"
                                    value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                  />
                                </td>,
                                "className": "",
                                "onClick": [Function],
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": <HexText
                                    classes="small smd-pad-4"
                                    value="0293f9b10a4453667db7fcfe74728c9d821add4b"
                                  />,
                                  "style": Object {
                                    "border": "none",
                                  },
                                },
                                "ref": null,
                                "rendered": Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "class",
                                  "props": Object {
                                    "classes": "small smd-pad-4",
                                    "value": "0293f9b10a4453667db7fcfe74728c9d821add4b",
                                  },
                                  "ref": null,
                                  "rendered": null,
                                  "type": [Function],
                                },
                                "type": "td",
                              },
                              "type": "tr",
                            },
                          ],
                          "type": "tbody",
                        },
                      ],
                      "type": "table",
                    },
                    "type": [Function],
                  },
                  "type": "div",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": null,
            "className": "col-md-6",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
