// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateChain: index errorMessageFor 1`] = `null`;

exports[`CreateChain: index errorMessageFor 2`] = `"required"`;

exports[`CreateChain: index isValidFileType 1`] = `undefined`;

exports[`CreateChain: index isValidFileType 2`] = `"It should be an .sol extention file"`;

exports[`CreateChain: index isValidFileType 3`] = `"Please add contract source file"`;

exports[`CreateChain: index mapStateToProps with default state 1`] = `
Object {
  "abi": Object {
    "src": Object {
      "Governance": Object {
        "constr": Object {},
        "events": Object {},
        "funcs": Object {},
        "isLibrary": false,
        "modifiers": Object {},
        "types": Object {},
        "using": Object {},
        "vars": Object {
          "addRule": Object {
            "atBytes": 0,
            "constant": true,
            "dynamic": true,
            "initialValue": "\\"MajorityRules\\"",
            "public": null,
            "type": "String",
          },
          "removeRule": Object {
            "atBytes": 0,
            "constant": true,
            "dynamic": true,
            "initialValue": "\\"MajorityRules\\"",
            "public": null,
            "type": "String",
          },
          "temp": Object {
            "atBytes": 0,
            "constant": null,
            "dynamic": true,
            "initialValue": null,
            "public": null,
            "type": "String",
          },
        },
      },
    },
  },
  "contractName": "Governance",
  "createErrorMessage": null,
  "isOpen": true,
  "isSpinning": true,
  "publicKey": "undefined",
  "userCertificate": undefined,
}
`;

exports[`CreateChain: index remove members 1`] = `
Array [
  Object {
    "access": undefined,
    "commonName": undefined,
    "orgName": undefined,
    "orgUnit": undefined,
  },
]
`;

exports[`CreateChain: index remove members 2`] = `Array []`;

exports[`CreateChain: index render component with empty values 1`] = `
"<div className=\\"smd-pad-16\\">
  <Blueprint.Popover isDisabled={false} interactionKind={2} position={10} content={{...}} arrowSize={30} className=\\"\\" defaultIsOpen={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} inline={false} isModal={false} openOnTargetFocus={true} popoverClassName=\\"\\" rootElementTag=\\"span\\" transitionDuration={300} useSmartArrowPositioning={true} useSmartPositioning={false}>
    <Blueprint.AnchorButton onClick={[Function: onClick]} className=\\"pt-intent-primary pt-icon-add\\" id=\\"chains-create-chain-button\\" disabled={true} text=\\"Create Shard\\" />
  </Blueprint.Popover>
  <Blueprint.Dialog iconName=\\"flows\\" isOpen={false} onClose={[undefined]} title=\\"Create New Shard\\" className=\\"pt-dark\\" canOutsideClickClose={true}>
    <form>
      <div className=\\"pt-dialog-body create-chain-form\\">
        <div className=\\"row\\">
          <div className=\\"col-sm-3 text-right\\">
            <label className=\\"pt-label smd-pad-4\\">
              Shard Name
            </label>
          </div>
          <div className=\\"col-sm-9 smd-pad-4\\">
            <Field name=\\"chainName\\" component=\\"input\\" type=\\"text\\" placeholder=\\"Shard Name\\" className=\\"pt-input form-width\\" tabIndex=\\"1\\" required={true} />
            <span className=\\"error-text\\" />
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"col-sm-3 text-right\\">
            <label className=\\"pt-label smd-pad-4\\" style={{...}}>
              Contract
            </label>
          </div>
          <div className=\\"col-sm-9 smd-pad-4\\">
            <Field name=\\"radio\\" component=\\"input\\" type=\\"radio\\" value={0} label=\\"AutoApprove\\" checked={false} onClick={[Function: onClick]} />
             AutoApprove
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"col-sm-3 text-right\\" />
          <div className=\\"col-sm-9 smd-pad-4\\">
            <Field name=\\"radio\\" component=\\"input\\" type=\\"radio\\" value={0} label=\\"TwoIn\\" checked={false} onClick={[Function: onClick]} />
             TwoIn
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"col-sm-3 text-right\\" />
          <div className=\\"col-sm-9 smd-pad-4\\">
            <Field name=\\"radio\\" component=\\"input\\" type=\\"radio\\" value={0} label=\\"MajorityRules\\" checked={false} onClick={[Function: onClick]} />
             MajorityRules
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"col-sm-3 text-right\\" />
          <div className=\\"col-sm-9 smd-pad-4\\">
            <Field name=\\"radio\\" component=\\"input\\" type=\\"radio\\" value={0} label=\\"AdminOnly\\" checked={false} onClick={[Function: onClick]} />
             AdminOnly
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"col-sm-3 text-right\\" />
          <div className=\\"col-sm-9 smd-pad-4\\">
            <Field name=\\"radio\\" component=\\"input\\" type=\\"radio\\" value={1} label=\\"Governance\\" checked={true} onClick={[Function: onClick]} />
             Upload file
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"col-sm-3 text-right\\" />
          <div className=\\"col-sm-9 smd-pad-4\\">
            <Field id=\\"input-b\\" name=\\"contract\\" component={[Function]} dir=\\"auto\\" title=\\"Contract Source\\" />
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"col-sm-3 text-right\\">
            <label className=\\"pt-label smd-pad-4\\">
              VM
            </label>
          </div>
          <div className=\\"col-sm-9 smd-scrollable smd-pad-4\\">
            <div className=\\"pt-select\\">
              <Field className=\\"pt-select\\" component=\\"select\\" name=\\"vm\\" onChange={[Function: onChange]}>
                <option value=\\"SolidVM\\">
                  SolidVM
                </option>
                <option value=\\"EVM\\">
                  EVM
                </option>
              </Field>
            </div>
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"col-sm-3 text-right\\">
            <label className=\\"pt-label smd-pad-4\\">
              Arguments
            </label>
          </div>
          <div className=\\"col-sm-9 smd-scrollable smd-pad-4\\">
            <table className=\\"pt-table pt-condensed pt-striped smd-full-width\\">
              <thead>
                <tr>
                  <th>
                    Arg
                  </th>
                  <th>
                    Value
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td colSpan={3}>
                    <div className=\\"text-center\\">
                      Upload Contract
                    </div>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"pt-form-group col-sm-12 pt-intent-danger\\">
            <label className=\\"pt-label\\" htmlFor=\\"input-b\\">
              Shard Members
            </label>
            <div className=\\"pt-dialog-header no-member\\">
              <span className=\\"pt-dialog-header-title\\">
                No Members
              </span>
            </div>
            <span className=\\"error-text\\" />
            <withRouter(Connect(ReduxForm)) handler={[Function: bound updateMembers]} publicKey={[undefined]} />
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"pt-form-group col-sm-12 pt-intent-danger\\">
            <label className=\\"pt-label\\" htmlFor=\\"input-b\\">
              DApp Integrations
            </label>
            <div className=\\"pt-dialog-header no-integration\\">
              <span className=\\"pt-dialog-header-title\\">
                No DApp Integrations
              </span>
            </div>
            <span className=\\"error-text\\" />
            <withRouter(Connect(ReduxForm)) handler={[Function: bound updateIntegrations]} />
          </div>
        </div>
      </div>
      <div className=\\"pt-dialog-footer\\">
        <div className=\\"pt-dialog-footer-actions\\">
          <Blueprint.Button text=\\"Cancel\\" onClick={[Function: onClick]} />
          <Blueprint.Button intent={0} disabled={false} onClick={[Function]} text=\\"Create Shard\\" />
        </div>
      </div>
    </form>
  </Blueprint.Dialog>
</div>"
`;

exports[`CreateChain: index render component with values 1`] = `
"<div className=\\"smd-pad-16\\">
  <Blueprint.Popover isDisabled={false} interactionKind={2} position={10} content={{...}} arrowSize={30} className=\\"\\" defaultIsOpen={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} inline={false} isModal={false} openOnTargetFocus={true} popoverClassName=\\"\\" rootElementTag=\\"span\\" transitionDuration={300} useSmartArrowPositioning={true} useSmartPositioning={false}>
    <Blueprint.AnchorButton onClick={[Function: onClick]} className=\\"pt-intent-primary pt-icon-add\\" id=\\"chains-create-chain-button\\" disabled={true} text=\\"Create Shard\\" />
  </Blueprint.Popover>
  <Blueprint.Dialog iconName=\\"flows\\" isOpen={true} onClose={[undefined]} title=\\"Create New Shard\\" className=\\"pt-dark\\" canOutsideClickClose={true}>
    <form>
      <div className=\\"pt-dialog-body create-chain-form\\">
        <div className=\\"row\\">
          <div className=\\"col-sm-3 text-right\\">
            <label className=\\"pt-label smd-pad-4\\">
              Shard Name
            </label>
          </div>
          <div className=\\"col-sm-9 smd-pad-4\\">
            <Field name=\\"chainName\\" component=\\"input\\" type=\\"text\\" placeholder=\\"Shard Name\\" className=\\"pt-input form-width\\" tabIndex=\\"1\\" required={true} />
            <span className=\\"error-text\\" />
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"col-sm-3 text-right\\">
            <label className=\\"pt-label smd-pad-4\\" style={{...}}>
              Contract
            </label>
          </div>
          <div className=\\"col-sm-9 smd-pad-4\\">
            <Field name=\\"radio\\" component=\\"input\\" type=\\"radio\\" value={0} label=\\"AutoApprove\\" checked={false} onClick={[Function: onClick]} />
             AutoApprove
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"col-sm-3 text-right\\" />
          <div className=\\"col-sm-9 smd-pad-4\\">
            <Field name=\\"radio\\" component=\\"input\\" type=\\"radio\\" value={0} label=\\"TwoIn\\" checked={false} onClick={[Function: onClick]} />
             TwoIn
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"col-sm-3 text-right\\" />
          <div className=\\"col-sm-9 smd-pad-4\\">
            <Field name=\\"radio\\" component=\\"input\\" type=\\"radio\\" value={0} label=\\"MajorityRules\\" checked={false} onClick={[Function: onClick]} />
             MajorityRules
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"col-sm-3 text-right\\" />
          <div className=\\"col-sm-9 smd-pad-4\\">
            <Field name=\\"radio\\" component=\\"input\\" type=\\"radio\\" value={0} label=\\"AdminOnly\\" checked={false} onClick={[Function: onClick]} />
             AdminOnly
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"col-sm-3 text-right\\" />
          <div className=\\"col-sm-9 smd-pad-4\\">
            <Field name=\\"radio\\" component=\\"input\\" type=\\"radio\\" value={1} label=\\"Governance\\" checked={true} onClick={[Function: onClick]} />
             Upload file
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"col-sm-3 text-right\\" />
          <div className=\\"col-sm-9 smd-pad-4\\">
            <Field id=\\"input-b\\" name=\\"contract\\" component={[Function]} dir=\\"auto\\" title=\\"Contract Source\\" />
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"col-sm-3 text-right\\">
            <label className=\\"pt-label smd-pad-4\\">
              VM
            </label>
          </div>
          <div className=\\"col-sm-9 smd-scrollable smd-pad-4\\">
            <div className=\\"pt-select\\">
              <Field className=\\"pt-select\\" component=\\"select\\" name=\\"vm\\" onChange={[Function: onChange]}>
                <option value=\\"SolidVM\\">
                  SolidVM
                </option>
                <option value=\\"EVM\\">
                  EVM
                </option>
              </Field>
            </div>
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"col-sm-3 text-right\\">
            <label className=\\"pt-label smd-pad-4\\">
              Arguments
            </label>
          </div>
          <div className=\\"col-sm-9 smd-scrollable smd-pad-4\\">
            <table className=\\"pt-table pt-condensed pt-striped smd-full-width\\">
              <thead>
                <tr>
                  <th>
                    Arg
                  </th>
                  <th>
                    Value
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td colSpan={3}>
                    <div className=\\"text-center\\">
                      Upload Contract
                    </div>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"pt-form-group col-sm-12 pt-intent-danger\\">
            <label className=\\"pt-label\\" htmlFor=\\"input-b\\">
              Shard Members
            </label>
            <div className=\\"pt-dialog-header no-member\\">
              <span className=\\"pt-dialog-header-title\\">
                No Members
              </span>
            </div>
            <span className=\\"error-text\\" />
            <withRouter(Connect(ReduxForm)) handler={[Function: bound updateMembers]} publicKey={[undefined]} />
          </div>
        </div>
        <div className=\\"row\\">
          <div className=\\"pt-form-group col-sm-12 pt-intent-danger\\">
            <label className=\\"pt-label\\" htmlFor=\\"input-b\\">
              DApp Integrations
            </label>
            <div className=\\"pt-dialog-header no-integration\\">
              <span className=\\"pt-dialog-header-title\\">
                No DApp Integrations
              </span>
            </div>
            <span className=\\"error-text\\" />
            <withRouter(Connect(ReduxForm)) handler={[Function: bound updateIntegrations]} />
          </div>
        </div>
      </div>
      <div className=\\"pt-dialog-footer\\">
        <div className=\\"pt-dialog-footer-actions\\">
          <Blueprint.Button text=\\"Cancel\\" onClick={[Function: onClick]} />
          <Blueprint.Button intent={0} disabled={false} onClick={[Function]} text=\\"Create Shard\\" />
        </div>
      </div>
    </form>
  </Blueprint.Dialog>
</div>"
`;
